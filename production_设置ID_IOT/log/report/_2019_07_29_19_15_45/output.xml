<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.7.0 on linux)" generated="20190729 19:15:46.556">
<suite id="s1" name="Ai Test" source="/home/pi/production/case/ai_test.txt">
<test id="s1-t1" name="GET_Ready">
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time1}</var>
</assign>
<msg timestamp="20190729 19:15:47.766" level="INFO">${time1} = 2019-07-29 19:15:47</msg>
<status status="PASS" starttime="20190729 19:15:47.763" endtime="20190729 19:15:47.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${time1}</arg>
</arguments>
<msg timestamp="20190729 19:15:47.770" level="INFO">${time1} = 2019-07-29 19:15:47</msg>
<status status="PASS" starttime="20190729 19:15:47.768" endtime="20190729 19:15:47.771"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>25</arg>
</arguments>
<msg timestamp="20190729 19:16:12.775" level="INFO">Slept 25 seconds</msg>
<status status="PASS" starttime="20190729 19:15:47.773" endtime="20190729 19:16:12.777"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ABOX_TEST}==1</arg>
<arg>发起自检</arg>
</arguments>
<kw name="发起自检">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.con.alive=5</arg>
<arg>IOT-S1+AI.M.CON.ALIVE=5</arg>
</arguments>
<msg timestamp="20190729 19:16:12.995" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.con.alive=5
应该收到串口数据: IOT-S1+AI.M.CON.ALIVE=5
实际接收到的数据:  IOT-S1+AI.M.CON.ALIVE=5;</msg>
<status status="PASS" starttime="20190729 19:16:12.787" endtime="20190729 19:16:12.996"></status>
</kw>
<kw name="${i} IN RANGE [ 80 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.con.st=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:16:13.297" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.con.st=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CON.ST=1;</msg>
<msg timestamp="20190729 19:16:13.299" level="INFO">${a} = 1</msg>
<status status="PASS" starttime="20190729 19:16:13.001" endtime="20190729 19:16:13.300"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${a}'=='1'</arg>
</arguments>
<msg timestamp="20190729 19:16:13.305" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:16:13.301" endtime="20190729 19:16:13.306"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:12.999" endtime="20190729 19:16:13.307"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:12.997" endtime="20190729 19:16:13.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==79</arg>
<arg>Fail</arg>
<arg>串口状态连接失败</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:13.310" endtime="20190729 19:16:13.313"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.lev.switch=0</arg>
<arg>IOT-V1+AI.LEV.SWITCH=successful;</arg>
</arguments>
<msg timestamp="20190729 19:16:13.601" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.lev.switch=0
应该收到串口数据: IOT-V1+AI.LEV.SWITCH=successful;
实际接收到的数据:  IOT-V1+AI.LEV.SWITCH=successful;</msg>
<status status="PASS" starttime="20190729 19:16:13.315" endtime="20190729 19:16:13.602"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190729 19:16:18.606" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190729 19:16:13.604" endtime="20190729 19:16:18.608"></status>
</kw>
<kw name="${i} IN RANGE [ 8 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.self.check=1</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:16:18.818" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.self.check=1
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.SELF.CHECK=successful;</msg>
<msg timestamp="20190729 19:16:18.819" level="INFO">${b} = successful</msg>
<status status="PASS" starttime="20190729 19:16:18.612" endtime="20190729 19:16:18.820"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20190729 19:16:20.824" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190729 19:16:18.822" endtime="20190729 19:16:20.825"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.se.ch.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:16:21.033" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.se.ch.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.SE.CH.ACK=1;</msg>
<msg timestamp="20190729 19:16:21.035" level="INFO">${c} = 1</msg>
<status status="PASS" starttime="20190729 19:16:20.827" endtime="20190729 19:16:21.035"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${c}'=='1'</arg>
</arguments>
<msg timestamp="20190729 19:16:21.041" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:16:21.037" endtime="20190729 19:16:21.057"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:18.610" endtime="20190729 19:16:21.058"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:18.609" endtime="20190729 19:16:21.058"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==7</arg>
<arg>Fail</arg>
<arg>发起自检失败</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:21.060" endtime="20190729 19:16:21.063"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:12.783" endtime="20190729 19:16:21.064"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:12.779" endtime="20190729 19:16:21.065"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>开始时间:${time1}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:21.067" endtime="20190729 19:16:21.072"></status>
</kw>
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time3}</var>
</assign>
<msg timestamp="20190729 19:16:21.079" level="INFO">${time3} = 2019-07-29 19:16:21</msg>
<status status="PASS" starttime="20190729 19:16:21.075" endtime="20190729 19:16:21.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${time3}</arg>
</arguments>
<msg timestamp="20190729 19:16:21.087" level="INFO">${time3} = 2019-07-29 19:16:21</msg>
<status status="PASS" starttime="20190729 19:16:21.083" endtime="20190729 19:16:21.088"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:21.092" endtime="20190729 19:16:21.095"></status>
</kw>
<status status="PASS" starttime="20190729 19:15:47.758" endtime="20190729 19:16:21.097" critical="yes"></status>
</test>
<test id="s1-t2" name="TS01_TONGXIN">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${TONGXIN_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:21.117" endtime="20190729 19:16:21.121"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1+nw.e01.inf=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:16:21.336" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+D1+nw.e01.inf=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+D3+NW.E01.INF=865501042570318,EC20CEFAG,EC20CEFAGR06A06M4G_OCPU  1  [Oct;</msg>
<msg timestamp="20190729 19:16:21.336" level="INFO">${a} = 865501042570318,EC20CEFAG,EC20CEFAGR06A06M4G_OCPU  1  [Oct</msg>
<status status="PASS" starttime="20190729 19:16:21.124" endtime="20190729 19:16:21.337"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:16:21.341" level="INFO">['865501042570318', 'EC20CEFAG', 'EC20CEFAGR06A06M4G_OCPU', '1', '[Oct']</msg>
<msg timestamp="20190729 19:16:21.342" level="INFO">${b} = ['EC20CEFAGR06A06M4G_OCPU']</msg>
<status status="PASS" starttime="20190729 19:16:21.338" endtime="20190729 19:16:21.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${b[0]}'!='${communication_version}'</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:21.343" endtime="20190729 19:16:21.346"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+nw.e01.stu=?</arg>
<arg>IOT</arg>
<arg>wait_time=6</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:16:21.638" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+nw.e01.stu=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+NW.E01.STU=LTE,2,LTE,2,1,202,30;</msg>
<msg timestamp="20190729 19:16:21.639" level="INFO">${c} = LTE,2,LTE,2,1,202,30</msg>
<status status="PASS" starttime="20190729 19:16:21.347" endtime="20190729 19:16:21.639"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:21.642" level="INFO">['LTE', '2', 'LTE', '2', '1', '202', '30']</msg>
<msg timestamp="20190729 19:16:21.642" level="INFO">${d} = ['LTE']</msg>
<status status="PASS" starttime="20190729 19:16:21.640" endtime="20190729 19:16:21.643"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${e}</var>
</assign>
<msg timestamp="20190729 19:16:21.645" level="INFO">['LTE', '2', 'LTE', '2', '1', '202', '30']</msg>
<msg timestamp="20190729 19:16:21.646" level="INFO">${e} = ['2']</msg>
<status status="PASS" starttime="20190729 19:16:21.644" endtime="20190729 19:16:21.646"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190729 19:16:21.649" level="INFO">['LTE', '2', 'LTE', '2', '1', '202', '30']</msg>
<msg timestamp="20190729 19:16:21.649" level="INFO">${f} = ['LTE']</msg>
<status status="PASS" starttime="20190729 19:16:21.647" endtime="20190729 19:16:21.650"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${g}</var>
</assign>
<msg timestamp="20190729 19:16:21.653" level="INFO">['LTE', '2', 'LTE', '2', '1', '202', '30']</msg>
<msg timestamp="20190729 19:16:21.654" level="INFO">${g} = ['2']</msg>
<status status="PASS" starttime="20190729 19:16:21.651" endtime="20190729 19:16:21.654"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${h}</var>
</assign>
<msg timestamp="20190729 19:16:21.657" level="INFO">['LTE', '2', 'LTE', '2', '1', '202', '30']</msg>
<msg timestamp="20190729 19:16:21.657" level="INFO">${h} = ['1']</msg>
<status status="PASS" starttime="20190729 19:16:21.655" endtime="20190729 19:16:21.658"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${communication_1}</arg>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190729 19:16:21.662" level="INFO">${one} = 1</msg>
<status status="PASS" starttime="20190729 19:16:21.659" endtime="20190729 19:16:21.662"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${communication_1}</arg>
<arg>${f[0]}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190729 19:16:21.666" level="INFO">${two} = 1</msg>
<status status="PASS" starttime="20190729 19:16:21.663" endtime="20190729 19:16:21.666"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${one}!=1 or ${two}!=1 or '${e[0]}'!='${communication_2}' or '${g[0]}'!= '${communication_2}' or '${h[0]}'!='${communication_3}'</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:21.667" endtime="20190729 19:16:21.672"></status>
</kw>
<kw name="${I} IN RANGE [ 30 ]" type="for">
<kw name="${I} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+nw.e01.stu=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:16:21.940" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+nw.e01.stu=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+NW.E01.STU=LTE,2,LTE,2,1,196,27;</msg>
<msg timestamp="20190729 19:16:21.942" level="INFO">${c} = LTE,2,LTE,2,1,196,27</msg>
<status status="PASS" starttime="20190729 19:16:21.675" endtime="20190729 19:16:21.942"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${m}</var>
</assign>
<msg timestamp="20190729 19:16:21.947" level="INFO">['LTE', '2', 'LTE', '2', '1', '196', '27']</msg>
<msg timestamp="20190729 19:16:21.948" level="INFO">${m} = ['27']</msg>
<status status="PASS" starttime="20190729 19:16:21.944" endtime="20190729 19:16:21.948"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${m[0]}</arg>
</arguments>
<assign>
<var>${m}</var>
</assign>
<msg timestamp="20190729 19:16:21.953" level="INFO">${m} = 27</msg>
<status status="PASS" starttime="20190729 19:16:21.950" endtime="20190729 19:16:21.954"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${m}&gt;${signal_value}</arg>
</arguments>
<msg timestamp="20190729 19:16:21.959" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:16:21.956" endtime="20190729 19:16:21.960"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:21.674" endtime="20190729 19:16:21.960"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:21.672" endtime="20190729 19:16:21.961"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${I}==29</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:21.963" endtime="20190729 19:16:21.966"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:21.969" endtime="20190729 19:16:21.973"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:21.106" endtime="20190729 19:16:21.974" critical="yes"></status>
</test>
<test id="s1-t3" name="TS03_串口2">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${SERIAL_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:21.992" endtime="20190729 19:16:21.996"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-crt-chn2-baud115200</arg>
<arg>(bsp)usart</arg>
</arguments>
<msg timestamp="20190729 19:16:22.242" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-crt-chn2-baud115200
应该收到串口数据: (bsp)usart
实际接收到的数据:  (bsp)usart callback, handle:0x1FFF4550, sta_calb:0.</msg>
<status status="PASS" starttime="20190729 19:16:21.999" endtime="20190729 19:16:22.243"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-opn-chn2</arg>
<arg>(bsp)usar</arg>
</arguments>
<msg timestamp="20190729 19:16:22.544" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-opn-chn2
应该收到串口数据: (bsp)usar
实际接收到的数据:  (bsp)usart open, handle:0x1FFF4550, ret:0.</msg>
<status status="PASS" starttime="20190729 19:16:22.244" endtime="20190729 19:16:22.545"></status>
</kw>
<kw name="Start Ama0 Recv" library="SerialLibrary">
<status status="PASS" starttime="20190729 19:16:22.546" endtime="20190729 19:16:22.559"></status>
</kw>
<kw name="${i} IN RANGE [ 5 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 19:16:22.847" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF4550, ret:0.</msg>
<status status="PASS" starttime="20190729 19:16:22.567" endtime="20190729 19:16:22.848"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:22.564" endtime="20190729 19:16:22.849"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 19:16:23.150" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF4550, ret:0.</msg>
<status status="PASS" starttime="20190729 19:16:22.851" endtime="20190729 19:16:23.152"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:22.850" endtime="20190729 19:16:23.152"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 19:16:23.453" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF4550, ret:0.</msg>
<status status="PASS" starttime="20190729 19:16:23.155" endtime="20190729 19:16:23.454"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:23.153" endtime="20190729 19:16:23.455"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 19:16:23.756" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF4550, ret:0.</msg>
<status status="PASS" starttime="20190729 19:16:23.458" endtime="20190729 19:16:23.758"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:23.456" endtime="20190729 19:16:23.758"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 19:16:24.059" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF4550, ret:0.</msg>
<status status="PASS" starttime="20190729 19:16:23.761" endtime="20190729 19:16:24.061"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:23.759" endtime="20190729 19:16:24.061"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:22.562" endtime="20190729 19:16:24.062"></status>
</kw>
<kw name="Txtrwx Read" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2.txt</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20190729 19:16:24.068" level="INFO">${r} = hello
hello
hello
hello
hello
</msg>
<status status="PASS" starttime="20190729 19:16:24.064" endtime="20190729 19:16:24.069"></status>
</kw>
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2.txt</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:24.071" endtime="20190729 19:16:24.153"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${r}</arg>
<arg>hello</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:16:24.161" level="INFO">${a} = 1</msg>
<status status="PASS" starttime="20190729 19:16:24.156" endtime="20190729 19:16:24.161"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${a}==0</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:24.164" endtime="20190729 19:16:24.170"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20190729 19:16:26.175" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190729 19:16:24.173" endtime="20190729 19:16:26.177"></status>
</kw>
<kw name="Serial Ama0 Send" library="SerialLibrary">
<arguments>
<arg>goodgoodgood</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:26.179" endtime="20190729 19:16:26.185"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20190729 19:16:28.190" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190729 19:16:26.187" endtime="20190729 19:16:28.192"></status>
</kw>
<kw name="Txtrwx Read" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2_send.txt</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20190729 19:16:28.197" level="INFO">${r} = goodgoodgood
</msg>
<status status="PASS" starttime="20190729 19:16:28.194" endtime="20190729 19:16:28.198"></status>
</kw>
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2_send.txt</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:28.200" endtime="20190729 19:16:28.285"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${r}</arg>
<arg>goodgoodgood</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:16:28.292" level="INFO">${a} = 1</msg>
<status status="PASS" starttime="20190729 19:16:28.288" endtime="20190729 19:16:28.292"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${a}==0</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:28.295" endtime="20190729 19:16:28.300"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:28.304" endtime="20190729 19:16:28.306"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:21.980" endtime="20190729 19:16:28.308" critical="yes"></status>
</test>
<test id="s1-t4" name="TS04_定位">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${GPS_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:28.328" endtime="20190729 19:16:28.330"></status>
</kw>
<kw name="${I} IN RANGE [ 120 ]" type="for">
<kw name="${I} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+GNSS=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:16:28.539" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+GNSS=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+GNSS= MC120A, 1.1.1,1,1,14,1564636438,00000000;</msg>
<msg timestamp="20190729 19:16:28.540" level="INFO">${a} =  MC120A, 1.1.1,1,1,14,1564636438,00000000</msg>
<status status="PASS" starttime="20190729 19:16:28.334" endtime="20190729 19:16:28.541"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190729 19:16:28.543" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '14', '1564636438', '00000000']</msg>
<msg timestamp="20190729 19:16:28.544" level="INFO">${k} = ['MC120A']</msg>
<status status="PASS" starttime="20190729 19:16:28.542" endtime="20190729 19:16:28.544"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:16:28.547" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '14', '1564636438', '00000000']</msg>
<msg timestamp="20190729 19:16:28.547" level="INFO">${b} = ['1.1.1']</msg>
<status status="PASS" starttime="20190729 19:16:28.545" endtime="20190729 19:16:28.547"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:16:28.550" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '14', '1564636438', '00000000']</msg>
<msg timestamp="20190729 19:16:28.551" level="INFO">${c} = ['1']</msg>
<status status="PASS" starttime="20190729 19:16:28.548" endtime="20190729 19:16:28.551"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:28.553" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '14', '1564636438', '00000000']</msg>
<msg timestamp="20190729 19:16:28.554" level="INFO">${d} = ['14']</msg>
<status status="PASS" starttime="20190729 19:16:28.552" endtime="20190729 19:16:28.554"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:28.557" level="INFO">${d} = 14</msg>
<status status="PASS" starttime="20190729 19:16:28.555" endtime="20190729 19:16:28.558"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k[0]}'=='${GPS_model}' and '${b[0]}'== '${GPS_version}' and '${c[0]}'=='${GPS_state}' and ${d}&gt;${GPS_number}</arg>
</arguments>
<msg timestamp="20190729 19:16:28.563" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:16:28.559" endtime="20190729 19:16:28.564"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:28.333" endtime="20190729 19:16:28.564"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:28.331" endtime="20190729 19:16:28.564"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${I}==119</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:28.566" endtime="20190729 19:16:28.568"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>IOT_定位</arg>
<arg>PASS</arg>
<arg>IOT+S1+GNSS=?</arg>
<arg>${a}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:28.569" endtime="20190729 19:16:28.571"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+QXWZ=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${e}</var>
</assign>
<msg timestamp="20190729 19:16:28.841" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+QXWZ=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+QXWZ=1,1002,2002,3002,4014,0,0;</msg>
<msg timestamp="20190729 19:16:28.844" level="INFO">${e} = 1,1002,2002,3002,4014,0,0</msg>
<status status="PASS" starttime="20190729 19:16:28.573" endtime="20190729 19:16:28.844"></status>
</kw>
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time4}</var>
</assign>
<msg timestamp="20190729 19:16:28.846" level="INFO">${time4} = 2019-07-29 19:16:28</msg>
<status status="PASS" starttime="20190729 19:16:28.845" endtime="20190729 19:16:28.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${time4}</arg>
</arguments>
<msg timestamp="20190729 19:16:28.850" level="INFO">${time4} = 2019-07-29 19:16:28</msg>
<status status="PASS" starttime="20190729 19:16:28.848" endtime="20190729 19:16:28.850"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:28.852" endtime="20190729 19:16:28.854"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:28.316" endtime="20190729 19:16:28.855" critical="yes"></status>
</test>
<test id="s1-t5" name="TS05_WIFI">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${WIFI_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<msg timestamp="20190729 19:16:28.865" level="INFO">Execution passed with message:
此项不测试</msg>
<status status="PASS" starttime="20190729 19:16:28.862" endtime="20190729 19:16:28.866"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:28.868" endtime="20190729 19:16:28.870"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:28.858" endtime="20190729 19:16:28.871" critical="yes">此项不测试</status>
</test>
<test id="s1-t6" name="ABOX_自检">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${ABOX_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:28.882" endtime="20190729 19:16:28.886"></status>
</kw>
<kw name="${i} IN RANGE [ 100 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:29.144" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:29.146" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:28.892" endtime="20190729 19:16:29.146"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:29.148" endtime="20190729 19:16:29.152"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:30.156" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:29.153" endtime="20190729 19:16:30.157"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:28.889" endtime="20190729 19:16:30.158"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:30.367" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:30.369" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:30.161" endtime="20190729 19:16:30.369"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:30.371" endtime="20190729 19:16:30.375"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:31.378" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:30.376" endtime="20190729 19:16:31.379"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:30.159" endtime="20190729 19:16:31.379"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:31.585" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:31.586" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:31.381" endtime="20190729 19:16:31.586"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:31.587" endtime="20190729 19:16:31.589"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:32.592" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:31.590" endtime="20190729 19:16:32.593"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:31.380" endtime="20190729 19:16:32.594"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:32.807" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:32.809" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:32.596" endtime="20190729 19:16:32.809"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:32.811" endtime="20190729 19:16:32.814"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:33.819" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:32.816" endtime="20190729 19:16:33.820"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:32.595" endtime="20190729 19:16:33.821"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:34.034" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:34.035" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:33.825" endtime="20190729 19:16:34.036"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:34.038" endtime="20190729 19:16:34.041"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:35.045" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:34.043" endtime="20190729 19:16:35.046"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:33.822" endtime="20190729 19:16:35.047"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:35.257" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:35.258" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:35.050" endtime="20190729 19:16:35.259"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:35.260" endtime="20190729 19:16:35.264"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:36.268" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:35.266" endtime="20190729 19:16:36.270"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:35.048" endtime="20190729 19:16:36.270"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:36.480" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:36.481" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:36.273" endtime="20190729 19:16:36.482"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:36.484" endtime="20190729 19:16:36.488"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:37.492" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:36.490" endtime="20190729 19:16:37.494"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:36.271" endtime="20190729 19:16:37.494"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:37.704" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:37.706" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:37.497" endtime="20190729 19:16:37.706"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:37.709" endtime="20190729 19:16:37.713"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:38.717" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:37.715" endtime="20190729 19:16:38.718"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:37.495" endtime="20190729 19:16:38.718"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:38.925" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:38.926" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:38.720" endtime="20190729 19:16:38.926"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:38.927" endtime="20190729 19:16:38.929"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:39.932" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:38.930" endtime="20190729 19:16:39.933"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:38.719" endtime="20190729 19:16:39.934"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:40.144" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:40.145" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:39.936" endtime="20190729 19:16:40.146"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:40.148" endtime="20190729 19:16:40.151"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:41.155" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:40.153" endtime="20190729 19:16:41.157"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:39.935" endtime="20190729 19:16:41.157"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:41.367" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:41.369" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:41.160" endtime="20190729 19:16:41.369"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:41.371" endtime="20190729 19:16:41.375"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:42.379" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:41.376" endtime="20190729 19:16:42.380"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:41.158" endtime="20190729 19:16:42.380"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:42.590" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:42.592" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:42.383" endtime="20190729 19:16:42.592"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:42.594" endtime="20190729 19:16:42.598"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:43.602" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:42.600" endtime="20190729 19:16:43.603"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:42.381" endtime="20190729 19:16:43.604"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:43.813" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:43.815" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:43.607" endtime="20190729 19:16:43.815"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:43.817" endtime="20190729 19:16:43.821"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:44.825" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:43.822" endtime="20190729 19:16:44.826"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:43.605" endtime="20190729 19:16:44.827"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:45.038" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:45.040" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:44.831" endtime="20190729 19:16:45.040"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:45.042" endtime="20190729 19:16:45.046"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:46.049" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:45.047" endtime="20190729 19:16:46.051"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:44.828" endtime="20190729 19:16:46.052"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:46.261" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:46.262" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:46.054" endtime="20190729 19:16:46.263"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:46.265" endtime="20190729 19:16:46.268"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:47.272" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:46.270" endtime="20190729 19:16:47.274"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:46.053" endtime="20190729 19:16:47.274"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:47.484" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:47.486" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:47.277" endtime="20190729 19:16:47.486"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:47.488" endtime="20190729 19:16:47.492"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:48.495" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:47.493" endtime="20190729 19:16:48.497"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:47.275" endtime="20190729 19:16:48.497"></status>
</kw>
<kw name="${i} = 16" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:48.708" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:48.709" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:48.500" endtime="20190729 19:16:48.710"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:48.712" endtime="20190729 19:16:48.715"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:49.719" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:48.717" endtime="20190729 19:16:49.720"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:48.499" endtime="20190729 19:16:49.721"></status>
</kw>
<kw name="${i} = 17" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:49.930" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:49.932" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:49.723" endtime="20190729 19:16:49.932"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:49.934" endtime="20190729 19:16:49.938"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:50.942" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:49.939" endtime="20190729 19:16:50.943"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:49.722" endtime="20190729 19:16:50.944"></status>
</kw>
<kw name="${i} = 18" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:51.153" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:51.155" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:50.946" endtime="20190729 19:16:51.155"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:51.157" endtime="20190729 19:16:51.163"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:52.167" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:51.165" endtime="20190729 19:16:52.169"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:50.945" endtime="20190729 19:16:52.169"></status>
</kw>
<kw name="${i} = 19" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:52.379" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:52.380" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:52.172" endtime="20190729 19:16:52.381"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:52.383" endtime="20190729 19:16:52.387"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:53.390" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:52.388" endtime="20190729 19:16:53.392"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:52.170" endtime="20190729 19:16:53.392"></status>
</kw>
<kw name="${i} = 20" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:53.602" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:53.603" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:53.395" endtime="20190729 19:16:53.604"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:53.605" endtime="20190729 19:16:53.610"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:54.614" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:53.612" endtime="20190729 19:16:54.615"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:53.393" endtime="20190729 19:16:54.616"></status>
</kw>
<kw name="${i} = 21" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:54.826" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:54.828" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:54.619" endtime="20190729 19:16:54.828"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:54.830" endtime="20190729 19:16:54.834"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:55.838" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:54.836" endtime="20190729 19:16:55.840"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:54.617" endtime="20190729 19:16:55.840"></status>
</kw>
<kw name="${i} = 22" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:56.050" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:56.051" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:55.843" endtime="20190729 19:16:56.052"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:56.054" endtime="20190729 19:16:56.058"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:57.063" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:56.061" endtime="20190729 19:16:57.064"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:55.841" endtime="20190729 19:16:57.065"></status>
</kw>
<kw name="${i} = 23" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:57.275" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:57.276" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:57.068" endtime="20190729 19:16:57.277"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:57.279" endtime="20190729 19:16:57.282"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:58.286" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:57.284" endtime="20190729 19:16:58.288"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:57.066" endtime="20190729 19:16:58.288"></status>
</kw>
<kw name="${i} = 24" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:58.498" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:58.500" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:58.291" endtime="20190729 19:16:58.500"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:58.502" endtime="20190729 19:16:58.506"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:16:59.511" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:58.508" endtime="20190729 19:16:59.512"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:58.289" endtime="20190729 19:16:59.513"></status>
</kw>
<kw name="${i} = 25" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:16:59.722" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:16:59.724" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:16:59.515" endtime="20190729 19:16:59.724"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:16:59.726" endtime="20190729 19:16:59.730"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:00.734" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:16:59.731" endtime="20190729 19:17:00.735"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:59.514" endtime="20190729 19:17:00.736"></status>
</kw>
<kw name="${i} = 26" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:00.946" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:17:00.946" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:17:00.739" endtime="20190729 19:17:00.947"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:00.948" endtime="20190729 19:17:00.950"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:01.952" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:00.951" endtime="20190729 19:17:01.954"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:00.737" endtime="20190729 19:17:01.955"></status>
</kw>
<kw name="${i} = 27" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:02.168" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:17:02.170" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:17:01.959" endtime="20190729 19:17:02.171"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:02.172" endtime="20190729 19:17:02.176"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:03.181" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:02.178" endtime="20190729 19:17:03.182"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:01.956" endtime="20190729 19:17:03.183"></status>
</kw>
<kw name="${i} = 28" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:03.394" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:17:03.395" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:17:03.186" endtime="20190729 19:17:03.396"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:03.398" endtime="20190729 19:17:03.402"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:04.406" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:03.403" endtime="20190729 19:17:04.407"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:03.184" endtime="20190729 19:17:04.408"></status>
</kw>
<kw name="${i} = 29" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:04.620" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:17:04.622" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:17:04.411" endtime="20190729 19:17:04.622"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:04.624" endtime="20190729 19:17:04.627"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:05.632" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:04.629" endtime="20190729 19:17:05.634"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:04.409" endtime="20190729 19:17:05.634"></status>
</kw>
<kw name="${i} = 30" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:05.845" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:17:05.847" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:17:05.638" endtime="20190729 19:17:05.847"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:05.849" endtime="20190729 19:17:05.852"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:06.857" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:05.854" endtime="20190729 19:17:06.858"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:05.636" endtime="20190729 19:17:06.858"></status>
</kw>
<kw name="${i} = 31" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:07.063" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:17:07.064" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:17:06.859" endtime="20190729 19:17:07.065"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:07.065" endtime="20190729 19:17:07.067"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:08.070" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:07.068" endtime="20190729 19:17:08.071"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:06.858" endtime="20190729 19:17:08.072"></status>
</kw>
<kw name="${i} = 32" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:08.281" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:17:08.283" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:17:08.075" endtime="20190729 19:17:08.284"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:08.286" endtime="20190729 19:17:08.289"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:09.293" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:08.291" endtime="20190729 19:17:09.295"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:08.073" endtime="20190729 19:17:09.295"></status>
</kw>
<kw name="${i} = 33" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:09.505" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:17:09.506" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:17:09.298" endtime="20190729 19:17:09.507"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:09.509" endtime="20190729 19:17:09.512"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:10.516" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:09.514" endtime="20190729 19:17:10.517"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:09.296" endtime="20190729 19:17:10.518"></status>
</kw>
<kw name="${i} = 34" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:10.728" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:17:10.729" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:17:10.521" endtime="20190729 19:17:10.730"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:10.732" endtime="20190729 19:17:10.740"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:11.747" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:10.743" endtime="20190729 19:17:11.749"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:10.519" endtime="20190729 19:17:11.749"></status>
</kw>
<kw name="${i} = 35" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:11.958" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:17:11.960" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:17:11.752" endtime="20190729 19:17:11.960"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:11.962" endtime="20190729 19:17:11.965"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:12.969" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:11.967" endtime="20190729 19:17:12.971"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:11.750" endtime="20190729 19:17:12.971"></status>
</kw>
<kw name="${i} = 36" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:13.181" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:17:13.183" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:17:12.975" endtime="20190729 19:17:13.183"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:13.185" endtime="20190729 19:17:13.190"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:14.194" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:13.191" endtime="20190729 19:17:14.195"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:12.972" endtime="20190729 19:17:14.196"></status>
</kw>
<kw name="${i} = 37" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:14.405" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:17:14.406" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:17:14.198" endtime="20190729 19:17:14.407"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:14.409" endtime="20190729 19:17:14.412"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:15.416" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:14.414" endtime="20190729 19:17:15.418"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:14.197" endtime="20190729 19:17:15.418"></status>
</kw>
<kw name="${i} = 38" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:15.627" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:17:15.629" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:17:15.421" endtime="20190729 19:17:15.629"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:15.631" endtime="20190729 19:17:15.634"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:16.639" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:15.636" endtime="20190729 19:17:16.641"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:15.419" endtime="20190729 19:17:16.641"></status>
</kw>
<kw name="${i} = 39" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:16.850" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:17:16.852" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:17:16.644" endtime="20190729 19:17:16.852"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:16.854" endtime="20190729 19:17:16.857"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:17.868" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:16.864" endtime="20190729 19:17:17.869"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:16.642" endtime="20190729 19:17:17.869"></status>
</kw>
<kw name="${i} = 40" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:18.075" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:17:18.076" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:17:17.871" endtime="20190729 19:17:18.076"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:18.077" endtime="20190729 19:17:18.079"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:19.081" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:18.080" endtime="20190729 19:17:19.083"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:17.870" endtime="20190729 19:17:19.084"></status>
</kw>
<kw name="${i} = 41" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:19.294" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:17:19.295" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:17:19.087" endtime="20190729 19:17:19.296"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:19.298" endtime="20190729 19:17:19.302"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:20.305" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:19.303" endtime="20190729 19:17:20.307"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:19.085" endtime="20190729 19:17:20.307"></status>
</kw>
<kw name="${i} = 42" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:20.516" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:17:20.518" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:17:20.310" endtime="20190729 19:17:20.518"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:20.520" endtime="20190729 19:17:20.524"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:21.527" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:20.525" endtime="20190729 19:17:21.529"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:20.308" endtime="20190729 19:17:21.529"></status>
</kw>
<kw name="${i} = 43" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:21.742" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=1;</msg>
<msg timestamp="20190729 19:17:21.743" level="INFO">${d} = 1</msg>
<status status="PASS" starttime="20190729 19:17:21.533" endtime="20190729 19:17:21.744"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<msg timestamp="20190729 19:17:21.749" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:17:21.745" endtime="20190729 19:17:21.750"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:21.530" endtime="20190729 19:17:21.750"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:28.887" endtime="20190729 19:17:21.751"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==99</arg>
<arg>Fail</arg>
<arg>自检结果查询失败</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:21.753" endtime="20190729 19:17:21.757"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-C1+ai.sf.ck.r=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${e}</var>
</assign>
<msg timestamp="20190729 19:17:22.045" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-C1+AI.SF.CK.R=0,0,0,0,0,0,0,0,0,1,0,0,0;</msg>
<msg timestamp="20190729 19:17:22.046" level="INFO">${e} = 0,0,0,0,0,0,0,0,0,1,0,0,0</msg>
<status status="PASS" starttime="20190729 19:17:21.759" endtime="20190729 19:17:22.047"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${e}'!='0,0,0,0,0,0,0,0,0,1,0,0,0'</arg>
<arg>Fail</arg>
<arg>自检失败</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:22.049" endtime="20190729 19:17:22.053"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>${e}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:22.055" endtime="20190729 19:17:22.058"></status>
</kw>
<kw name="${i} IN RANGE [ 6 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.fom.nt=01</arg>
<arg>IOT</arg>
</arguments>
<msg timestamp="20190729 19:17:22.348" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.fom.nt=01
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.FOM.NT=successful;</msg>
<status status="PASS" starttime="20190729 19:17:22.066" endtime="20190729 19:17:22.349"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190729 19:17:27.353" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190729 19:17:22.351" endtime="20190729 19:17:27.354"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ai.fom.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190729 19:17:27.559" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ai.fom.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.AI.FOM.ACK=0;</msg>
<msg timestamp="20190729 19:17:27.560" level="INFO">${f} = 0</msg>
<status status="PASS" starttime="20190729 19:17:27.355" endtime="20190729 19:17:27.560"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${f}'=='2'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:27.561" endtime="20190729 19:17:27.563"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:22.062" endtime="20190729 19:17:27.563"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.fom.nt=01</arg>
<arg>IOT</arg>
</arguments>
<msg timestamp="20190729 19:17:27.861" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.fom.nt=01
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.FOM.NT=successful;</msg>
<status status="PASS" starttime="20190729 19:17:27.564" endtime="20190729 19:17:27.861"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190729 19:17:32.864" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190729 19:17:27.862" endtime="20190729 19:17:32.865"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ai.fom.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190729 19:17:33.074" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ai.fom.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.AI.FOM.ACK=2;</msg>
<msg timestamp="20190729 19:17:33.075" level="INFO">${f} = 2</msg>
<status status="PASS" starttime="20190729 19:17:32.867" endtime="20190729 19:17:33.076"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${f}'=='2'</arg>
</arguments>
<msg timestamp="20190729 19:17:33.081" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:17:33.078" endtime="20190729 19:17:33.082"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:27.563" endtime="20190729 19:17:33.082"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:22.060" endtime="20190729 19:17:33.083"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==5</arg>
<arg>Fail</arg>
<arg>SD卡格式化失败</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:33.086" endtime="20190729 19:17:33.089"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:33.092" endtime="20190729 19:17:33.094"></status>
</kw>
<status status="PASS" starttime="20190729 19:16:28.874" endtime="20190729 19:17:33.097" critical="yes"></status>
</test>
<test id="s1-t7" name="TS06_电容">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${CAP_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:33.118" endtime="20190729 19:17:33.124"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-crt</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 19:17:33.381" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-crt
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)pwr err: handle is exist.</msg>
<status status="PASS" starttime="20190729 19:17:33.128" endtime="20190729 19:17:33.382"></status>
</kw>
<kw name="${i} IN RANGE [ 180 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:17:33.683" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1274,**pwr:13837|13837,*batt:3413|3413,*bntc:1494|1494,*gnss:2815|2815,*adc1:0|0,*adc2:0|0,*sos1:4248|4248,*sos2:4242|4242,*scap:7002|7002;</msg>
<msg timestamp="20190729 19:17:33.684" level="INFO">${a} = adc_drv chn:9,calib:1,cnv:1274,**pwr:13837|13837,*batt:3413|3413,*bntc:1494|1494,*gnss:2815|2815,*adc1:0|0,*adc2:0|0,*sos1:4248|4248,*sos2:4242|4242,*scap:7002|7002;</msg>
<status status="PASS" starttime="20190729 19:17:33.385" endtime="20190729 19:17:33.684"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:17:33.688" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1274', '**pwr', '13837', '13837', '*batt', '3413', '3413', '*bntc', '1494', '1494', '*gnss', '2815', '2815', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4248', '4248', '*sos2', '4242', '4242', '*scap', '7002', '7002', '']</msg>
<msg timestamp="20190729 19:17:33.689" level="INFO">${b} = 7002</msg>
<status status="PASS" starttime="20190729 19:17:33.685" endtime="20190729 19:17:33.689"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${b})</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:17:33.692" level="INFO">${b} = 7002</msg>
<status status="PASS" starttime="20190729 19:17:33.690" endtime="20190729 19:17:33.693"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${b}&gt;6500 or ${b}&lt;1000</arg>
</arguments>
<msg timestamp="20190729 19:17:33.695" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:17:33.693" endtime="20190729 19:17:33.696"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:33.384" endtime="20190729 19:17:33.696"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:33.383" endtime="20190729 19:17:33.696"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==99 or ${b}&lt;4500</arg>
<arg>Fail</arg>
<arg>电容电压不足</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:33.698" endtime="20190729 19:17:33.700"></status>
</kw>
<kw name="Power KL30 Close" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 19:17:33.701" endtime="20190729 19:17:33.704"></status>
</kw>
<kw name="Power KL15 Close" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 19:17:33.706" endtime="20190729 19:17:33.707"></status>
</kw>
<kw name="Exp Timestamp" library="EXP">
<assign>
<var>${time1}</var>
</assign>
<msg timestamp="20190729 19:17:33.712" level="INFO">${time1} = 1564399053</msg>
<status status="PASS" starttime="20190729 19:17:33.710" endtime="20190729 19:17:33.712"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-crt</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 19:17:33.991" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-crt
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)pwr err: handle is exist.</msg>
<status status="PASS" starttime="20190729 19:17:33.713" endtime="20190729 19:17:33.992"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)gpi-crt-chn30-tick1000-wakv1</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 19:17:34.294" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)gpi-crt-chn30-tick1000-wakv1
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)gpi callback, handle:0x1FFF45AC, sta_calb:0.</msg>
<status status="PASS" starttime="20190729 19:17:33.995" endtime="20190729 19:17:34.296"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)gpi-opn-chn30</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 19:17:34.599" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)gpi-opn-chn30
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)gpi open, handle:0x1FFF45AC, ret:0.</msg>
<status status="PASS" starttime="20190729 19:17:34.299" endtime="20190729 19:17:34.600"></status>
</kw>
<kw name="${i} IN RANGE [ 30 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:17:35.304" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:125400.</msg>
<msg timestamp="20190729 19:17:35.305" level="INFO">${a} = dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:125400.</msg>
<status status="PASS" starttime="20190729 19:17:34.602" endtime="20190729 19:17:35.306"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:17:35.311" level="INFO">['dsmin', '', 'value', '02', '', 'inter_type', '01', '', 'dect', '00', '', 'inter_cnt', '1', '', 'keep_tim', '125400.']</msg>
<msg timestamp="20190729 19:17:35.312" level="INFO">${b} = 02</msg>
<status status="PASS" starttime="20190729 19:17:35.308" endtime="20190729 19:17:35.312"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:35.314" endtime="20190729 19:17:35.317"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:36.321" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:35.319" endtime="20190729 19:17:36.323"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:34.601" endtime="20190729 19:17:36.323"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:17:37.334" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:125400.</msg>
<msg timestamp="20190729 19:17:37.336" level="INFO">${a} = dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:125400.</msg>
<status status="PASS" starttime="20190729 19:17:36.326" endtime="20190729 19:17:37.336"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:17:37.341" level="INFO">['dsmin', '', 'value', '02', '', 'inter_type', '01', '', 'dect', '00', '', 'inter_cnt', '1', '', 'keep_tim', '125400.']</msg>
<msg timestamp="20190729 19:17:37.342" level="INFO">${b} = 02</msg>
<status status="PASS" starttime="20190729 19:17:37.338" endtime="20190729 19:17:37.343"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:37.345" endtime="20190729 19:17:37.349"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:38.354" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:37.351" endtime="20190729 19:17:38.356"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:36.324" endtime="20190729 19:17:38.357"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:17:39.167" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:125400.</msg>
<msg timestamp="20190729 19:17:39.169" level="INFO">${a} = dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:125400.</msg>
<status status="PASS" starttime="20190729 19:17:38.360" endtime="20190729 19:17:39.169"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:17:39.172" level="INFO">['dsmin', '', 'value', '02', '', 'inter_type', '01', '', 'dect', '00', '', 'inter_cnt', '1', '', 'keep_tim', '125400.']</msg>
<msg timestamp="20190729 19:17:39.173" level="INFO">${b} = 02</msg>
<status status="PASS" starttime="20190729 19:17:39.170" endtime="20190729 19:17:39.173"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:39.174" endtime="20190729 19:17:39.176"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:17:40.178" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:17:39.177" endtime="20190729 19:17:40.180"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:38.358" endtime="20190729 19:17:40.180"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:17:40.790" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:01, inter_type:02, dect:00, inter_cnt:2, keep_tim:0.</msg>
<msg timestamp="20190729 19:17:40.792" level="INFO">${a} = dsmin, value:01, inter_type:02, dect:00, inter_cnt:2, keep_tim:0.</msg>
<status status="PASS" starttime="20190729 19:17:40.183" endtime="20190729 19:17:40.792"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:17:40.799" level="INFO">['dsmin', '', 'value', '01', '', 'inter_type', '02', '', 'dect', '00', '', 'inter_cnt', '2', '', 'keep_tim', '0.']</msg>
<msg timestamp="20190729 19:17:40.800" level="INFO">${b} = 01</msg>
<status status="PASS" starttime="20190729 19:17:40.795" endtime="20190729 19:17:40.800"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<msg timestamp="20190729 19:17:40.806" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:17:40.802" endtime="20190729 19:17:40.807"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:40.181" endtime="20190729 19:17:40.807"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:34.600" endtime="20190729 19:17:40.808"></status>
</kw>
<kw name="Power KL30 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 19:17:40.810" endtime="20190729 19:17:40.812"></status>
</kw>
<kw name="Power KL30 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 19:17:40.814" endtime="20190729 19:17:40.816"></status>
</kw>
<kw name="Exp Timestamp" library="EXP">
<assign>
<var>${time2}</var>
</assign>
<msg timestamp="20190729 19:17:40.822" level="INFO">${time2} = 1564399060</msg>
<status status="PASS" starttime="20190729 19:17:40.819" endtime="20190729 19:17:40.823"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)gpi-cls-chn30</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 19:17:41.093" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)gpi-cls-chn30
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)gpi close, handle:0x1FFF45AC, ret:0.</msg>
<status status="PASS" starttime="20190729 19:17:40.825" endtime="20190729 19:17:41.095"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${time2}-${time1}</arg>
</arguments>
<assign>
<var>${time3}</var>
</assign>
<msg timestamp="20190729 19:17:41.101" level="INFO">${time3} = 7</msg>
<status status="PASS" starttime="20190729 19:17:41.097" endtime="20190729 19:17:41.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${time3}&lt;${dianrong}</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:41.104" endtime="20190729 19:17:41.108"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-crt</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 19:17:41.396" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-crt
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)pwr err: handle is exist.</msg>
<status status="PASS" starttime="20190729 19:17:41.111" endtime="20190729 19:17:41.397"></status>
</kw>
<kw name="${i} IN RANGE [ 2 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:17:41.699" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1354,**pwr:13926|13917,*batt:2959|2918,*bntc:1461|1461,*gnss:2820|2815,*adc1:0|0,*adc2:0|0,*sos1:4254|4248,*sos2:4246|4242,*scap:4724|4715;</msg>
<msg timestamp="20190729 19:17:41.701" level="INFO">${a} = adc_drv chn:9,calib:1,cnv:1354,**pwr:13926|13917,*batt:2959|2918,*bntc:1461|1461,*gnss:2820|2815,*adc1:0|0,*adc2:0|0,*sos1:4254|4248,*sos2:4246|4242,*scap:4724|4715;</msg>
<status status="PASS" starttime="20190729 19:17:41.402" endtime="20190729 19:17:41.701"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:17:41.706" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1354', '**pwr', '13926', '13917', '*batt', '2959', '2918', '*bntc', '1461', '1461', '*gnss', '2820', '2815', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4254', '4248', '*sos2', '4246', '4242', '*scap', '4724', '4715', '']</msg>
<msg timestamp="20190729 19:17:41.707" level="INFO">${b} = 4724</msg>
<status status="PASS" starttime="20190729 19:17:41.703" endtime="20190729 19:17:41.708"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${b})</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:17:41.713" level="INFO">${b} = 4724</msg>
<status status="PASS" starttime="20190729 19:17:41.710" endtime="20190729 19:17:41.714"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${b}&gt;6900</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:41.715" endtime="20190729 19:17:41.718"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190729 19:17:45.722" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20190729 19:17:41.720" endtime="20190729 19:17:45.724"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:17:45.935" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1397,**pwr:13872|13890,*batt:3307|3302,*bntc:1461|1461,*gnss:2819|2814,*adc1:0|0,*adc2:0|0,*sos1:4248|4248,*sos2:4243|4243,*scap:4857|4848;</msg>
<msg timestamp="20190729 19:17:45.936" level="INFO">${c} = adc_drv chn:9,calib:1,cnv:1397,**pwr:13872|13890,*batt:3307|3302,*bntc:1461|1461,*gnss:2819|2814,*adc1:0|0,*adc2:0|0,*sos1:4248|4248,*sos2:4243|4243,*scap:4857|4848;</msg>
<status status="PASS" starttime="20190729 19:17:45.726" endtime="20190729 19:17:45.937"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${c}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:45.943" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1397', '**pwr', '13872', '13890', '*batt', '3307', '3302', '*bntc', '1461', '1461', '*gnss', '2819', '2814', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4248', '4248', '*sos2', '4243', '4243', '*scap', '4857', '4848', '']</msg>
<msg timestamp="20190729 19:17:45.944" level="INFO">${d} = 4857</msg>
<status status="PASS" starttime="20190729 19:17:45.939" endtime="20190729 19:17:45.945"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${d})</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:45.950" level="INFO">${d} = 4857</msg>
<status status="PASS" starttime="20190729 19:17:45.946" endtime="20190729 19:17:45.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${d}&lt;=${b}</arg>
<arg>Fail</arg>
<arg>电容未充电</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:45.953" endtime="20190729 19:17:45.957"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:41.400" endtime="20190729 19:17:45.958"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:17:46.236" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1400,**pwr:13872|13872,*batt:3312|3308,*bntc:1461|1461,*gnss:2815|2815,*adc1:0|0,*adc2:0|0,*sos1:4248|4248,*sos2:4243|4243,*scap:4875|4866;</msg>
<msg timestamp="20190729 19:17:46.238" level="INFO">${a} = adc_drv chn:9,calib:1,cnv:1400,**pwr:13872|13872,*batt:3312|3308,*bntc:1461|1461,*gnss:2815|2815,*adc1:0|0,*adc2:0|0,*sos1:4248|4248,*sos2:4243|4243,*scap:4875|4866;</msg>
<status status="PASS" starttime="20190729 19:17:45.961" endtime="20190729 19:17:46.238"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:17:46.244" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1400', '**pwr', '13872', '13872', '*batt', '3312', '3308', '*bntc', '1461', '1461', '*gnss', '2815', '2815', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4248', '4248', '*sos2', '4243', '4243', '*scap', '4875', '4866', '']</msg>
<msg timestamp="20190729 19:17:46.245" level="INFO">${b} = 4875</msg>
<status status="PASS" starttime="20190729 19:17:46.240" endtime="20190729 19:17:46.246"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${b})</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:17:46.252" level="INFO">${b} = 4875</msg>
<status status="PASS" starttime="20190729 19:17:46.247" endtime="20190729 19:17:46.253"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${b}&gt;6900</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:46.255" endtime="20190729 19:17:46.258"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190729 19:17:50.262" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20190729 19:17:46.260" endtime="20190729 19:17:50.263"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:17:50.468" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1443,**pwr:13739|13748,*batt:3342|3342,*bntc:1465|1465,*gnss:2815|2814,*adc1:0|0,*adc2:0|0,*sos1:4246|4248,*sos2:4243|4243,*scap:4999|4999;</msg>
<msg timestamp="20190729 19:17:50.470" level="INFO">${c} = adc_drv chn:9,calib:1,cnv:1443,**pwr:13739|13748,*batt:3342|3342,*bntc:1465|1465,*gnss:2815|2814,*adc1:0|0,*adc2:0|0,*sos1:4246|4248,*sos2:4243|4243,*scap:4999|4999;</msg>
<status status="PASS" starttime="20190729 19:17:50.264" endtime="20190729 19:17:50.470"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${c}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:50.475" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1443', '**pwr', '13739', '13748', '*batt', '3342', '3342', '*bntc', '1465', '1465', '*gnss', '2815', '2814', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4246', '4248', '*sos2', '4243', '4243', '*scap', '4999', '4999', '']</msg>
<msg timestamp="20190729 19:17:50.476" level="INFO">${d} = 4999</msg>
<status status="PASS" starttime="20190729 19:17:50.472" endtime="20190729 19:17:50.477"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${d})</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:17:50.482" level="INFO">${d} = 4999</msg>
<status status="PASS" starttime="20190729 19:17:50.478" endtime="20190729 19:17:50.482"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${d}&lt;=${b}</arg>
<arg>Fail</arg>
<arg>电容未充电</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:50.484" endtime="20190729 19:17:50.488"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:45.959" endtime="20190729 19:17:50.489"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:41.399" endtime="20190729 19:17:50.489"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>TS10_电容</arg>
<arg>PASS</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:50.491" endtime="20190729 19:17:50.495"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:50.498" endtime="20190729 19:17:50.502"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:33.105" endtime="20190729 19:17:50.503" critical="yes"></status>
</test>
<test id="s1-t8" name="IOT_型号日期设置">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${DATA_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<msg timestamp="20190729 19:17:50.537" level="INFO">Execution passed with message:
此项不测试</msg>
<status status="PASS" starttime="20190729 19:17:50.531" endtime="20190729 19:17:50.539"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:50.544" endtime="20190729 19:17:50.550"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:50.511" endtime="20190729 19:17:50.553" critical="yes">此项不测试</status>
</test>
<test id="s1-t9" name="IOT_PID设置">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${PID_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<msg timestamp="20190729 19:17:50.574" level="INFO">Execution passed with message:
此项不测试</msg>
<status status="PASS" starttime="20190729 19:17:50.571" endtime="20190729 19:17:50.575"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:50.577" endtime="20190729 19:17:50.579"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:50.559" endtime="20190729 19:17:50.580" critical="yes">此项不测试</status>
</test>
<test id="s1-t10" name="GET_END">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+L1+nw.e01.r01.ic=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${ICCID_}</var>
</assign>
<msg timestamp="20190729 19:17:50.796" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+L1+nw.e01.r01.ic=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+L1+NW.E01.R01.IC=89860919730027329971;</msg>
<msg timestamp="20190729 19:17:50.797" level="INFO">${ICCID_} = 89860919730027329971</msg>
<status status="PASS" starttime="20190729 19:17:50.590" endtime="20190729 19:17:50.797"></status>
</kw>
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time2}</var>
</assign>
<msg timestamp="20190729 19:17:50.801" level="INFO">${time2} = 2019-07-29 19:17:50</msg>
<status status="PASS" starttime="20190729 19:17:50.799" endtime="20190729 19:17:50.801"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>结束时间:${time2}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:50.802" endtime="20190729 19:17:50.804"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>${ICCID_}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:50.806" endtime="20190729 19:17:50.809"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>***************************************************************************************</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:50.811" endtime="20190729 19:17:50.813"></status>
</kw>
<kw name="Txtrwx Transfer" library="Txtrwx">
<arguments>
<arg>/home/pi/production/mid.txt</arg>
<arg>/home/pi/production/log/整机测试日志.txt</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:50.815" endtime="20190729 19:17:50.818"></status>
</kw>
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/production/mid.txt</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:50.819" endtime="20190729 19:17:50.897"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:17:50.900" endtime="20190729 19:17:50.902"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:50.583" endtime="20190729 19:17:50.903" critical="yes"></status>
</test>
<kw name="clear" type="teardown">
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/production/mid.txt</arg>
</arguments>
<msg timestamp="20190729 19:17:50.928" level="INFO">文件不存在</msg>
<status status="PASS" starttime="20190729 19:17:50.922" endtime="20190729 19:17:50.929"></status>
</kw>
<kw name="Power KL30 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 19:17:50.930" endtime="20190729 19:17:50.932"></status>
</kw>
<kw name="Power KL15 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 19:17:50.933" endtime="20190729 19:17:50.935"></status>
</kw>
<status status="PASS" starttime="20190729 19:17:50.917" endtime="20190729 19:17:50.936"></status>
</kw>
<status status="PASS" starttime="20190729 19:15:46.585" endtime="20190729 19:17:50.937"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="Ai Test">Ai Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
