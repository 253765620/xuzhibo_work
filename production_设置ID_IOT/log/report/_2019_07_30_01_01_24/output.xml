<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.7.0 on linux)" generated="20190730 01:01:25.790">
<suite id="s1" name="Ai Test" source="/home/pi/production/case/ai_test.txt">
<test id="s1-t1" name="GET_Ready">
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time1}</var>
</assign>
<msg timestamp="20190730 01:01:26.961" level="INFO">${time1} = 2019-07-30 01:01:26</msg>
<status status="PASS" starttime="20190730 01:01:26.959" endtime="20190730 01:01:26.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${time1}</arg>
</arguments>
<msg timestamp="20190730 01:01:26.966" level="INFO">${time1} = 2019-07-30 01:01:26</msg>
<status status="PASS" starttime="20190730 01:01:26.963" endtime="20190730 01:01:26.967"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20190730 01:02:26.970" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20190730 01:01:26.969" endtime="20190730 01:02:26.972"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ABOX_TEST}==1</arg>
<arg>发起自检</arg>
</arguments>
<kw name="发起自检">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.con.alive=5</arg>
<arg>IOT-S1+AI.M.CON.ALIVE=5</arg>
</arguments>
<msg timestamp="20190730 01:02:27.192" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.con.alive=5
应该收到串口数据: IOT-S1+AI.M.CON.ALIVE=5
实际接收到的数据:  IOT-S1+AI.M.CON.ALIVE=5;</msg>
<status status="PASS" starttime="20190730 01:02:26.983" endtime="20190730 01:02:27.194"></status>
</kw>
<kw name="${i} IN RANGE [ 80 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.con.st=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190730 01:02:27.496" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.con.st=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CON.ST=1;</msg>
<msg timestamp="20190730 01:02:27.498" level="INFO">${a} = 1</msg>
<status status="PASS" starttime="20190730 01:02:27.199" endtime="20190730 01:02:27.499"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${a}'=='1'</arg>
</arguments>
<msg timestamp="20190730 01:02:27.508" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190730 01:02:27.502" endtime="20190730 01:02:27.510"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:27.196" endtime="20190730 01:02:27.511"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:27.195" endtime="20190730 01:02:27.511"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==79</arg>
<arg>Fail</arg>
<arg>串口状态连接失败</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:27.514" endtime="20190730 01:02:27.519"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.lev.switch=0</arg>
<arg>IOT-V1+AI.LEV.SWITCH=successful;</arg>
</arguments>
<msg timestamp="20190730 01:02:27.800" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.lev.switch=0
应该收到串口数据: IOT-V1+AI.LEV.SWITCH=successful;
实际接收到的数据:  IOT-V1+AI.LEV.SWITCH=successful;</msg>
<status status="PASS" starttime="20190730 01:02:27.522" endtime="20190730 01:02:27.801"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190730 01:02:32.803" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190730 01:02:27.802" endtime="20190730 01:02:32.805"></status>
</kw>
<kw name="${i} IN RANGE [ 8 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.self.check=1</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190730 01:02:33.017" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.self.check=1
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.SELF.CHECK=successful;</msg>
<msg timestamp="20190730 01:02:33.019" level="INFO">${b} = successful</msg>
<status status="PASS" starttime="20190730 01:02:32.810" endtime="20190730 01:02:33.019"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20190730 01:02:35.024" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190730 01:02:33.021" endtime="20190730 01:02:35.026"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.se.ch.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190730 01:02:35.236" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.se.ch.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.SE.CH.ACK=1;</msg>
<msg timestamp="20190730 01:02:35.240" level="INFO">${c} = 1</msg>
<status status="PASS" starttime="20190730 01:02:35.028" endtime="20190730 01:02:35.240"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${c}'=='1'</arg>
</arguments>
<msg timestamp="20190730 01:02:35.246" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190730 01:02:35.242" endtime="20190730 01:02:35.263"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:32.807" endtime="20190730 01:02:35.264"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:32.806" endtime="20190730 01:02:35.264"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==7</arg>
<arg>Fail</arg>
<arg>发起自检失败</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:35.266" endtime="20190730 01:02:35.270"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:26.979" endtime="20190730 01:02:35.272"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:26.975" endtime="20190730 01:02:35.273"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>开始时间:${time1}</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:35.275" endtime="20190730 01:02:35.279"></status>
</kw>
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time3}</var>
</assign>
<msg timestamp="20190730 01:02:35.285" level="INFO">${time3} = 2019-07-30 01:02:35</msg>
<status status="PASS" starttime="20190730 01:02:35.282" endtime="20190730 01:02:35.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${time3}</arg>
</arguments>
<msg timestamp="20190730 01:02:35.294" level="INFO">${time3} = 2019-07-30 01:02:35</msg>
<status status="PASS" starttime="20190730 01:02:35.290" endtime="20190730 01:02:35.295"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:35.298" endtime="20190730 01:02:35.299"></status>
</kw>
<status status="PASS" starttime="20190730 01:01:26.953" endtime="20190730 01:02:35.300" critical="yes"></status>
</test>
<test id="s1-t2" name="TS01_TONGXIN">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${TONGXIN_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:35.310" endtime="20190730 01:02:35.312"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1+nw.e01.inf=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190730 01:02:35.541" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+D1+nw.e01.inf=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+D3+NW.E01.INF=865501042599275,EC20CEFAG,EC20CEFAGR06A06M4G_OCPU  1  [Oct;</msg>
<msg timestamp="20190730 01:02:35.542" level="INFO">${a} = 865501042599275,EC20CEFAG,EC20CEFAGR06A06M4G_OCPU  1  [Oct</msg>
<status status="PASS" starttime="20190730 01:02:35.314" endtime="20190730 01:02:35.542"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190730 01:02:35.546" level="INFO">['865501042599275', 'EC20CEFAG', 'EC20CEFAGR06A06M4G_OCPU', '1', '[Oct']</msg>
<msg timestamp="20190730 01:02:35.547" level="INFO">${b} = ['EC20CEFAGR06A06M4G_OCPU']</msg>
<status status="PASS" starttime="20190730 01:02:35.544" endtime="20190730 01:02:35.547"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${b[0]}'!='${communication_version}'</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:35.549" endtime="20190730 01:02:35.551"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+nw.e01.stu=?</arg>
<arg>IOT</arg>
<arg>wait_time=6</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190730 01:02:35.844" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+nw.e01.stu=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+NW.E01.STU=LTE,2,LTE,2,1,196,27;</msg>
<msg timestamp="20190730 01:02:35.845" level="INFO">${c} = LTE,2,LTE,2,1,196,27</msg>
<status status="PASS" starttime="20190730 01:02:35.553" endtime="20190730 01:02:35.845"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:02:35.848" level="INFO">['LTE', '2', 'LTE', '2', '1', '196', '27']</msg>
<msg timestamp="20190730 01:02:35.849" level="INFO">${d} = ['LTE']</msg>
<status status="PASS" starttime="20190730 01:02:35.846" endtime="20190730 01:02:35.849"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${e}</var>
</assign>
<msg timestamp="20190730 01:02:35.852" level="INFO">['LTE', '2', 'LTE', '2', '1', '196', '27']</msg>
<msg timestamp="20190730 01:02:35.853" level="INFO">${e} = ['2']</msg>
<status status="PASS" starttime="20190730 01:02:35.850" endtime="20190730 01:02:35.853"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190730 01:02:35.856" level="INFO">['LTE', '2', 'LTE', '2', '1', '196', '27']</msg>
<msg timestamp="20190730 01:02:35.856" level="INFO">${f} = ['LTE']</msg>
<status status="PASS" starttime="20190730 01:02:35.854" endtime="20190730 01:02:35.857"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${g}</var>
</assign>
<msg timestamp="20190730 01:02:35.861" level="INFO">['LTE', '2', 'LTE', '2', '1', '196', '27']</msg>
<msg timestamp="20190730 01:02:35.862" level="INFO">${g} = ['2']</msg>
<status status="PASS" starttime="20190730 01:02:35.859" endtime="20190730 01:02:35.862"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${h}</var>
</assign>
<msg timestamp="20190730 01:02:35.865" level="INFO">['LTE', '2', 'LTE', '2', '1', '196', '27']</msg>
<msg timestamp="20190730 01:02:35.865" level="INFO">${h} = ['1']</msg>
<status status="PASS" starttime="20190730 01:02:35.863" endtime="20190730 01:02:35.866"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${communication_1}</arg>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190730 01:02:35.869" level="INFO">${one} = 1</msg>
<status status="PASS" starttime="20190730 01:02:35.867" endtime="20190730 01:02:35.870"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${communication_1}</arg>
<arg>${f[0]}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190730 01:02:35.873" level="INFO">${two} = 1</msg>
<status status="PASS" starttime="20190730 01:02:35.871" endtime="20190730 01:02:35.874"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${one}!=1 or ${two}!=1 or '${e[0]}'!='${communication_2}' or '${g[0]}'!= '${communication_2}' or '${h[0]}'!='${communication_3}'</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:35.875" endtime="20190730 01:02:35.879"></status>
</kw>
<kw name="${I} IN RANGE [ 30 ]" type="for">
<kw name="${I} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+nw.e01.stu=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190730 01:02:36.146" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+nw.e01.stu=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+NW.E01.STU=LTE,2,LTE,2,1,196,27;</msg>
<msg timestamp="20190730 01:02:36.148" level="INFO">${c} = LTE,2,LTE,2,1,196,27</msg>
<status status="PASS" starttime="20190730 01:02:35.882" endtime="20190730 01:02:36.149"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${m}</var>
</assign>
<msg timestamp="20190730 01:02:36.154" level="INFO">['LTE', '2', 'LTE', '2', '1', '196', '27']</msg>
<msg timestamp="20190730 01:02:36.155" level="INFO">${m} = ['27']</msg>
<status status="PASS" starttime="20190730 01:02:36.151" endtime="20190730 01:02:36.155"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${m[0]}</arg>
</arguments>
<assign>
<var>${m}</var>
</assign>
<msg timestamp="20190730 01:02:36.161" level="INFO">${m} = 27</msg>
<status status="PASS" starttime="20190730 01:02:36.157" endtime="20190730 01:02:36.161"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${m}&gt;${signal_value}</arg>
</arguments>
<msg timestamp="20190730 01:02:36.166" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190730 01:02:36.163" endtime="20190730 01:02:36.167"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:35.881" endtime="20190730 01:02:36.168"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:35.880" endtime="20190730 01:02:36.169"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${I}==29</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:36.171" endtime="20190730 01:02:36.174"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:36.177" endtime="20190730 01:02:36.181"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:35.306" endtime="20190730 01:02:36.183" critical="yes"></status>
</test>
<test id="s1-t3" name="TS03_串口2">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${SERIAL_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:36.207" endtime="20190730 01:02:36.212"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-crt-chn2-baud115200</arg>
<arg>(bsp)usart</arg>
</arguments>
<msg timestamp="20190730 01:02:36.448" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-crt-chn2-baud115200
应该收到串口数据: (bsp)usart
实际接收到的数据:  (bsp)usart callback, handle:0x1FFF4550, sta_calb:0.</msg>
<status status="PASS" starttime="20190730 01:02:36.214" endtime="20190730 01:02:36.449"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-opn-chn2</arg>
<arg>(bsp)usar</arg>
</arguments>
<msg timestamp="20190730 01:02:36.750" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-opn-chn2
应该收到串口数据: (bsp)usar
实际接收到的数据:  (bsp)usart open, handle:0x1FFF4550, ret:0.</msg>
<status status="PASS" starttime="20190730 01:02:36.450" endtime="20190730 01:02:36.751"></status>
</kw>
<kw name="Start Ama0 Recv" library="SerialLibrary">
<status status="PASS" starttime="20190730 01:02:36.752" endtime="20190730 01:02:36.764"></status>
</kw>
<kw name="${i} IN RANGE [ 5 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190730 01:02:37.052" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF4550, ret:0.</msg>
<status status="PASS" starttime="20190730 01:02:36.771" endtime="20190730 01:02:37.053"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:36.769" endtime="20190730 01:02:37.054"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190730 01:02:37.355" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF4550, ret:0.</msg>
<status status="PASS" starttime="20190730 01:02:37.055" endtime="20190730 01:02:37.355"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:37.054" endtime="20190730 01:02:37.356"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190730 01:02:37.657" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF4550, ret:0.</msg>
<status status="PASS" starttime="20190730 01:02:37.357" endtime="20190730 01:02:37.658"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:37.356" endtime="20190730 01:02:37.658"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190730 01:02:37.960" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF4550, ret:0.</msg>
<status status="PASS" starttime="20190730 01:02:37.660" endtime="20190730 01:02:37.961"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:37.659" endtime="20190730 01:02:37.961"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190730 01:02:38.262" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF4550, ret:0.</msg>
<status status="PASS" starttime="20190730 01:02:37.963" endtime="20190730 01:02:38.263"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:37.962" endtime="20190730 01:02:38.263"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:36.766" endtime="20190730 01:02:38.264"></status>
</kw>
<kw name="Txtrwx Read" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2.txt</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20190730 01:02:38.267" level="INFO">${r} = hello
hello
hello
hello
hello
</msg>
<status status="PASS" starttime="20190730 01:02:38.265" endtime="20190730 01:02:38.267"></status>
</kw>
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2.txt</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:38.269" endtime="20190730 01:02:38.319"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${r}</arg>
<arg>hello</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190730 01:02:38.325" level="INFO">${a} = 1</msg>
<status status="PASS" starttime="20190730 01:02:38.321" endtime="20190730 01:02:38.326"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${a}==0</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:38.328" endtime="20190730 01:02:38.331"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20190730 01:02:40.335" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190730 01:02:38.333" endtime="20190730 01:02:40.337"></status>
</kw>
<kw name="Serial Ama0 Send" library="SerialLibrary">
<arguments>
<arg>goodgoodgood</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:40.339" endtime="20190730 01:02:40.344"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20190730 01:02:42.349" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190730 01:02:40.346" endtime="20190730 01:02:42.351"></status>
</kw>
<kw name="Txtrwx Read" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2_send.txt</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20190730 01:02:42.356" level="INFO">${r} = goodgoodgood
</msg>
<status status="PASS" starttime="20190730 01:02:42.353" endtime="20190730 01:02:42.357"></status>
</kw>
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2_send.txt</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:42.359" endtime="20190730 01:02:42.452"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${r}</arg>
<arg>goodgoodgood</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190730 01:02:42.460" level="INFO">${a} = 1</msg>
<status status="PASS" starttime="20190730 01:02:42.455" endtime="20190730 01:02:42.461"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${a}==0</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:42.464" endtime="20190730 01:02:42.470"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:42.474" endtime="20190730 01:02:42.477"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:36.192" endtime="20190730 01:02:42.479" critical="yes"></status>
</test>
<test id="s1-t4" name="TS04_定位">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${GPS_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:42.502" endtime="20190730 01:02:42.506"></status>
</kw>
<kw name="${I} IN RANGE [ 120 ]" type="for">
<kw name="${I} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+GNSS=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190730 01:02:42.721" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+GNSS=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+GNSS= MC120A, 1.1.1,1,1,12,1564657212,00000000;</msg>
<msg timestamp="20190730 01:02:42.721" level="INFO">${a} =  MC120A, 1.1.1,1,1,12,1564657212,00000000</msg>
<status status="PASS" starttime="20190730 01:02:42.512" endtime="20190730 01:02:42.722"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190730 01:02:42.724" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '12', '1564657212', '00000000']</msg>
<msg timestamp="20190730 01:02:42.725" level="INFO">${k} = ['MC120A']</msg>
<status status="PASS" starttime="20190730 01:02:42.723" endtime="20190730 01:02:42.725"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190730 01:02:42.728" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '12', '1564657212', '00000000']</msg>
<msg timestamp="20190730 01:02:42.729" level="INFO">${b} = ['1.1.1']</msg>
<status status="PASS" starttime="20190730 01:02:42.726" endtime="20190730 01:02:42.729"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190730 01:02:42.732" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '12', '1564657212', '00000000']</msg>
<msg timestamp="20190730 01:02:42.733" level="INFO">${c} = ['1']</msg>
<status status="PASS" starttime="20190730 01:02:42.730" endtime="20190730 01:02:42.733"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:02:42.736" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '12', '1564657212', '00000000']</msg>
<msg timestamp="20190730 01:02:42.737" level="INFO">${d} = ['12']</msg>
<status status="PASS" starttime="20190730 01:02:42.734" endtime="20190730 01:02:42.737"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:02:42.740" level="INFO">${d} = 12</msg>
<status status="PASS" starttime="20190730 01:02:42.738" endtime="20190730 01:02:42.740"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k[0]}'=='${GPS_model}' and '${b[0]}'== '${GPS_version}' and '${c[0]}'=='${GPS_state}' and ${d}&gt;${GPS_number}</arg>
</arguments>
<msg timestamp="20190730 01:02:42.746" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190730 01:02:42.741" endtime="20190730 01:02:42.746"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:42.510" endtime="20190730 01:02:42.747"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:42.508" endtime="20190730 01:02:42.747"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${I}==119</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:42.748" endtime="20190730 01:02:42.750"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>IOT_定位</arg>
<arg>PASS</arg>
<arg>IOT+S1+GNSS=?</arg>
<arg>${a}</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:42.751" endtime="20190730 01:02:42.755"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+QXWZ=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${e}</var>
</assign>
<msg timestamp="20190730 01:02:43.023" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+QXWZ=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+QXWZ=0,1002,2002,3002,4014,0,0;</msg>
<msg timestamp="20190730 01:02:43.025" level="INFO">${e} = 0,1002,2002,3002,4014,0,0</msg>
<status status="PASS" starttime="20190730 01:02:42.756" endtime="20190730 01:02:43.025"></status>
</kw>
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time4}</var>
</assign>
<msg timestamp="20190730 01:02:43.028" level="INFO">${time4} = 2019-07-30 01:02:43</msg>
<status status="PASS" starttime="20190730 01:02:43.026" endtime="20190730 01:02:43.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${time4}</arg>
</arguments>
<msg timestamp="20190730 01:02:43.032" level="INFO">${time4} = 2019-07-30 01:02:43</msg>
<status status="PASS" starttime="20190730 01:02:43.030" endtime="20190730 01:02:43.034"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:43.037" endtime="20190730 01:02:43.041"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:42.490" endtime="20190730 01:02:43.041" critical="yes"></status>
</test>
<test id="s1-t5" name="TS05_WIFI">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${WIFI_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<msg timestamp="20190730 01:02:43.053" level="INFO">Execution passed with message:
此项不测试</msg>
<status status="PASS" starttime="20190730 01:02:43.051" endtime="20190730 01:02:43.053"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:43.055" endtime="20190730 01:02:43.056"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:43.046" endtime="20190730 01:02:43.057" critical="yes">此项不测试</status>
</test>
<test id="s1-t6" name="ABOX_自检">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${ABOX_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:43.066" endtime="20190730 01:02:43.068"></status>
</kw>
<kw name="${i} IN RANGE [ 100 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:02:43.325" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:02:43.327" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:02:43.071" endtime="20190730 01:02:43.328"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:43.330" endtime="20190730 01:02:43.333"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:02:44.338" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:02:43.335" endtime="20190730 01:02:44.340"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:43.070" endtime="20190730 01:02:44.341"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:02:44.550" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:02:44.551" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:02:44.344" endtime="20190730 01:02:44.552"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:44.553" endtime="20190730 01:02:44.555"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:02:45.558" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:02:44.556" endtime="20190730 01:02:45.560"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:44.342" endtime="20190730 01:02:45.560"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:02:45.770" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:02:45.771" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:02:45.563" endtime="20190730 01:02:45.772"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:45.774" endtime="20190730 01:02:45.778"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:02:46.783" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:02:45.780" endtime="20190730 01:02:46.785"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:45.561" endtime="20190730 01:02:46.785"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:02:46.995" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:02:46.996" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:02:46.788" endtime="20190730 01:02:46.997"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:46.999" endtime="20190730 01:02:47.004"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:02:48.008" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:02:47.006" endtime="20190730 01:02:48.010"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:46.786" endtime="20190730 01:02:48.010"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:02:48.221" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:02:48.224" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:02:48.013" endtime="20190730 01:02:48.225"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:48.227" endtime="20190730 01:02:48.231"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:02:49.236" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:02:48.233" endtime="20190730 01:02:49.238"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:48.011" endtime="20190730 01:02:49.238"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:02:49.449" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:02:49.451" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:02:49.242" endtime="20190730 01:02:49.452"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:49.454" endtime="20190730 01:02:49.459"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:02:50.463" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:02:49.461" endtime="20190730 01:02:50.464"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:49.240" endtime="20190730 01:02:50.464"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:02:50.670" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:02:50.670" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:02:50.465" endtime="20190730 01:02:50.671"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:50.672" endtime="20190730 01:02:50.674"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:02:51.676" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:02:50.675" endtime="20190730 01:02:51.678"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:50.465" endtime="20190730 01:02:51.679"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:02:51.888" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:02:51.890" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:02:51.681" endtime="20190730 01:02:51.891"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:51.893" endtime="20190730 01:02:51.897"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:02:52.902" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:02:51.899" endtime="20190730 01:02:52.904"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:51.680" endtime="20190730 01:02:52.906"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:02:53.122" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:02:53.124" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:02:52.910" endtime="20190730 01:02:53.125"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:53.127" endtime="20190730 01:02:53.131"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:02:54.136" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:02:53.133" endtime="20190730 01:02:54.138"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:52.907" endtime="20190730 01:02:54.139"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:02:54.348" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:02:54.350" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:02:54.141" endtime="20190730 01:02:54.350"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:54.352" endtime="20190730 01:02:54.355"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:02:55.360" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:02:54.357" endtime="20190730 01:02:55.362"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:54.140" endtime="20190730 01:02:55.362"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:02:55.574" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:02:55.576" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:02:55.366" endtime="20190730 01:02:55.577"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:55.579" endtime="20190730 01:02:55.584"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:02:56.595" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:02:55.586" endtime="20190730 01:02:56.597"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:55.364" endtime="20190730 01:02:56.597"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:02:56.807" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:02:56.808" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:02:56.600" endtime="20190730 01:02:56.809"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:56.811" endtime="20190730 01:02:56.814"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:02:57.818" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:02:56.816" endtime="20190730 01:02:57.820"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:56.599" endtime="20190730 01:02:57.820"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:02:58.030" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:02:58.032" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:02:57.823" endtime="20190730 01:02:58.033"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:58.034" endtime="20190730 01:02:58.039"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:02:59.044" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:02:58.041" endtime="20190730 01:02:59.050"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:57.821" endtime="20190730 01:02:59.051"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:02:59.272" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:02:59.274" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:02:59.056" endtime="20190730 01:02:59.275"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:02:59.276" endtime="20190730 01:02:59.280"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:00.284" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:02:59.282" endtime="20190730 01:03:00.285"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:59.054" endtime="20190730 01:03:00.286"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:00.496" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:00.497" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:00.289" endtime="20190730 01:03:00.498"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:00.500" endtime="20190730 01:03:00.504"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:01.507" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:00.505" endtime="20190730 01:03:01.508"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:00.287" endtime="20190730 01:03:01.509"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:01.714" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:01.715" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:01.510" endtime="20190730 01:03:01.715"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:01.716" endtime="20190730 01:03:01.718"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:02.721" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:01.719" endtime="20190730 01:03:02.722"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:01.509" endtime="20190730 01:03:02.723"></status>
</kw>
<kw name="${i} = 16" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:02.932" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:02.934" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:02.726" endtime="20190730 01:03:02.934"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:02.936" endtime="20190730 01:03:02.940"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:03.944" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:02.942" endtime="20190730 01:03:03.945"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:02.724" endtime="20190730 01:03:03.946"></status>
</kw>
<kw name="${i} = 17" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:04.157" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:04.159" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:03.949" endtime="20190730 01:03:04.160"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:04.162" endtime="20190730 01:03:04.166"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:05.170" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:04.168" endtime="20190730 01:03:05.172"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:03.947" endtime="20190730 01:03:05.173"></status>
</kw>
<kw name="${i} = 18" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:05.384" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:05.385" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:05.175" endtime="20190730 01:03:05.386"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:05.388" endtime="20190730 01:03:05.395"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:06.399" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:05.397" endtime="20190730 01:03:06.401"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:05.174" endtime="20190730 01:03:06.401"></status>
</kw>
<kw name="${i} = 19" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:06.611" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:06.612" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:06.404" endtime="20190730 01:03:06.613"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:06.615" endtime="20190730 01:03:06.619"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:07.623" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:06.621" endtime="20190730 01:03:07.625"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:06.402" endtime="20190730 01:03:07.625"></status>
</kw>
<kw name="${i} = 20" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:07.835" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:07.836" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:07.628" endtime="20190730 01:03:07.837"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:07.839" endtime="20190730 01:03:07.842"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:08.846" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:07.844" endtime="20190730 01:03:08.848"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:07.626" endtime="20190730 01:03:08.849"></status>
</kw>
<kw name="${i} = 21" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:09.059" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:09.061" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:08.852" endtime="20190730 01:03:09.061"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:09.063" endtime="20190730 01:03:09.067"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:10.071" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:09.069" endtime="20190730 01:03:10.073"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:08.850" endtime="20190730 01:03:10.073"></status>
</kw>
<kw name="${i} = 22" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:10.283" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:10.284" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:10.076" endtime="20190730 01:03:10.285"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:10.286" endtime="20190730 01:03:10.291"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:11.295" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:10.293" endtime="20190730 01:03:11.296"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:10.074" endtime="20190730 01:03:11.297"></status>
</kw>
<kw name="${i} = 23" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:11.508" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:11.510" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:11.300" endtime="20190730 01:03:11.510"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:11.512" endtime="20190730 01:03:11.515"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:12.520" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:11.517" endtime="20190730 01:03:12.521"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:11.298" endtime="20190730 01:03:12.521"></status>
</kw>
<kw name="${i} = 24" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:12.728" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:12.729" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:12.523" endtime="20190730 01:03:12.729"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:12.730" endtime="20190730 01:03:12.732"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:13.734" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:12.733" endtime="20190730 01:03:13.736"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:12.522" endtime="20190730 01:03:13.736"></status>
</kw>
<kw name="${i} = 25" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:13.946" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:13.948" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:13.739" endtime="20190730 01:03:13.948"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:13.950" endtime="20190730 01:03:13.954"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:14.958" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:13.955" endtime="20190730 01:03:14.959"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:13.737" endtime="20190730 01:03:14.961"></status>
</kw>
<kw name="${i} = 26" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:15.172" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:15.174" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:14.964" endtime="20190730 01:03:15.174"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:15.176" endtime="20190730 01:03:15.182"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:16.187" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:15.184" endtime="20190730 01:03:16.188"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:14.962" endtime="20190730 01:03:16.189"></status>
</kw>
<kw name="${i} = 27" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:16.399" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:16.400" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:16.192" endtime="20190730 01:03:16.401"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:16.403" endtime="20190730 01:03:16.408"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:17.413" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:16.410" endtime="20190730 01:03:17.414"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:16.190" endtime="20190730 01:03:17.415"></status>
</kw>
<kw name="${i} = 28" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:17.625" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:17.626" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:17.418" endtime="20190730 01:03:17.627"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:17.629" endtime="20190730 01:03:17.633"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:18.637" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:17.635" endtime="20190730 01:03:18.638"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:17.416" endtime="20190730 01:03:18.638"></status>
</kw>
<kw name="${i} = 29" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:18.846" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:18.847" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:18.640" endtime="20190730 01:03:18.848"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:18.850" endtime="20190730 01:03:18.855"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:19.859" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:18.857" endtime="20190730 01:03:19.861"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:18.639" endtime="20190730 01:03:19.861"></status>
</kw>
<kw name="${i} = 30" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:20.071" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:20.073" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:19.864" endtime="20190730 01:03:20.074"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:20.075" endtime="20190730 01:03:20.079"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:21.083" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:20.081" endtime="20190730 01:03:21.084"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:19.862" endtime="20190730 01:03:21.085"></status>
</kw>
<kw name="${i} = 31" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:21.294" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:21.296" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:21.087" endtime="20190730 01:03:21.296"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:21.298" endtime="20190730 01:03:21.302"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:22.307" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:21.304" endtime="20190730 01:03:22.307"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:21.086" endtime="20190730 01:03:22.308"></status>
</kw>
<kw name="${i} = 32" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:22.514" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:22.515" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:22.309" endtime="20190730 01:03:22.515"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:22.516" endtime="20190730 01:03:22.518"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:23.521" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:22.519" endtime="20190730 01:03:23.522"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:22.308" endtime="20190730 01:03:23.523"></status>
</kw>
<kw name="${i} = 33" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:23.733" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:23.734" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:23.526" endtime="20190730 01:03:23.735"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:23.736" endtime="20190730 01:03:23.740"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:24.744" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:23.742" endtime="20190730 01:03:24.745"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:23.524" endtime="20190730 01:03:24.746"></status>
</kw>
<kw name="${i} = 34" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:24.955" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:24.957" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:24.749" endtime="20190730 01:03:24.957"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:24.959" endtime="20190730 01:03:24.963"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:25.966" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:24.964" endtime="20190730 01:03:25.968"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:24.747" endtime="20190730 01:03:25.969"></status>
</kw>
<kw name="${i} = 35" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:26.178" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:26.180" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:25.971" endtime="20190730 01:03:26.180"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:26.182" endtime="20190730 01:03:26.186"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:27.190" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:26.188" endtime="20190730 01:03:27.192"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:25.970" endtime="20190730 01:03:27.192"></status>
</kw>
<kw name="${i} = 36" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:27.403" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:27.405" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:27.195" endtime="20190730 01:03:27.405"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:27.408" endtime="20190730 01:03:27.413"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:28.418" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:27.414" endtime="20190730 01:03:28.420"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:27.193" endtime="20190730 01:03:28.420"></status>
</kw>
<kw name="${i} = 37" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:28.632" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:28.634" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:28.423" endtime="20190730 01:03:28.635"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:28.636" endtime="20190730 01:03:28.640"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:29.644" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:28.642" endtime="20190730 01:03:29.646"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:28.421" endtime="20190730 01:03:29.646"></status>
</kw>
<kw name="${i} = 38" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:29.857" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:29.858" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:29.650" endtime="20190730 01:03:29.859"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:29.860" endtime="20190730 01:03:29.864"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:30.869" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:29.865" endtime="20190730 01:03:30.870"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:29.647" endtime="20190730 01:03:30.871"></status>
</kw>
<kw name="${i} = 39" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:31.080" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:31.081" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:30.873" endtime="20190730 01:03:31.082"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:31.084" endtime="20190730 01:03:31.088"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:32.094" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:31.090" endtime="20190730 01:03:32.096"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:30.872" endtime="20190730 01:03:32.096"></status>
</kw>
<kw name="${i} = 40" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:32.306" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:32.308" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:32.099" endtime="20190730 01:03:32.309"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:32.311" endtime="20190730 01:03:32.314"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:33.318" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:32.316" endtime="20190730 01:03:33.319"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:32.097" endtime="20190730 01:03:33.319"></status>
</kw>
<kw name="${i} = 41" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:33.525" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:33.526" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:33.320" endtime="20190730 01:03:33.526"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:33.527" endtime="20190730 01:03:33.531"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:34.534" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:33.532" endtime="20190730 01:03:34.535"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:33.320" endtime="20190730 01:03:34.536"></status>
</kw>
<kw name="${i} = 42" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:34.746" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190730 01:03:34.748" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190730 01:03:34.539" endtime="20190730 01:03:34.748"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:34.750" endtime="20190730 01:03:34.754"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:03:35.758" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:03:34.755" endtime="20190730 01:03:35.759"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:34.537" endtime="20190730 01:03:35.760"></status>
</kw>
<kw name="${i} = 43" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:03:35.970" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=1;</msg>
<msg timestamp="20190730 01:03:35.973" level="INFO">${d} = 1</msg>
<status status="PASS" starttime="20190730 01:03:35.763" endtime="20190730 01:03:35.975"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<msg timestamp="20190730 01:03:35.983" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190730 01:03:35.978" endtime="20190730 01:03:35.984"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:35.761" endtime="20190730 01:03:35.985"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:43.069" endtime="20190730 01:03:35.987"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==99</arg>
<arg>Fail</arg>
<arg>自检结果查询失败</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:35.991" endtime="20190730 01:03:35.995"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-C1+ai.sf.ck.r=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${e}</var>
</assign>
<msg timestamp="20190730 01:03:36.277" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-C1+AI.SF.CK.R=0,0,0,0,0,0,0,0,0,1,0,0,0;</msg>
<msg timestamp="20190730 01:03:36.279" level="INFO">${e} = 0,0,0,0,0,0,0,0,0,1,0,0,0</msg>
<status status="PASS" starttime="20190730 01:03:35.997" endtime="20190730 01:03:36.280"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${e}'!='0,0,0,0,0,0,0,0,0,1,0,0,0'</arg>
<arg>Fail</arg>
<arg>自检失败</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:36.282" endtime="20190730 01:03:36.286"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>${e}</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:36.288" endtime="20190730 01:03:36.295"></status>
</kw>
<kw name="${i} IN RANGE [ 6 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.fom.nt=01</arg>
<arg>IOT</arg>
</arguments>
<msg timestamp="20190730 01:03:36.581" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.fom.nt=01
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.FOM.NT=successful;</msg>
<status status="PASS" starttime="20190730 01:03:36.300" endtime="20190730 01:03:36.582"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190730 01:03:41.586" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190730 01:03:36.584" endtime="20190730 01:03:41.588"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ai.fom.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190730 01:03:41.797" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ai.fom.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.AI.FOM.ACK=0;</msg>
<msg timestamp="20190730 01:03:41.799" level="INFO">${f} = 0</msg>
<status status="PASS" starttime="20190730 01:03:41.590" endtime="20190730 01:03:41.799"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${f}'=='2'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:41.801" endtime="20190730 01:03:41.805"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:36.298" endtime="20190730 01:03:41.805"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.fom.nt=01</arg>
<arg>IOT</arg>
</arguments>
<msg timestamp="20190730 01:03:42.101" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.fom.nt=01
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.FOM.NT=successful;</msg>
<status status="PASS" starttime="20190730 01:03:41.808" endtime="20190730 01:03:42.102"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190730 01:03:47.117" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190730 01:03:42.113" endtime="20190730 01:03:47.118"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ai.fom.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190730 01:03:47.327" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ai.fom.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.AI.FOM.ACK=0;</msg>
<msg timestamp="20190730 01:03:47.329" level="INFO">${f} = 0</msg>
<status status="PASS" starttime="20190730 01:03:47.120" endtime="20190730 01:03:47.329"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${f}'=='2'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:47.331" endtime="20190730 01:03:47.334"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:41.806" endtime="20190730 01:03:47.335"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.fom.nt=01</arg>
<arg>IOT</arg>
</arguments>
<msg timestamp="20190730 01:03:47.630" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.fom.nt=01
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.FOM.NT=successful;</msg>
<status status="PASS" starttime="20190730 01:03:47.337" endtime="20190730 01:03:47.632"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190730 01:03:52.636" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190730 01:03:47.633" endtime="20190730 01:03:52.638"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ai.fom.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190730 01:03:52.846" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ai.fom.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.AI.FOM.ACK=0;</msg>
<msg timestamp="20190730 01:03:52.847" level="INFO">${f} = 0</msg>
<status status="PASS" starttime="20190730 01:03:52.639" endtime="20190730 01:03:52.848"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${f}'=='2'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:52.850" endtime="20190730 01:03:52.854"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:47.336" endtime="20190730 01:03:52.854"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.fom.nt=01</arg>
<arg>IOT</arg>
</arguments>
<msg timestamp="20190730 01:03:53.150" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.fom.nt=01
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.FOM.NT=successful;</msg>
<status status="PASS" starttime="20190730 01:03:52.858" endtime="20190730 01:03:53.151"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190730 01:03:58.155" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190730 01:03:53.153" endtime="20190730 01:03:58.157"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ai.fom.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190730 01:03:58.365" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ai.fom.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.AI.FOM.ACK=2;</msg>
<msg timestamp="20190730 01:03:58.367" level="INFO">${f} = 2</msg>
<status status="PASS" starttime="20190730 01:03:58.159" endtime="20190730 01:03:58.368"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${f}'=='2'</arg>
</arguments>
<msg timestamp="20190730 01:03:58.374" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190730 01:03:58.370" endtime="20190730 01:03:58.375"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:52.855" endtime="20190730 01:03:58.376"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:36.296" endtime="20190730 01:03:58.377"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==5</arg>
<arg>Fail</arg>
<arg>SD卡格式化失败</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:58.379" endtime="20190730 01:03:58.382"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:58.386" endtime="20190730 01:03:58.390"></status>
</kw>
<status status="PASS" starttime="20190730 01:02:43.060" endtime="20190730 01:03:58.392" critical="yes"></status>
</test>
<test id="s1-t7" name="TS06_电容">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${CAP_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:58.412" endtime="20190730 01:03:58.417"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-crt</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190730 01:03:58.669" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-crt
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)pwr err: handle is exist.</msg>
<status status="PASS" starttime="20190730 01:03:58.420" endtime="20190730 01:03:58.670"></status>
</kw>
<kw name="${i} IN RANGE [ 180 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190730 01:03:58.971" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1712,**pwr:13527|13518,*batt:3403|3403,*bntc:1534|1533,*gnss:2827|2827,*adc1:0|0,*adc2:0|0,*sos1:4240|4238,*sos2:4253|4251,*scap:7002|7002;</msg>
<msg timestamp="20190730 01:03:58.972" level="INFO">${a} = adc_drv chn:9,calib:1,cnv:1712,**pwr:13527|13518,*batt:3403|3403,*bntc:1534|1533,*gnss:2827|2827,*adc1:0|0,*adc2:0|0,*sos1:4240|4238,*sos2:4253|4251,*scap:7002|7002;</msg>
<status status="PASS" starttime="20190730 01:03:58.672" endtime="20190730 01:03:58.972"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190730 01:03:58.976" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1712', '**pwr', '13527', '13518', '*batt', '3403', '3403', '*bntc', '1534', '1533', '*gnss', '2827', '2827', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4240', '4238', '*sos2', '4253', '4251', '*scap', '7002', '7002', '']</msg>
<msg timestamp="20190730 01:03:58.977" level="INFO">${b} = 7002</msg>
<status status="PASS" starttime="20190730 01:03:58.973" endtime="20190730 01:03:58.977"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${b})</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190730 01:03:58.980" level="INFO">${b} = 7002</msg>
<status status="PASS" starttime="20190730 01:03:58.978" endtime="20190730 01:03:58.980"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${b}&gt;6500 or ${b}&lt;1000</arg>
</arguments>
<msg timestamp="20190730 01:03:58.983" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190730 01:03:58.981" endtime="20190730 01:03:58.984"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:58.671" endtime="20190730 01:03:58.984"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:58.670" endtime="20190730 01:03:58.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==99 or ${b}&lt;4500</arg>
<arg>Fail</arg>
<arg>电容电压不足</arg>
</arguments>
<status status="PASS" starttime="20190730 01:03:58.985" endtime="20190730 01:03:58.987"></status>
</kw>
<kw name="Power KL30 Close" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190730 01:03:58.989" endtime="20190730 01:03:58.990"></status>
</kw>
<kw name="Power KL15 Close" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190730 01:03:58.991" endtime="20190730 01:03:58.992"></status>
</kw>
<kw name="Exp Timestamp" library="EXP">
<assign>
<var>${time1}</var>
</assign>
<msg timestamp="20190730 01:03:58.996" level="INFO">${time1} = 1564419838</msg>
<status status="PASS" starttime="20190730 01:03:58.993" endtime="20190730 01:03:58.996"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-crt</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190730 01:03:59.274" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-crt
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)pwr err: handle is exist.</msg>
<status status="PASS" starttime="20190730 01:03:58.997" endtime="20190730 01:03:59.276"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)gpi-crt-chn30-tick1000-wakv1</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190730 01:03:59.577" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)gpi-crt-chn30-tick1000-wakv1
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)gpi callback, handle:0x1FFF45AC, sta_calb:0.</msg>
<status status="PASS" starttime="20190730 01:03:59.278" endtime="20190730 01:03:59.578"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)gpi-opn-chn30</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190730 01:03:59.883" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)gpi-opn-chn30
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)gpi open, handle:0x1FFF45AC, ret:0.</msg>
<status status="PASS" starttime="20190730 01:03:59.581" endtime="20190730 01:03:59.884"></status>
</kw>
<kw name="${i} IN RANGE [ 30 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190730 01:04:00.590" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:169300.</msg>
<msg timestamp="20190730 01:04:00.593" level="INFO">${a} = dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:169300.</msg>
<status status="PASS" starttime="20190730 01:03:59.889" endtime="20190730 01:04:00.593"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190730 01:04:00.599" level="INFO">['dsmin', '', 'value', '02', '', 'inter_type', '01', '', 'dect', '00', '', 'inter_cnt', '1', '', 'keep_tim', '169300.']</msg>
<msg timestamp="20190730 01:04:00.600" level="INFO">${b} = 02</msg>
<status status="PASS" starttime="20190730 01:04:00.596" endtime="20190730 01:04:00.601"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:04:00.602" endtime="20190730 01:04:00.606"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:04:01.610" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:04:00.608" endtime="20190730 01:04:01.611"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:59.887" endtime="20190730 01:04:01.611"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190730 01:04:02.621" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:169300.</msg>
<msg timestamp="20190730 01:04:02.624" level="INFO">${a} = dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:169300.</msg>
<status status="PASS" starttime="20190730 01:04:01.613" endtime="20190730 01:04:02.625"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190730 01:04:02.631" level="INFO">['dsmin', '', 'value', '02', '', 'inter_type', '01', '', 'dect', '00', '', 'inter_cnt', '1', '', 'keep_tim', '169300.']</msg>
<msg timestamp="20190730 01:04:02.633" level="INFO">${b} = 02</msg>
<status status="PASS" starttime="20190730 01:04:02.627" endtime="20190730 01:04:02.634"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:04:02.636" endtime="20190730 01:04:02.641"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:04:03.652" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:04:02.643" endtime="20190730 01:04:03.654"></status>
</kw>
<status status="PASS" starttime="20190730 01:04:01.612" endtime="20190730 01:04:03.655"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190730 01:04:04.666" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:169300.</msg>
<msg timestamp="20190730 01:04:04.668" level="INFO">${a} = dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:169300.</msg>
<status status="PASS" starttime="20190730 01:04:03.658" endtime="20190730 01:04:04.668"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190730 01:04:04.673" level="INFO">['dsmin', '', 'value', '02', '', 'inter_type', '01', '', 'dect', '00', '', 'inter_cnt', '1', '', 'keep_tim', '169300.']</msg>
<msg timestamp="20190730 01:04:04.675" level="INFO">${b} = 02</msg>
<status status="PASS" starttime="20190730 01:04:04.670" endtime="20190730 01:04:04.676"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<status status="PASS" starttime="20190730 01:04:04.677" endtime="20190730 01:04:04.691"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190730 01:04:05.697" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190730 01:04:04.694" endtime="20190730 01:04:05.699"></status>
</kw>
<status status="PASS" starttime="20190730 01:04:03.656" endtime="20190730 01:04:05.699"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190730 01:04:05.909" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:01, inter_type:02, dect:00, inter_cnt:12, keep_tim:0.</msg>
<msg timestamp="20190730 01:04:05.910" level="INFO">${a} = dsmin, value:01, inter_type:02, dect:00, inter_cnt:12, keep_tim:0.</msg>
<status status="PASS" starttime="20190730 01:04:05.702" endtime="20190730 01:04:05.910"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190730 01:04:05.912" level="INFO">['dsmin', '', 'value', '01', '', 'inter_type', '02', '', 'dect', '00', '', 'inter_cnt', '12', '', 'keep_tim', '0.']</msg>
<msg timestamp="20190730 01:04:05.913" level="INFO">${b} = 01</msg>
<status status="PASS" starttime="20190730 01:04:05.911" endtime="20190730 01:04:05.913"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<msg timestamp="20190730 01:04:05.916" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190730 01:04:05.914" endtime="20190730 01:04:05.917"></status>
</kw>
<status status="PASS" starttime="20190730 01:04:05.700" endtime="20190730 01:04:05.918"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:59.886" endtime="20190730 01:04:05.918"></status>
</kw>
<kw name="Power KL30 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190730 01:04:05.919" endtime="20190730 01:04:05.921"></status>
</kw>
<kw name="Power KL30 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190730 01:04:05.923" endtime="20190730 01:04:05.924"></status>
</kw>
<kw name="Exp Timestamp" library="EXP">
<assign>
<var>${time2}</var>
</assign>
<msg timestamp="20190730 01:04:05.927" level="INFO">${time2} = 1564419845</msg>
<status status="PASS" starttime="20190730 01:04:05.925" endtime="20190730 01:04:05.927"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)gpi-cls-chn30</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190730 01:04:06.211" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)gpi-cls-chn30
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)gpi close, handle:0x1FFF45AC, ret:0.</msg>
<status status="PASS" starttime="20190730 01:04:05.929" endtime="20190730 01:04:06.212"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${time2}-${time1}</arg>
</arguments>
<assign>
<var>${time3}</var>
</assign>
<msg timestamp="20190730 01:04:06.216" level="INFO">${time3} = 7</msg>
<status status="PASS" starttime="20190730 01:04:06.213" endtime="20190730 01:04:06.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${time3}&lt;${dianrong}</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190730 01:04:06.217" endtime="20190730 01:04:06.221"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-crt</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190730 01:04:06.513" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-crt
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)pwr err: handle is exist.</msg>
<status status="PASS" starttime="20190730 01:04:06.223" endtime="20190730 01:04:06.514"></status>
</kw>
<kw name="${i} IN RANGE [ 2 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190730 01:04:06.817" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1789,**pwr:13793|13766,*batt:2941|2872,*bntc:1507|1507,*gnss:2829|2828,*adc1:0|0,*adc2:0|0,*sos1:4238|4238,*sos2:4251|4251,*scap:4644|4636;</msg>
<msg timestamp="20190730 01:04:06.819" level="INFO">${a} = adc_drv chn:9,calib:1,cnv:1789,**pwr:13793|13766,*batt:2941|2872,*bntc:1507|1507,*gnss:2829|2828,*adc1:0|0,*adc2:0|0,*sos1:4238|4238,*sos2:4251|4251,*scap:4644|4636;</msg>
<status status="PASS" starttime="20190730 01:04:06.519" endtime="20190730 01:04:06.820"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190730 01:04:06.825" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1789', '**pwr', '13793', '13766', '*batt', '2941', '2872', '*bntc', '1507', '1507', '*gnss', '2829', '2828', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4238', '4238', '*sos2', '4251', '4251', '*scap', '4644', '4636', '']</msg>
<msg timestamp="20190730 01:04:06.826" level="INFO">${b} = 4644</msg>
<status status="PASS" starttime="20190730 01:04:06.821" endtime="20190730 01:04:06.827"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${b})</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190730 01:04:06.831" level="INFO">${b} = 4644</msg>
<status status="PASS" starttime="20190730 01:04:06.828" endtime="20190730 01:04:06.831"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${b}&gt;6900</arg>
</arguments>
<status status="PASS" starttime="20190730 01:04:06.832" endtime="20190730 01:04:06.835"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190730 01:04:10.840" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20190730 01:04:06.836" endtime="20190730 01:04:10.841"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190730 01:04:11.051" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1831,**pwr:13757|13757,*batt:3292|3286,*bntc:1504|1504,*gnss:2828|2827,*adc1:0|0,*adc2:0|0,*sos1:4238|4238,*sos2:4251|4251,*scap:4795|4786;</msg>
<msg timestamp="20190730 01:04:11.053" level="INFO">${c} = adc_drv chn:9,calib:1,cnv:1831,**pwr:13757|13757,*batt:3292|3286,*bntc:1504|1504,*gnss:2828|2827,*adc1:0|0,*adc2:0|0,*sos1:4238|4238,*sos2:4251|4251,*scap:4795|4786;</msg>
<status status="PASS" starttime="20190730 01:04:10.843" endtime="20190730 01:04:11.053"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${c}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:04:11.058" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1831', '**pwr', '13757', '13757', '*batt', '3292', '3286', '*bntc', '1504', '1504', '*gnss', '2828', '2827', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4238', '4238', '*sos2', '4251', '4251', '*scap', '4795', '4786', '']</msg>
<msg timestamp="20190730 01:04:11.059" level="INFO">${d} = 4795</msg>
<status status="PASS" starttime="20190730 01:04:11.055" endtime="20190730 01:04:11.060"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${d})</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:04:11.065" level="INFO">${d} = 4795</msg>
<status status="PASS" starttime="20190730 01:04:11.062" endtime="20190730 01:04:11.065"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${d}&lt;=${b}</arg>
<arg>Fail</arg>
<arg>电容未充电</arg>
</arguments>
<status status="PASS" starttime="20190730 01:04:11.067" endtime="20190730 01:04:11.071"></status>
</kw>
<status status="PASS" starttime="20190730 01:04:06.516" endtime="20190730 01:04:11.071"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190730 01:04:11.355" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1834,**pwr:13757|13757,*batt:3297|3294,*bntc:1504|1504,*gnss:2828|2827,*adc1:0|0,*adc2:0|0,*sos1:4238|4238,*sos2:4251|4251,*scap:4813|4804;</msg>
<msg timestamp="20190730 01:04:11.356" level="INFO">${a} = adc_drv chn:9,calib:1,cnv:1834,**pwr:13757|13757,*batt:3297|3294,*bntc:1504|1504,*gnss:2828|2827,*adc1:0|0,*adc2:0|0,*sos1:4238|4238,*sos2:4251|4251,*scap:4813|4804;</msg>
<status status="PASS" starttime="20190730 01:04:11.074" endtime="20190730 01:04:11.357"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190730 01:04:11.362" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1834', '**pwr', '13757', '13757', '*batt', '3297', '3294', '*bntc', '1504', '1504', '*gnss', '2828', '2827', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4238', '4238', '*sos2', '4251', '4251', '*scap', '4813', '4804', '']</msg>
<msg timestamp="20190730 01:04:11.363" level="INFO">${b} = 4813</msg>
<status status="PASS" starttime="20190730 01:04:11.359" endtime="20190730 01:04:11.364"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${b})</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190730 01:04:11.369" level="INFO">${b} = 4813</msg>
<status status="PASS" starttime="20190730 01:04:11.366" endtime="20190730 01:04:11.370"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${b}&gt;6900</arg>
</arguments>
<status status="PASS" starttime="20190730 01:04:11.371" endtime="20190730 01:04:11.374"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190730 01:04:15.378" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20190730 01:04:11.376" endtime="20190730 01:04:15.379"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190730 01:04:15.588" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1875,**pwr:13651|13642,*batt:3333|3333,*bntc:1506|1506,*gnss:2826|2826,*adc1:0|0,*adc2:0|0,*sos1:4240|4238,*sos2:4251|4251,*scap:4955|4946;</msg>
<msg timestamp="20190730 01:04:15.590" level="INFO">${c} = adc_drv chn:9,calib:1,cnv:1875,**pwr:13651|13642,*batt:3333|3333,*bntc:1506|1506,*gnss:2826|2826,*adc1:0|0,*adc2:0|0,*sos1:4240|4238,*sos2:4251|4251,*scap:4955|4946;</msg>
<status status="PASS" starttime="20190730 01:04:15.381" endtime="20190730 01:04:15.590"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${c}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:04:15.601" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1875', '**pwr', '13651', '13642', '*batt', '3333', '3333', '*bntc', '1506', '1506', '*gnss', '2826', '2826', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4240', '4238', '*sos2', '4251', '4251', '*scap', '4955', '4946', '']</msg>
<msg timestamp="20190730 01:04:15.602" level="INFO">${d} = 4955</msg>
<status status="PASS" starttime="20190730 01:04:15.597" endtime="20190730 01:04:15.602"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${d})</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190730 01:04:15.608" level="INFO">${d} = 4955</msg>
<status status="PASS" starttime="20190730 01:04:15.604" endtime="20190730 01:04:15.609"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${d}&lt;=${b}</arg>
<arg>Fail</arg>
<arg>电容未充电</arg>
</arguments>
<status status="PASS" starttime="20190730 01:04:15.610" endtime="20190730 01:04:15.615"></status>
</kw>
<status status="PASS" starttime="20190730 01:04:11.072" endtime="20190730 01:04:15.615"></status>
</kw>
<status status="PASS" starttime="20190730 01:04:06.515" endtime="20190730 01:04:15.616"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>TS10_电容</arg>
<arg>PASS</arg>
</arguments>
<status status="PASS" starttime="20190730 01:04:15.618" endtime="20190730 01:04:15.623"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190730 01:04:15.627" endtime="20190730 01:04:15.629"></status>
</kw>
<status status="PASS" starttime="20190730 01:03:58.401" endtime="20190730 01:04:15.631" critical="yes"></status>
</test>
<test id="s1-t8" name="IOT_型号日期设置">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${DATA_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<msg timestamp="20190730 01:04:15.661" level="INFO">Execution passed with message:
此项不测试</msg>
<status status="PASS" starttime="20190730 01:04:15.655" endtime="20190730 01:04:15.662"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190730 01:04:15.666" endtime="20190730 01:04:15.669"></status>
</kw>
<status status="PASS" starttime="20190730 01:04:15.637" endtime="20190730 01:04:15.670" critical="yes">此项不测试</status>
</test>
<test id="s1-t9" name="IOT_PID设置">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${PID_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<msg timestamp="20190730 01:04:15.694" level="INFO">Execution passed with message:
此项不测试</msg>
<status status="PASS" starttime="20190730 01:04:15.690" endtime="20190730 01:04:15.695"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190730 01:04:15.699" endtime="20190730 01:04:15.701"></status>
</kw>
<status status="PASS" starttime="20190730 01:04:15.678" endtime="20190730 01:04:15.703" critical="yes">此项不测试</status>
</test>
<test id="s1-t10" name="GET_END">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+L1+nw.e01.r01.ic=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${ICCID_}</var>
</assign>
<msg timestamp="20190730 01:04:15.926" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+L1+nw.e01.r01.ic=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+L1+NW.E01.R01.IC=89860919730027326522;</msg>
<msg timestamp="20190730 01:04:15.927" level="INFO">${ICCID_} = 89860919730027326522</msg>
<status status="PASS" starttime="20190730 01:04:15.716" endtime="20190730 01:04:15.927"></status>
</kw>
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time2}</var>
</assign>
<msg timestamp="20190730 01:04:15.930" level="INFO">${time2} = 2019-07-30 01:04:15</msg>
<status status="PASS" starttime="20190730 01:04:15.928" endtime="20190730 01:04:15.930"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>结束时间:${time2}</arg>
</arguments>
<status status="PASS" starttime="20190730 01:04:15.932" endtime="20190730 01:04:15.934"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>${ICCID_}</arg>
</arguments>
<status status="PASS" starttime="20190730 01:04:15.935" endtime="20190730 01:04:15.938"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>***************************************************************************************</arg>
</arguments>
<status status="PASS" starttime="20190730 01:04:15.939" endtime="20190730 01:04:15.942"></status>
</kw>
<kw name="Txtrwx Transfer" library="Txtrwx">
<arguments>
<arg>/home/pi/production/mid.txt</arg>
<arg>/home/pi/production/log/整机测试日志.txt</arg>
</arguments>
<status status="PASS" starttime="20190730 01:04:15.943" endtime="20190730 01:04:15.945"></status>
</kw>
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/production/mid.txt</arg>
</arguments>
<status status="PASS" starttime="20190730 01:04:15.946" endtime="20190730 01:04:15.997"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190730 01:04:16.000" endtime="20190730 01:04:16.002"></status>
</kw>
<status status="PASS" starttime="20190730 01:04:15.709" endtime="20190730 01:04:16.003" critical="yes"></status>
</test>
<kw name="clear" type="teardown">
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/production/mid.txt</arg>
</arguments>
<msg timestamp="20190730 01:04:16.019" level="INFO">文件不存在</msg>
<status status="PASS" starttime="20190730 01:04:16.018" endtime="20190730 01:04:16.019"></status>
</kw>
<kw name="Power KL30 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190730 01:04:16.020" endtime="20190730 01:04:16.021"></status>
</kw>
<kw name="Power KL15 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190730 01:04:16.022" endtime="20190730 01:04:16.023"></status>
</kw>
<status status="PASS" starttime="20190730 01:04:16.015" endtime="20190730 01:04:16.024"></status>
</kw>
<status status="PASS" starttime="20190730 01:01:25.821" endtime="20190730 01:04:16.024"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="Ai Test">Ai Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
