<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.7.0 on linux)" generated="20190729 19:01:13.519">
<suite id="s1" name="Ai Test" source="/home/pi/production/case/ai_test.txt">
<test id="s1-t1" name="GET_Ready">
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time1}</var>
</assign>
<msg timestamp="20190729 19:01:14.654" level="INFO">${time1} = 2019-07-29 19:01:14</msg>
<status status="PASS" starttime="20190729 19:01:14.652" endtime="20190729 19:01:14.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${time1}</arg>
</arguments>
<msg timestamp="20190729 19:01:14.661" level="INFO">${time1} = 2019-07-29 19:01:14</msg>
<status status="PASS" starttime="20190729 19:01:14.658" endtime="20190729 19:01:14.662"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>25</arg>
</arguments>
<msg timestamp="20190729 19:01:39.665" level="INFO">Slept 25 seconds</msg>
<status status="PASS" starttime="20190729 19:01:14.663" endtime="20190729 19:01:39.667"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ABOX_TEST}==1</arg>
<arg>发起自检</arg>
</arguments>
<kw name="发起自检">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.con.alive=5</arg>
<arg>IOT-S1+AI.M.CON.ALIVE=5</arg>
</arguments>
<msg timestamp="20190729 19:01:39.885" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.con.alive=5
应该收到串口数据: IOT-S1+AI.M.CON.ALIVE=5
实际接收到的数据:  IOT-S1+AI.M.CON.ALIVE=5;</msg>
<status status="PASS" starttime="20190729 19:01:39.677" endtime="20190729 19:01:39.886"></status>
</kw>
<kw name="${i} IN RANGE [ 80 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.con.st=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:01:40.188" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.con.st=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CON.ST=0;</msg>
<msg timestamp="20190729 19:01:40.190" level="INFO">${a} = 0</msg>
<status status="PASS" starttime="20190729 19:01:39.890" endtime="20190729 19:01:40.190"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${a}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:01:40.192" endtime="20190729 19:01:40.196"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:01:41.200" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:01:40.197" endtime="20190729 19:01:41.201"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:39.889" endtime="20190729 19:01:41.202"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.con.st=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:01:41.411" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.con.st=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CON.ST=0;</msg>
<msg timestamp="20190729 19:01:41.413" level="INFO">${a} = 0</msg>
<status status="PASS" starttime="20190729 19:01:41.204" endtime="20190729 19:01:41.413"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${a}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:01:41.415" endtime="20190729 19:01:41.419"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:01:42.422" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:01:41.420" endtime="20190729 19:01:42.424"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:41.203" endtime="20190729 19:01:42.424"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.con.st=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:01:42.634" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.con.st=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CON.ST=0;</msg>
<msg timestamp="20190729 19:01:42.635" level="INFO">${a} = 0</msg>
<status status="PASS" starttime="20190729 19:01:42.427" endtime="20190729 19:01:42.636"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${a}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:01:42.638" endtime="20190729 19:01:42.642"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:01:43.647" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:01:42.644" endtime="20190729 19:01:43.649"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:42.425" endtime="20190729 19:01:43.650"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.con.st=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:01:43.874" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.con.st=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CON.ST=0;</msg>
<msg timestamp="20190729 19:01:43.876" level="INFO">${a} = 0</msg>
<status status="PASS" starttime="20190729 19:01:43.652" endtime="20190729 19:01:43.876"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${a}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:01:43.878" endtime="20190729 19:01:43.882"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:01:44.886" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:01:43.883" endtime="20190729 19:01:44.887"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:43.650" endtime="20190729 19:01:44.888"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.con.st=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:01:45.097" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.con.st=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CON.ST=0;</msg>
<msg timestamp="20190729 19:01:45.100" level="INFO">${a} = 0</msg>
<status status="PASS" starttime="20190729 19:01:44.890" endtime="20190729 19:01:45.101"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${a}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:01:45.103" endtime="20190729 19:01:45.108"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:01:46.113" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:01:45.110" endtime="20190729 19:01:46.114"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:44.889" endtime="20190729 19:01:46.116"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.con.st=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:01:46.331" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.con.st=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CON.ST=1;</msg>
<msg timestamp="20190729 19:01:46.333" level="INFO">${a} = 1</msg>
<status status="PASS" starttime="20190729 19:01:46.121" endtime="20190729 19:01:46.334"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${a}'=='1'</arg>
</arguments>
<msg timestamp="20190729 19:01:46.339" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:01:46.335" endtime="20190729 19:01:46.340"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:46.118" endtime="20190729 19:01:46.341"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:39.887" endtime="20190729 19:01:46.341"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==79</arg>
<arg>Fail</arg>
<arg>串口状态连接失败</arg>
</arguments>
<status status="PASS" starttime="20190729 19:01:46.343" endtime="20190729 19:01:46.346"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.lev.switch=0</arg>
<arg>IOT-V1+AI.LEV.SWITCH=successful;</arg>
</arguments>
<msg timestamp="20190729 19:01:46.635" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.lev.switch=0
应该收到串口数据: IOT-V1+AI.LEV.SWITCH=successful;
实际接收到的数据:  IOT-V1+AI.LEV.SWITCH=successful;</msg>
<status status="PASS" starttime="20190729 19:01:46.348" endtime="20190729 19:01:46.636"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190729 19:01:51.640" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190729 19:01:46.638" endtime="20190729 19:01:51.642"></status>
</kw>
<kw name="${i} IN RANGE [ 8 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.self.check=1</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:01:51.852" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.self.check=1
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.SELF.CHECK=successful;</msg>
<msg timestamp="20190729 19:01:51.853" level="INFO">${b} = successful</msg>
<status status="PASS" starttime="20190729 19:01:51.646" endtime="20190729 19:01:51.854"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20190729 19:01:53.858" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190729 19:01:51.856" endtime="20190729 19:01:53.859"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.se.ch.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:01:54.068" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.se.ch.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.SE.CH.ACK=1;</msg>
<msg timestamp="20190729 19:01:54.070" level="INFO">${c} = 1</msg>
<status status="PASS" starttime="20190729 19:01:53.861" endtime="20190729 19:01:54.071"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${c}'=='1'</arg>
</arguments>
<msg timestamp="20190729 19:01:54.077" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:01:54.073" endtime="20190729 19:01:54.078"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:51.644" endtime="20190729 19:01:54.079"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:51.642" endtime="20190729 19:01:54.079"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==7</arg>
<arg>Fail</arg>
<arg>发起自检失败</arg>
</arguments>
<status status="PASS" starttime="20190729 19:01:54.082" endtime="20190729 19:01:54.086"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:39.673" endtime="20190729 19:01:54.087"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:39.669" endtime="20190729 19:01:54.088"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>开始时间:${time1}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:01:54.090" endtime="20190729 19:01:54.096"></status>
</kw>
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time3}</var>
</assign>
<msg timestamp="20190729 19:01:54.102" level="INFO">${time3} = 2019-07-29 19:01:54</msg>
<status status="PASS" starttime="20190729 19:01:54.098" endtime="20190729 19:01:54.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${time3}</arg>
</arguments>
<msg timestamp="20190729 19:01:54.110" level="INFO">${time3} = 2019-07-29 19:01:54</msg>
<status status="PASS" starttime="20190729 19:01:54.106" endtime="20190729 19:01:54.111"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:01:54.115" endtime="20190729 19:01:54.119"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:14.646" endtime="20190729 19:01:54.120" critical="yes"></status>
</test>
<test id="s1-t2" name="TS01_TONGXIN">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${TONGXIN_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 19:01:54.136" endtime="20190729 19:01:54.141"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1+nw.e01.inf=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:01:54.372" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+D1+nw.e01.inf=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+D3+NW.E01.INF=863412047473346,EC20CEFAG,EC20CEFAGR06A06M4G_OCPU  1  [Oct;</msg>
<msg timestamp="20190729 19:01:54.373" level="INFO">${a} = 863412047473346,EC20CEFAG,EC20CEFAGR06A06M4G_OCPU  1  [Oct</msg>
<status status="PASS" starttime="20190729 19:01:54.144" endtime="20190729 19:01:54.373"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:01:54.378" level="INFO">['863412047473346', 'EC20CEFAG', 'EC20CEFAGR06A06M4G_OCPU', '1', '[Oct']</msg>
<msg timestamp="20190729 19:01:54.379" level="INFO">${b} = ['EC20CEFAGR06A06M4G_OCPU']</msg>
<status status="PASS" starttime="20190729 19:01:54.374" endtime="20190729 19:01:54.379"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${b[0]}'!='${communication_version}'</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:01:54.380" endtime="20190729 19:01:54.383"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+nw.e01.stu=?</arg>
<arg>IOT</arg>
<arg>wait_time=6</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:01:54.674" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+nw.e01.stu=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+NW.E01.STU=LTE,2,LTE,2,1,169,13;</msg>
<msg timestamp="20190729 19:01:54.675" level="INFO">${c} = LTE,2,LTE,2,1,169,13</msg>
<status status="PASS" starttime="20190729 19:01:54.384" endtime="20190729 19:01:54.675"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:01:54.678" level="INFO">['LTE', '2', 'LTE', '2', '1', '169', '13']</msg>
<msg timestamp="20190729 19:01:54.679" level="INFO">${d} = ['LTE']</msg>
<status status="PASS" starttime="20190729 19:01:54.676" endtime="20190729 19:01:54.679"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${e}</var>
</assign>
<msg timestamp="20190729 19:01:54.682" level="INFO">['LTE', '2', 'LTE', '2', '1', '169', '13']</msg>
<msg timestamp="20190729 19:01:54.682" level="INFO">${e} = ['2']</msg>
<status status="PASS" starttime="20190729 19:01:54.680" endtime="20190729 19:01:54.683"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190729 19:01:54.685" level="INFO">['LTE', '2', 'LTE', '2', '1', '169', '13']</msg>
<msg timestamp="20190729 19:01:54.686" level="INFO">${f} = ['LTE']</msg>
<status status="PASS" starttime="20190729 19:01:54.684" endtime="20190729 19:01:54.686"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${g}</var>
</assign>
<msg timestamp="20190729 19:01:54.689" level="INFO">['LTE', '2', 'LTE', '2', '1', '169', '13']</msg>
<msg timestamp="20190729 19:01:54.690" level="INFO">${g} = ['2']</msg>
<status status="PASS" starttime="20190729 19:01:54.687" endtime="20190729 19:01:54.690"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${h}</var>
</assign>
<msg timestamp="20190729 19:01:54.693" level="INFO">['LTE', '2', 'LTE', '2', '1', '169', '13']</msg>
<msg timestamp="20190729 19:01:54.693" level="INFO">${h} = ['1']</msg>
<status status="PASS" starttime="20190729 19:01:54.691" endtime="20190729 19:01:54.694"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${communication_1}</arg>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190729 19:01:54.697" level="INFO">${one} = 1</msg>
<status status="PASS" starttime="20190729 19:01:54.695" endtime="20190729 19:01:54.697"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${communication_1}</arg>
<arg>${f[0]}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190729 19:01:54.702" level="INFO">${two} = 1</msg>
<status status="PASS" starttime="20190729 19:01:54.699" endtime="20190729 19:01:54.702"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${one}!=1 or ${two}!=1 or '${e[0]}'!='${communication_2}' or '${g[0]}'!= '${communication_2}' or '${h[0]}'!='${communication_3}'</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:01:54.704" endtime="20190729 19:01:54.709"></status>
</kw>
<kw name="${I} IN RANGE [ 30 ]" type="for">
<kw name="${I} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+nw.e01.stu=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:01:54.977" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+nw.e01.stu=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+NW.E01.STU=LTE,2,LTE,2,1,169,13;</msg>
<msg timestamp="20190729 19:01:54.978" level="INFO">${c} = LTE,2,LTE,2,1,169,13</msg>
<status status="PASS" starttime="20190729 19:01:54.712" endtime="20190729 19:01:54.979"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${m}</var>
</assign>
<msg timestamp="20190729 19:01:54.985" level="INFO">['LTE', '2', 'LTE', '2', '1', '169', '13']</msg>
<msg timestamp="20190729 19:01:54.987" level="INFO">${m} = ['13']</msg>
<status status="PASS" starttime="20190729 19:01:54.981" endtime="20190729 19:01:54.987"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${m[0]}</arg>
</arguments>
<assign>
<var>${m}</var>
</assign>
<msg timestamp="20190729 19:01:54.993" level="INFO">${m} = 13</msg>
<status status="PASS" starttime="20190729 19:01:54.989" endtime="20190729 19:01:54.993"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${m}&gt;${signal_value}</arg>
</arguments>
<msg timestamp="20190729 19:01:54.998" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:01:54.995" endtime="20190729 19:01:55.000"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:54.711" endtime="20190729 19:01:55.000"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:54.710" endtime="20190729 19:01:55.001"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${I}==29</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:01:55.004" endtime="20190729 19:01:55.008"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:01:55.011" endtime="20190729 19:01:55.013"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:54.129" endtime="20190729 19:01:55.014" critical="yes"></status>
</test>
<test id="s1-t3" name="TS03_串口2">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${SERIAL_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 19:01:55.038" endtime="20190729 19:01:55.043"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-crt-chn2-baud115200</arg>
<arg>(bsp)usart</arg>
</arguments>
<msg timestamp="20190729 19:01:55.289" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-crt-chn2-baud115200
应该收到串口数据: (bsp)usart
实际接收到的数据:  (bsp)usart callback, handle:0x1FFF45D8, sta_calb:0.</msg>
<status status="PASS" starttime="20190729 19:01:55.045" endtime="20190729 19:01:55.290"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-opn-chn2</arg>
<arg>(bsp)usar</arg>
</arguments>
<msg timestamp="20190729 19:01:55.591" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-opn-chn2
应该收到串口数据: (bsp)usar
实际接收到的数据:  (bsp)usart open, handle:0x1FFF45D8, ret:0.</msg>
<status status="PASS" starttime="20190729 19:01:55.291" endtime="20190729 19:01:55.592"></status>
</kw>
<kw name="Start Ama0 Recv" library="SerialLibrary">
<status status="PASS" starttime="20190729 19:01:55.593" endtime="20190729 19:01:55.604"></status>
</kw>
<kw name="${i} IN RANGE [ 5 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 19:01:55.894" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF45D8, ret:0.</msg>
<status status="PASS" starttime="20190729 19:01:55.612" endtime="20190729 19:01:55.895"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:55.610" endtime="20190729 19:01:55.896"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 19:01:56.197" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF45D8, ret:0.</msg>
<status status="PASS" starttime="20190729 19:01:55.899" endtime="20190729 19:01:56.198"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:55.897" endtime="20190729 19:01:56.199"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 19:01:56.500" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF45D8, ret:0.</msg>
<status status="PASS" starttime="20190729 19:01:56.202" endtime="20190729 19:01:56.501"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:56.200" endtime="20190729 19:01:56.501"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 19:01:56.803" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF45D8, ret:0.</msg>
<status status="PASS" starttime="20190729 19:01:56.505" endtime="20190729 19:01:56.804"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:56.503" endtime="20190729 19:01:56.804"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 19:01:57.106" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF45D8, ret:0.</msg>
<status status="PASS" starttime="20190729 19:01:56.807" endtime="20190729 19:01:57.107"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:56.805" endtime="20190729 19:01:57.108"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:55.607" endtime="20190729 19:01:57.108"></status>
</kw>
<kw name="Txtrwx Read" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2.txt</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20190729 19:01:57.114" level="INFO">${r} = hello
hello
hello
hello
hello
</msg>
<status status="PASS" starttime="20190729 19:01:57.110" endtime="20190729 19:01:57.115"></status>
</kw>
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2.txt</arg>
</arguments>
<status status="PASS" starttime="20190729 19:01:57.117" endtime="20190729 19:01:57.199"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${r}</arg>
<arg>hello</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:01:57.207" level="INFO">${a} = 1</msg>
<status status="PASS" starttime="20190729 19:01:57.203" endtime="20190729 19:01:57.208"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${a}==0</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:01:57.211" endtime="20190729 19:01:57.215"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20190729 19:01:59.221" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190729 19:01:57.218" endtime="20190729 19:01:59.222"></status>
</kw>
<kw name="Serial Ama0 Send" library="SerialLibrary">
<arguments>
<arg>goodgoodgood</arg>
</arguments>
<status status="PASS" starttime="20190729 19:01:59.225" endtime="20190729 19:01:59.231"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20190729 19:02:01.243" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190729 19:01:59.234" endtime="20190729 19:02:01.244"></status>
</kw>
<kw name="Txtrwx Read" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2_send.txt</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20190729 19:02:01.251" level="INFO">${r} = goodgoodgood
</msg>
<status status="PASS" starttime="20190729 19:02:01.247" endtime="20190729 19:02:01.251"></status>
</kw>
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2_send.txt</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:01.254" endtime="20190729 19:02:01.337"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${r}</arg>
<arg>goodgoodgood</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:02:01.344" level="INFO">${a} = 1</msg>
<status status="PASS" starttime="20190729 19:02:01.340" endtime="20190729 19:02:01.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${a}==0</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:01.347" endtime="20190729 19:02:01.351"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:01.355" endtime="20190729 19:02:01.361"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:55.023" endtime="20190729 19:02:01.363" critical="yes"></status>
</test>
<test id="s1-t4" name="TS04_定位">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${GPS_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:01.385" endtime="20190729 19:02:01.390"></status>
</kw>
<kw name="${I} IN RANGE [ 120 ]" type="for">
<kw name="${I} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+GNSS=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:02:01.604" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+GNSS=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+GNSS= MC120A, 1.1.1,2,0,4,0,00000000;</msg>
<msg timestamp="20190729 19:02:01.605" level="INFO">${a} =  MC120A, 1.1.1,2,0,4,0,00000000</msg>
<status status="PASS" starttime="20190729 19:02:01.395" endtime="20190729 19:02:01.605"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190729 19:02:01.608" level="INFO">['', 'MC120A', '1.1.1', '2', '0', '4', '0', '00000000']</msg>
<msg timestamp="20190729 19:02:01.609" level="INFO">${k} = ['MC120A']</msg>
<status status="PASS" starttime="20190729 19:02:01.606" endtime="20190729 19:02:01.609"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:02:01.612" level="INFO">['', 'MC120A', '1.1.1', '2', '0', '4', '0', '00000000']</msg>
<msg timestamp="20190729 19:02:01.613" level="INFO">${b} = ['1.1.1']</msg>
<status status="PASS" starttime="20190729 19:02:01.610" endtime="20190729 19:02:01.613"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:02:01.615" level="INFO">['', 'MC120A', '1.1.1', '2', '0', '4', '0', '00000000']</msg>
<msg timestamp="20190729 19:02:01.616" level="INFO">${c} = ['2']</msg>
<status status="PASS" starttime="20190729 19:02:01.614" endtime="20190729 19:02:01.616"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:01.619" level="INFO">['', 'MC120A', '1.1.1', '2', '0', '4', '0', '00000000']</msg>
<msg timestamp="20190729 19:02:01.619" level="INFO">${d} = ['4']</msg>
<status status="PASS" starttime="20190729 19:02:01.617" endtime="20190729 19:02:01.619"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:01.623" level="INFO">${d} = 4</msg>
<status status="PASS" starttime="20190729 19:02:01.620" endtime="20190729 19:02:01.623"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k[0]}'=='${GPS_model}' and '${b[0]}'== '${GPS_version}' and '${c[0]}'=='${GPS_state}' and ${d}&gt;${GPS_number}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:01.624" endtime="20190729 19:02:01.628"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:02.631" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:01.629" endtime="20190729 19:02:02.633"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:01.393" endtime="20190729 19:02:02.633"></status>
</kw>
<kw name="${I} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+GNSS=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:02:02.842" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+GNSS=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+GNSS= MC120A, 1.1.1,1,1,5,1564635572,00000000;</msg>
<msg timestamp="20190729 19:02:02.844" level="INFO">${a} =  MC120A, 1.1.1,1,1,5,1564635572,00000000</msg>
<status status="PASS" starttime="20190729 19:02:02.636" endtime="20190729 19:02:02.845"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190729 19:02:02.850" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '5', '1564635572', '00000000']</msg>
<msg timestamp="20190729 19:02:02.851" level="INFO">${k} = ['MC120A']</msg>
<status status="PASS" starttime="20190729 19:02:02.846" endtime="20190729 19:02:02.851"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:02:02.856" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '5', '1564635572', '00000000']</msg>
<msg timestamp="20190729 19:02:02.857" level="INFO">${b} = ['1.1.1']</msg>
<status status="PASS" starttime="20190729 19:02:02.853" endtime="20190729 19:02:02.858"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:02:02.862" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '5', '1564635572', '00000000']</msg>
<msg timestamp="20190729 19:02:02.863" level="INFO">${c} = ['1']</msg>
<status status="PASS" starttime="20190729 19:02:02.860" endtime="20190729 19:02:02.864"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:02.869" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '5', '1564635572', '00000000']</msg>
<msg timestamp="20190729 19:02:02.870" level="INFO">${d} = ['5']</msg>
<status status="PASS" starttime="20190729 19:02:02.866" endtime="20190729 19:02:02.870"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:02.876" level="INFO">${d} = 5</msg>
<status status="PASS" starttime="20190729 19:02:02.872" endtime="20190729 19:02:02.876"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k[0]}'=='${GPS_model}' and '${b[0]}'== '${GPS_version}' and '${c[0]}'=='${GPS_state}' and ${d}&gt;${GPS_number}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:02.878" endtime="20190729 19:02:02.887"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:03.891" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:02.888" endtime="20190729 19:02:03.892"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:02.634" endtime="20190729 19:02:03.893"></status>
</kw>
<kw name="${I} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+GNSS=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:02:04.103" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+GNSS=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+GNSS= MC120A, 1.1.1,1,1,6,1564635573,00000000;</msg>
<msg timestamp="20190729 19:02:04.104" level="INFO">${a} =  MC120A, 1.1.1,1,1,6,1564635573,00000000</msg>
<status status="PASS" starttime="20190729 19:02:03.895" endtime="20190729 19:02:04.105"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190729 19:02:04.109" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635573', '00000000']</msg>
<msg timestamp="20190729 19:02:04.110" level="INFO">${k} = ['MC120A']</msg>
<status status="PASS" starttime="20190729 19:02:04.106" endtime="20190729 19:02:04.111"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:02:04.119" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635573', '00000000']</msg>
<msg timestamp="20190729 19:02:04.120" level="INFO">${b} = ['1.1.1']</msg>
<status status="PASS" starttime="20190729 19:02:04.113" endtime="20190729 19:02:04.121"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:02:04.124" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635573', '00000000']</msg>
<msg timestamp="20190729 19:02:04.125" level="INFO">${c} = ['1']</msg>
<status status="PASS" starttime="20190729 19:02:04.122" endtime="20190729 19:02:04.125"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:04.129" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635573', '00000000']</msg>
<msg timestamp="20190729 19:02:04.129" level="INFO">${d} = ['6']</msg>
<status status="PASS" starttime="20190729 19:02:04.127" endtime="20190729 19:02:04.130"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:04.133" level="INFO">${d} = 6</msg>
<status status="PASS" starttime="20190729 19:02:04.131" endtime="20190729 19:02:04.133"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k[0]}'=='${GPS_model}' and '${b[0]}'== '${GPS_version}' and '${c[0]}'=='${GPS_state}' and ${d}&gt;${GPS_number}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:04.134" endtime="20190729 19:02:04.139"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:05.142" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:04.140" endtime="20190729 19:02:05.143"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:03.894" endtime="20190729 19:02:05.144"></status>
</kw>
<kw name="${I} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+GNSS=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:02:05.355" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+GNSS=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+GNSS= MC120A, 1.1.1,1,1,6,1564635575,00000000;</msg>
<msg timestamp="20190729 19:02:05.357" level="INFO">${a} =  MC120A, 1.1.1,1,1,6,1564635575,00000000</msg>
<status status="PASS" starttime="20190729 19:02:05.146" endtime="20190729 19:02:05.357"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190729 19:02:05.362" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635575', '00000000']</msg>
<msg timestamp="20190729 19:02:05.363" level="INFO">${k} = ['MC120A']</msg>
<status status="PASS" starttime="20190729 19:02:05.359" endtime="20190729 19:02:05.364"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:02:05.369" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635575', '00000000']</msg>
<msg timestamp="20190729 19:02:05.370" level="INFO">${b} = ['1.1.1']</msg>
<status status="PASS" starttime="20190729 19:02:05.366" endtime="20190729 19:02:05.371"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:02:05.375" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635575', '00000000']</msg>
<msg timestamp="20190729 19:02:05.376" level="INFO">${c} = ['1']</msg>
<status status="PASS" starttime="20190729 19:02:05.373" endtime="20190729 19:02:05.377"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:05.382" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635575', '00000000']</msg>
<msg timestamp="20190729 19:02:05.383" level="INFO">${d} = ['6']</msg>
<status status="PASS" starttime="20190729 19:02:05.379" endtime="20190729 19:02:05.383"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:05.389" level="INFO">${d} = 6</msg>
<status status="PASS" starttime="20190729 19:02:05.385" endtime="20190729 19:02:05.389"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k[0]}'=='${GPS_model}' and '${b[0]}'== '${GPS_version}' and '${c[0]}'=='${GPS_state}' and ${d}&gt;${GPS_number}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:05.391" endtime="20190729 19:02:05.400"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:06.404" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:05.401" endtime="20190729 19:02:06.405"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:05.145" endtime="20190729 19:02:06.406"></status>
</kw>
<kw name="${I} = 4" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+GNSS=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:02:06.617" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+GNSS=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+GNSS= MC120A, 1.1.1,1,1,6,1564635576,00000000;</msg>
<msg timestamp="20190729 19:02:06.620" level="INFO">${a} =  MC120A, 1.1.1,1,1,6,1564635576,00000000</msg>
<status status="PASS" starttime="20190729 19:02:06.410" endtime="20190729 19:02:06.621"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190729 19:02:06.629" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635576', '00000000']</msg>
<msg timestamp="20190729 19:02:06.631" level="INFO">${k} = ['MC120A']</msg>
<status status="PASS" starttime="20190729 19:02:06.624" endtime="20190729 19:02:06.632"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:02:06.639" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635576', '00000000']</msg>
<msg timestamp="20190729 19:02:06.640" level="INFO">${b} = ['1.1.1']</msg>
<status status="PASS" starttime="20190729 19:02:06.634" endtime="20190729 19:02:06.641"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:02:06.646" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635576', '00000000']</msg>
<msg timestamp="20190729 19:02:06.647" level="INFO">${c} = ['1']</msg>
<status status="PASS" starttime="20190729 19:02:06.643" endtime="20190729 19:02:06.647"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:06.653" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635576', '00000000']</msg>
<msg timestamp="20190729 19:02:06.654" level="INFO">${d} = ['6']</msg>
<status status="PASS" starttime="20190729 19:02:06.650" endtime="20190729 19:02:06.655"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:06.661" level="INFO">${d} = 6</msg>
<status status="PASS" starttime="20190729 19:02:06.657" endtime="20190729 19:02:06.661"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k[0]}'=='${GPS_model}' and '${b[0]}'== '${GPS_version}' and '${c[0]}'=='${GPS_state}' and ${d}&gt;${GPS_number}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:06.663" endtime="20190729 19:02:06.673"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:07.679" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:06.676" endtime="20190729 19:02:07.680"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:06.407" endtime="20190729 19:02:07.681"></status>
</kw>
<kw name="${I} = 5" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+GNSS=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:02:07.891" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+GNSS=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+GNSS= MC120A, 1.1.1,1,1,6,1564635577,00000000;</msg>
<msg timestamp="20190729 19:02:07.892" level="INFO">${a} =  MC120A, 1.1.1,1,1,6,1564635577,00000000</msg>
<status status="PASS" starttime="20190729 19:02:07.684" endtime="20190729 19:02:07.893"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190729 19:02:07.898" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635577', '00000000']</msg>
<msg timestamp="20190729 19:02:07.900" level="INFO">${k} = ['MC120A']</msg>
<status status="PASS" starttime="20190729 19:02:07.895" endtime="20190729 19:02:07.900"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:02:07.907" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635577', '00000000']</msg>
<msg timestamp="20190729 19:02:07.909" level="INFO">${b} = ['1.1.1']</msg>
<status status="PASS" starttime="20190729 19:02:07.902" endtime="20190729 19:02:07.910"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:02:07.917" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635577', '00000000']</msg>
<msg timestamp="20190729 19:02:07.918" level="INFO">${c} = ['1']</msg>
<status status="PASS" starttime="20190729 19:02:07.912" endtime="20190729 19:02:07.919"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:07.924" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635577', '00000000']</msg>
<msg timestamp="20190729 19:02:07.925" level="INFO">${d} = ['6']</msg>
<status status="PASS" starttime="20190729 19:02:07.921" endtime="20190729 19:02:07.926"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:07.932" level="INFO">${d} = 6</msg>
<status status="PASS" starttime="20190729 19:02:07.928" endtime="20190729 19:02:07.933"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k[0]}'=='${GPS_model}' and '${b[0]}'== '${GPS_version}' and '${c[0]}'=='${GPS_state}' and ${d}&gt;${GPS_number}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:07.935" endtime="20190729 19:02:07.945"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:08.949" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:07.946" endtime="20190729 19:02:08.951"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:07.682" endtime="20190729 19:02:08.951"></status>
</kw>
<kw name="${I} = 6" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+GNSS=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:02:09.161" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+GNSS=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+GNSS= MC120A, 1.1.1,1,1,6,1564635579,00000000;</msg>
<msg timestamp="20190729 19:02:09.163" level="INFO">${a} =  MC120A, 1.1.1,1,1,6,1564635579,00000000</msg>
<status status="PASS" starttime="20190729 19:02:08.954" endtime="20190729 19:02:09.164"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190729 19:02:09.169" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635579', '00000000']</msg>
<msg timestamp="20190729 19:02:09.170" level="INFO">${k} = ['MC120A']</msg>
<status status="PASS" starttime="20190729 19:02:09.166" endtime="20190729 19:02:09.171"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:02:09.176" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635579', '00000000']</msg>
<msg timestamp="20190729 19:02:09.177" level="INFO">${b} = ['1.1.1']</msg>
<status status="PASS" starttime="20190729 19:02:09.173" endtime="20190729 19:02:09.178"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:02:09.183" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635579', '00000000']</msg>
<msg timestamp="20190729 19:02:09.184" level="INFO">${c} = ['1']</msg>
<status status="PASS" starttime="20190729 19:02:09.180" endtime="20190729 19:02:09.185"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:09.190" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635579', '00000000']</msg>
<msg timestamp="20190729 19:02:09.191" level="INFO">${d} = ['6']</msg>
<status status="PASS" starttime="20190729 19:02:09.187" endtime="20190729 19:02:09.192"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:09.200" level="INFO">${d} = 6</msg>
<status status="PASS" starttime="20190729 19:02:09.194" endtime="20190729 19:02:09.201"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k[0]}'=='${GPS_model}' and '${b[0]}'== '${GPS_version}' and '${c[0]}'=='${GPS_state}' and ${d}&gt;${GPS_number}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:09.203" endtime="20190729 19:02:09.212"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:10.217" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:09.214" endtime="20190729 19:02:10.219"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:08.952" endtime="20190729 19:02:10.219"></status>
</kw>
<kw name="${I} = 7" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+GNSS=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:02:10.430" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+GNSS=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+GNSS= MC120A, 1.1.1,1,1,6,1564635580,00000000;</msg>
<msg timestamp="20190729 19:02:10.431" level="INFO">${a} =  MC120A, 1.1.1,1,1,6,1564635580,00000000</msg>
<status status="PASS" starttime="20190729 19:02:10.222" endtime="20190729 19:02:10.432"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190729 19:02:10.438" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635580', '00000000']</msg>
<msg timestamp="20190729 19:02:10.440" level="INFO">${k} = ['MC120A']</msg>
<status status="PASS" starttime="20190729 19:02:10.434" endtime="20190729 19:02:10.440"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:02:10.445" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635580', '00000000']</msg>
<msg timestamp="20190729 19:02:10.447" level="INFO">${b} = ['1.1.1']</msg>
<status status="PASS" starttime="20190729 19:02:10.442" endtime="20190729 19:02:10.447"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:02:10.452" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635580', '00000000']</msg>
<msg timestamp="20190729 19:02:10.454" level="INFO">${c} = ['1']</msg>
<status status="PASS" starttime="20190729 19:02:10.449" endtime="20190729 19:02:10.454"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:10.459" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635580', '00000000']</msg>
<msg timestamp="20190729 19:02:10.461" level="INFO">${d} = ['6']</msg>
<status status="PASS" starttime="20190729 19:02:10.456" endtime="20190729 19:02:10.461"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:10.467" level="INFO">${d} = 6</msg>
<status status="PASS" starttime="20190729 19:02:10.463" endtime="20190729 19:02:10.468"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k[0]}'=='${GPS_model}' and '${b[0]}'== '${GPS_version}' and '${c[0]}'=='${GPS_state}' and ${d}&gt;${GPS_number}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:10.470" endtime="20190729 19:02:10.480"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:11.484" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:10.481" endtime="20190729 19:02:11.486"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:10.220" endtime="20190729 19:02:11.486"></status>
</kw>
<kw name="${I} = 8" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+GNSS=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:02:11.697" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+GNSS=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+GNSS= MC120A, 1.1.1,1,1,6,1564635581,00000000;</msg>
<msg timestamp="20190729 19:02:11.699" level="INFO">${a} =  MC120A, 1.1.1,1,1,6,1564635581,00000000</msg>
<status status="PASS" starttime="20190729 19:02:11.490" endtime="20190729 19:02:11.700"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190729 19:02:11.708" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635581', '00000000']</msg>
<msg timestamp="20190729 19:02:11.710" level="INFO">${k} = ['MC120A']</msg>
<status status="PASS" starttime="20190729 19:02:11.703" endtime="20190729 19:02:11.710"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:02:11.717" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635581', '00000000']</msg>
<msg timestamp="20190729 19:02:11.718" level="INFO">${b} = ['1.1.1']</msg>
<status status="PASS" starttime="20190729 19:02:11.713" endtime="20190729 19:02:11.719"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:02:11.729" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635581', '00000000']</msg>
<msg timestamp="20190729 19:02:11.732" level="INFO">${c} = ['1']</msg>
<status status="PASS" starttime="20190729 19:02:11.721" endtime="20190729 19:02:11.734"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:11.741" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635581', '00000000']</msg>
<msg timestamp="20190729 19:02:11.743" level="INFO">${d} = ['6']</msg>
<status status="PASS" starttime="20190729 19:02:11.737" endtime="20190729 19:02:11.744"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:11.751" level="INFO">${d} = 6</msg>
<status status="PASS" starttime="20190729 19:02:11.747" endtime="20190729 19:02:11.752"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k[0]}'=='${GPS_model}' and '${b[0]}'== '${GPS_version}' and '${c[0]}'=='${GPS_state}' and ${d}&gt;${GPS_number}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:11.754" endtime="20190729 19:02:11.763"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:12.769" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:11.766" endtime="20190729 19:02:12.770"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:11.487" endtime="20190729 19:02:12.771"></status>
</kw>
<kw name="${I} = 9" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+GNSS=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:02:12.982" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+GNSS=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+GNSS= MC120A, 1.1.1,1,1,6,1564635582,00000000;</msg>
<msg timestamp="20190729 19:02:12.983" level="INFO">${a} =  MC120A, 1.1.1,1,1,6,1564635582,00000000</msg>
<status status="PASS" starttime="20190729 19:02:12.774" endtime="20190729 19:02:12.984"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190729 19:02:12.989" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635582', '00000000']</msg>
<msg timestamp="20190729 19:02:12.994" level="INFO">${k} = ['MC120A']</msg>
<status status="PASS" starttime="20190729 19:02:12.986" endtime="20190729 19:02:12.994"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:02:12.999" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635582', '00000000']</msg>
<msg timestamp="20190729 19:02:13.001" level="INFO">${b} = ['1.1.1']</msg>
<status status="PASS" starttime="20190729 19:02:12.996" endtime="20190729 19:02:13.001"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:02:13.016" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635582', '00000000']</msg>
<msg timestamp="20190729 19:02:13.019" level="INFO">${c} = ['1']</msg>
<status status="PASS" starttime="20190729 19:02:13.003" endtime="20190729 19:02:13.020"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:13.026" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635582', '00000000']</msg>
<msg timestamp="20190729 19:02:13.027" level="INFO">${d} = ['6']</msg>
<status status="PASS" starttime="20190729 19:02:13.022" endtime="20190729 19:02:13.027"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:13.033" level="INFO">${d} = 6</msg>
<status status="PASS" starttime="20190729 19:02:13.029" endtime="20190729 19:02:13.033"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k[0]}'=='${GPS_model}' and '${b[0]}'== '${GPS_version}' and '${c[0]}'=='${GPS_state}' and ${d}&gt;${GPS_number}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:13.035" endtime="20190729 19:02:13.045"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:14.049" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:13.046" endtime="20190729 19:02:14.050"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:12.772" endtime="20190729 19:02:14.051"></status>
</kw>
<kw name="${I} = 10" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+GNSS=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:02:14.261" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+GNSS=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+GNSS= MC120A, 1.1.1,1,1,6,1564635584,00000000;</msg>
<msg timestamp="20190729 19:02:14.262" level="INFO">${a} =  MC120A, 1.1.1,1,1,6,1564635584,00000000</msg>
<status status="PASS" starttime="20190729 19:02:14.054" endtime="20190729 19:02:14.263"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190729 19:02:14.270" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635584', '00000000']</msg>
<msg timestamp="20190729 19:02:14.271" level="INFO">${k} = ['MC120A']</msg>
<status status="PASS" starttime="20190729 19:02:14.265" endtime="20190729 19:02:14.272"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:02:14.276" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635584', '00000000']</msg>
<msg timestamp="20190729 19:02:14.278" level="INFO">${b} = ['1.1.1']</msg>
<status status="PASS" starttime="20190729 19:02:14.274" endtime="20190729 19:02:14.278"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:02:14.283" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635584', '00000000']</msg>
<msg timestamp="20190729 19:02:14.284" level="INFO">${c} = ['1']</msg>
<status status="PASS" starttime="20190729 19:02:14.280" endtime="20190729 19:02:14.285"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:14.289" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '6', '1564635584', '00000000']</msg>
<msg timestamp="20190729 19:02:14.290" level="INFO">${d} = ['6']</msg>
<status status="PASS" starttime="20190729 19:02:14.286" endtime="20190729 19:02:14.291"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:14.296" level="INFO">${d} = 6</msg>
<status status="PASS" starttime="20190729 19:02:14.293" endtime="20190729 19:02:14.297"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k[0]}'=='${GPS_model}' and '${b[0]}'== '${GPS_version}' and '${c[0]}'=='${GPS_state}' and ${d}&gt;${GPS_number}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:14.299" endtime="20190729 19:02:14.307"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:15.311" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:14.309" endtime="20190729 19:02:15.313"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:14.052" endtime="20190729 19:02:15.313"></status>
</kw>
<kw name="${I} = 11" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+GNSS=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:02:15.524" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+GNSS=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+GNSS= MC120A, 1.1.1,1,1,7,1564635585,00000000;</msg>
<msg timestamp="20190729 19:02:15.525" level="INFO">${a} =  MC120A, 1.1.1,1,1,7,1564635585,00000000</msg>
<status status="PASS" starttime="20190729 19:02:15.316" endtime="20190729 19:02:15.526"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190729 19:02:15.531" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '7', '1564635585', '00000000']</msg>
<msg timestamp="20190729 19:02:15.532" level="INFO">${k} = ['MC120A']</msg>
<status status="PASS" starttime="20190729 19:02:15.528" endtime="20190729 19:02:15.532"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:02:15.537" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '7', '1564635585', '00000000']</msg>
<msg timestamp="20190729 19:02:15.538" level="INFO">${b} = ['1.1.1']</msg>
<status status="PASS" starttime="20190729 19:02:15.534" endtime="20190729 19:02:15.539"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:02:15.544" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '7', '1564635585', '00000000']</msg>
<msg timestamp="20190729 19:02:15.545" level="INFO">${c} = ['1']</msg>
<status status="PASS" starttime="20190729 19:02:15.541" endtime="20190729 19:02:15.546"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:15.551" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '7', '1564635585', '00000000']</msg>
<msg timestamp="20190729 19:02:15.552" level="INFO">${d} = ['7']</msg>
<status status="PASS" starttime="20190729 19:02:15.548" endtime="20190729 19:02:15.552"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:15.558" level="INFO">${d} = 7</msg>
<status status="PASS" starttime="20190729 19:02:15.554" endtime="20190729 19:02:15.558"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k[0]}'=='${GPS_model}' and '${b[0]}'== '${GPS_version}' and '${c[0]}'=='${GPS_state}' and ${d}&gt;${GPS_number}</arg>
</arguments>
<msg timestamp="20190729 19:02:15.569" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:02:15.560" endtime="20190729 19:02:15.571"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:15.314" endtime="20190729 19:02:15.571"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:01.391" endtime="20190729 19:02:15.572"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${I}==119</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:15.575" endtime="20190729 19:02:15.578"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>IOT_定位</arg>
<arg>PASS</arg>
<arg>IOT+S1+GNSS=?</arg>
<arg>${a}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:15.580" endtime="20190729 19:02:15.587"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+QXWZ=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${e}</var>
</assign>
<msg timestamp="20190729 19:02:16.029" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+QXWZ=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+QXWZ=1,1002,2002,3002,4014,0,0;</msg>
<msg timestamp="20190729 19:02:16.030" level="INFO">${e} = 1,1002,2002,3002,4014,0,0</msg>
<status status="PASS" starttime="20190729 19:02:15.590" endtime="20190729 19:02:16.030"></status>
</kw>
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time4}</var>
</assign>
<msg timestamp="20190729 19:02:16.033" level="INFO">${time4} = 2019-07-29 19:02:16</msg>
<status status="PASS" starttime="20190729 19:02:16.031" endtime="20190729 19:02:16.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${time4}</arg>
</arguments>
<msg timestamp="20190729 19:02:16.036" level="INFO">${time4} = 2019-07-29 19:02:16</msg>
<status status="PASS" starttime="20190729 19:02:16.034" endtime="20190729 19:02:16.037"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:16.039" endtime="20190729 19:02:16.040"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:01.371" endtime="20190729 19:02:16.041" critical="yes"></status>
</test>
<test id="s1-t5" name="TS05_WIFI">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${WIFI_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<msg timestamp="20190729 19:02:16.053" level="INFO">Execution passed with message:
此项不测试</msg>
<status status="PASS" starttime="20190729 19:02:16.050" endtime="20190729 19:02:16.054"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:16.056" endtime="20190729 19:02:16.058"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:16.044" endtime="20190729 19:02:16.059" critical="yes">此项不测试</status>
</test>
<test id="s1-t6" name="ABOX_自检">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${ABOX_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:16.074" endtime="20190729 19:02:16.083"></status>
</kw>
<kw name="${i} IN RANGE [ 100 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:16.335" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:16.336" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:16.093" endtime="20190729 19:02:16.337"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:16.339" endtime="20190729 19:02:16.343"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:17.347" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:16.345" endtime="20190729 19:02:17.349"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:16.091" endtime="20190729 19:02:17.349"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:17.559" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:17.560" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:17.352" endtime="20190729 19:02:17.561"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:17.562" endtime="20190729 19:02:17.566"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:18.570" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:17.568" endtime="20190729 19:02:18.572"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:17.350" endtime="20190729 19:02:18.572"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:18.782" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:18.784" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:18.575" endtime="20190729 19:02:18.784"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:18.786" endtime="20190729 19:02:18.793"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:19.797" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:18.795" endtime="20190729 19:02:19.799"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:18.573" endtime="20190729 19:02:19.800"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:20.010" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:20.012" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:19.803" endtime="20190729 19:02:20.013"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:20.015" endtime="20190729 19:02:20.019"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:21.026" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:20.022" endtime="20190729 19:02:21.027"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:19.801" endtime="20190729 19:02:21.028"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:21.237" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:21.239" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:21.031" endtime="20190729 19:02:21.240"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:21.241" endtime="20190729 19:02:21.245"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:22.248" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:21.246" endtime="20190729 19:02:22.249"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:21.029" endtime="20190729 19:02:22.249"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:22.455" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:22.457" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:22.251" endtime="20190729 19:02:22.457"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:22.459" endtime="20190729 19:02:22.462"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:23.466" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:22.464" endtime="20190729 19:02:23.468"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:22.250" endtime="20190729 19:02:23.468"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:23.678" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:23.679" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:23.471" endtime="20190729 19:02:23.680"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:23.682" endtime="20190729 19:02:23.685"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:24.689" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:23.687" endtime="20190729 19:02:24.691"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:23.469" endtime="20190729 19:02:24.692"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:25.301" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:25.303" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:24.694" endtime="20190729 19:02:25.303"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:25.305" endtime="20190729 19:02:25.309"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:26.313" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:25.311" endtime="20190729 19:02:26.314"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:24.693" endtime="20190729 19:02:26.315"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:26.525" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:26.526" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:26.318" endtime="20190729 19:02:26.527"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:26.529" endtime="20190729 19:02:26.534"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:27.538" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:26.536" endtime="20190729 19:02:27.539"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:26.316" endtime="20190729 19:02:27.539"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:27.745" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:27.746" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:27.541" endtime="20190729 19:02:27.746"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:27.747" endtime="20190729 19:02:27.749"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:28.752" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:27.750" endtime="20190729 19:02:28.754"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:27.540" endtime="20190729 19:02:28.754"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:28.963" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:28.965" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:28.757" endtime="20190729 19:02:28.965"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:28.967" endtime="20190729 19:02:28.971"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:29.975" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:28.972" endtime="20190729 19:02:29.976"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:28.755" endtime="20190729 19:02:29.977"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:30.186" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:30.188" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:29.979" endtime="20190729 19:02:30.189"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:30.191" endtime="20190729 19:02:30.195"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:31.200" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:30.197" endtime="20190729 19:02:31.202"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:29.978" endtime="20190729 19:02:31.202"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:31.413" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:31.415" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:31.205" endtime="20190729 19:02:31.415"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:31.417" endtime="20190729 19:02:31.425"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:32.429" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:31.426" endtime="20190729 19:02:32.430"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:31.203" endtime="20190729 19:02:32.431"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:32.642" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:32.644" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:32.433" endtime="20190729 19:02:32.644"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:32.646" endtime="20190729 19:02:32.650"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:33.655" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:32.653" endtime="20190729 19:02:33.657"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:32.432" endtime="20190729 19:02:33.657"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:33.867" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:33.868" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:33.660" endtime="20190729 19:02:33.869"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:33.870" endtime="20190729 19:02:33.874"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:34.878" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:33.876" endtime="20190729 19:02:34.879"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:33.658" endtime="20190729 19:02:34.880"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:35.089" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:35.091" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:34.883" endtime="20190729 19:02:35.091"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:35.093" endtime="20190729 19:02:35.097"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:36.101" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:35.098" endtime="20190729 19:02:36.102"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:34.881" endtime="20190729 19:02:36.103"></status>
</kw>
<kw name="${i} = 16" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:36.313" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:36.314" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:36.105" endtime="20190729 19:02:36.315"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:36.316" endtime="20190729 19:02:36.320"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:37.324" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:36.322" endtime="20190729 19:02:37.326"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:36.104" endtime="20190729 19:02:37.326"></status>
</kw>
<kw name="${i} = 17" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:37.535" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:37.537" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:37.329" endtime="20190729 19:02:37.537"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:37.539" endtime="20190729 19:02:37.544"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:38.547" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:37.545" endtime="20190729 19:02:38.548"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:37.327" endtime="20190729 19:02:38.549"></status>
</kw>
<kw name="${i} = 18" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:38.754" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:38.755" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:38.550" endtime="20190729 19:02:38.755"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:38.756" endtime="20190729 19:02:38.758"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:39.761" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:38.759" endtime="20190729 19:02:39.762"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:38.549" endtime="20190729 19:02:39.762"></status>
</kw>
<kw name="${i} = 19" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:39.972" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:39.973" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:39.765" endtime="20190729 19:02:39.974"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:39.976" endtime="20190729 19:02:39.979"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:40.983" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:39.981" endtime="20190729 19:02:40.984"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:39.763" endtime="20190729 19:02:40.985"></status>
</kw>
<kw name="${i} = 20" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:41.194" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:41.196" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:40.988" endtime="20190729 19:02:41.196"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:41.198" endtime="20190729 19:02:41.202"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:42.206" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:41.204" endtime="20190729 19:02:42.207"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:40.986" endtime="20190729 19:02:42.208"></status>
</kw>
<kw name="${i} = 21" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:42.418" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:42.420" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:42.211" endtime="20190729 19:02:42.420"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:42.422" endtime="20190729 19:02:42.426"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:43.431" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:42.429" endtime="20190729 19:02:43.433"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:42.209" endtime="20190729 19:02:43.434"></status>
</kw>
<kw name="${i} = 22" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:43.645" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:43.646" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:43.437" endtime="20190729 19:02:43.647"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:43.649" endtime="20190729 19:02:43.659"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:44.663" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:43.661" endtime="20190729 19:02:44.664"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:43.435" endtime="20190729 19:02:44.665"></status>
</kw>
<kw name="${i} = 23" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:44.871" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:44.873" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:44.666" endtime="20190729 19:02:44.873"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:44.875" endtime="20190729 19:02:44.881"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:45.887" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:44.883" endtime="20190729 19:02:45.889"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:44.665" endtime="20190729 19:02:45.890"></status>
</kw>
<kw name="${i} = 24" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:46.100" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:46.102" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:45.893" endtime="20190729 19:02:46.103"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:46.105" endtime="20190729 19:02:46.109"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:47.113" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:46.111" endtime="20190729 19:02:47.115"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:45.891" endtime="20190729 19:02:47.116"></status>
</kw>
<kw name="${i} = 25" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:47.326" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:47.328" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:47.119" endtime="20190729 19:02:47.329"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:47.331" endtime="20190729 19:02:47.335"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:48.340" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:47.337" endtime="20190729 19:02:48.341"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:47.117" endtime="20190729 19:02:48.342"></status>
</kw>
<kw name="${i} = 26" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:48.551" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:48.552" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:48.344" endtime="20190729 19:02:48.553"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:48.555" endtime="20190729 19:02:48.558"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:49.562" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:48.560" endtime="20190729 19:02:49.564"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:48.343" endtime="20190729 19:02:49.564"></status>
</kw>
<kw name="${i} = 27" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:49.774" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:49.775" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:49.567" endtime="20190729 19:02:49.775"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:49.776" endtime="20190729 19:02:49.778"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:50.780" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:49.779" endtime="20190729 19:02:50.782"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:49.565" endtime="20190729 19:02:50.782"></status>
</kw>
<kw name="${i} = 28" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:50.991" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:50.993" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:50.785" endtime="20190729 19:02:50.993"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:50.995" endtime="20190729 19:02:50.999"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:52.003" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:51.001" endtime="20190729 19:02:52.004"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:50.783" endtime="20190729 19:02:52.005"></status>
</kw>
<kw name="${i} = 29" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:52.216" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:52.217" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:52.009" endtime="20190729 19:02:52.218"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:52.219" endtime="20190729 19:02:52.223"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:53.227" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:52.225" endtime="20190729 19:02:53.228"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:52.007" endtime="20190729 19:02:53.229"></status>
</kw>
<kw name="${i} = 30" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:53.438" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:02:53.440" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:02:53.231" endtime="20190729 19:02:53.440"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:53.443" endtime="20190729 19:02:53.446"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:02:54.450" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:02:53.448" endtime="20190729 19:02:54.452"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:53.230" endtime="20190729 19:02:54.452"></status>
</kw>
<kw name="${i} = 31" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:02:54.662" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=1;</msg>
<msg timestamp="20190729 19:02:54.663" level="INFO">${d} = 1</msg>
<status status="PASS" starttime="20190729 19:02:54.455" endtime="20190729 19:02:54.664"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<msg timestamp="20190729 19:02:54.669" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:02:54.666" endtime="20190729 19:02:54.670"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:54.453" endtime="20190729 19:02:54.671"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:16.089" endtime="20190729 19:02:54.671"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==99</arg>
<arg>Fail</arg>
<arg>自检结果查询失败</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:54.674" endtime="20190729 19:02:54.677"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-C1+ai.sf.ck.r=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${e}</var>
</assign>
<msg timestamp="20190729 19:02:54.967" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-C1+AI.SF.CK.R=0,0,0,0,0,0,0,0,0,1,0,0,0;</msg>
<msg timestamp="20190729 19:02:54.969" level="INFO">${e} = 0,0,0,0,0,0,0,0,0,1,0,0,0</msg>
<status status="PASS" starttime="20190729 19:02:54.680" endtime="20190729 19:02:54.969"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${e}'!='0,0,0,0,0,0,0,0,0,1,0,0,0'</arg>
<arg>Fail</arg>
<arg>自检失败</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:54.972" endtime="20190729 19:02:54.975"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>${e}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:02:54.977" endtime="20190729 19:02:54.982"></status>
</kw>
<kw name="${i} IN RANGE [ 6 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.fom.nt=01</arg>
<arg>IOT</arg>
</arguments>
<msg timestamp="20190729 19:02:55.269" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.fom.nt=01
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.FOM.NT=successful;</msg>
<status status="PASS" starttime="20190729 19:02:54.997" endtime="20190729 19:02:55.270"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190729 19:03:00.274" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190729 19:02:55.272" endtime="20190729 19:03:00.276"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ai.fom.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190729 19:03:00.484" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ai.fom.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.AI.FOM.ACK=0;</msg>
<msg timestamp="20190729 19:03:00.486" level="INFO">${f} = 0</msg>
<status status="PASS" starttime="20190729 19:03:00.278" endtime="20190729 19:03:00.487"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${f}'=='2'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:00.488" endtime="20190729 19:03:00.493"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:54.986" endtime="20190729 19:03:00.494"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.fom.nt=01</arg>
<arg>IOT</arg>
</arguments>
<msg timestamp="20190729 19:03:00.788" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.fom.nt=01
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.FOM.NT=successful;</msg>
<status status="PASS" starttime="20190729 19:03:00.497" endtime="20190729 19:03:00.789"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190729 19:03:05.795" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190729 19:03:00.791" endtime="20190729 19:03:05.796"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ai.fom.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190729 19:03:06.005" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ai.fom.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.AI.FOM.ACK=0;</msg>
<msg timestamp="20190729 19:03:06.007" level="INFO">${f} = 0</msg>
<status status="PASS" starttime="20190729 19:03:05.798" endtime="20190729 19:03:06.008"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${f}'=='2'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:06.010" endtime="20190729 19:03:06.015"></status>
</kw>
<status status="PASS" starttime="20190729 19:03:00.495" endtime="20190729 19:03:06.016"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.fom.nt=01</arg>
<arg>IOT</arg>
</arguments>
<msg timestamp="20190729 19:03:06.309" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.fom.nt=01
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.FOM.NT=successful;</msg>
<status status="PASS" starttime="20190729 19:03:06.018" endtime="20190729 19:03:06.312"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190729 19:03:11.316" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190729 19:03:06.314" endtime="20190729 19:03:11.318"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ai.fom.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190729 19:03:11.527" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ai.fom.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.AI.FOM.ACK=0;</msg>
<msg timestamp="20190729 19:03:11.528" level="INFO">${f} = 0</msg>
<status status="PASS" starttime="20190729 19:03:11.320" endtime="20190729 19:03:11.529"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${f}'=='2'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:11.530" endtime="20190729 19:03:11.534"></status>
</kw>
<status status="PASS" starttime="20190729 19:03:06.017" endtime="20190729 19:03:11.534"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.fom.nt=01</arg>
<arg>IOT</arg>
</arguments>
<msg timestamp="20190729 19:03:11.830" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.fom.nt=01
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.FOM.NT=successful;</msg>
<status status="PASS" starttime="20190729 19:03:11.537" endtime="20190729 19:03:11.831"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190729 19:03:16.835" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190729 19:03:11.833" endtime="20190729 19:03:16.837"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ai.fom.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190729 19:03:17.046" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ai.fom.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.AI.FOM.ACK=2;</msg>
<msg timestamp="20190729 19:03:17.047" level="INFO">${f} = 2</msg>
<status status="PASS" starttime="20190729 19:03:16.839" endtime="20190729 19:03:17.048"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${f}'=='2'</arg>
</arguments>
<msg timestamp="20190729 19:03:17.054" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:03:17.050" endtime="20190729 19:03:17.055"></status>
</kw>
<status status="PASS" starttime="20190729 19:03:11.535" endtime="20190729 19:03:17.055"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:54.984" endtime="20190729 19:03:17.056"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==5</arg>
<arg>Fail</arg>
<arg>SD卡格式化失败</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:17.058" endtime="20190729 19:03:17.062"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:17.065" endtime="20190729 19:03:17.067"></status>
</kw>
<status status="PASS" starttime="20190729 19:02:16.063" endtime="20190729 19:03:17.068" critical="yes"></status>
</test>
<test id="s1-t7" name="TS06_电容">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${CAP_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:17.089" endtime="20190729 19:03:17.094"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-crt</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 19:03:17.347" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-crt
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)pwr err: handle is exist.</msg>
<status status="PASS" starttime="20190729 19:03:17.097" endtime="20190729 19:03:17.348"></status>
</kw>
<kw name="${i} IN RANGE [ 180 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:03:17.650" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1374,**pwr:13766|13766,*batt:3597|3597,*bntc:1574|1574,*gnss:2801|2802,*adc1:0|0,*adc2:0|0,*sos1:4245|4245,*sos2:4237|4237,*scap:6409|6409;</msg>
<msg timestamp="20190729 19:03:17.651" level="INFO">${a} = adc_drv chn:9,calib:1,cnv:1374,**pwr:13766|13766,*batt:3597|3597,*bntc:1574|1574,*gnss:2801|2802,*adc1:0|0,*adc2:0|0,*sos1:4245|4245,*sos2:4237|4237,*scap:6409|6409;</msg>
<status status="PASS" starttime="20190729 19:03:17.351" endtime="20190729 19:03:17.651"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:03:17.656" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1374', '**pwr', '13766', '13766', '*batt', '3597', '3597', '*bntc', '1574', '1574', '*gnss', '2801', '2802', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4245', '4245', '*sos2', '4237', '4237', '*scap', '6409', '6409', '']</msg>
<msg timestamp="20190729 19:03:17.657" level="INFO">${b} = 6409</msg>
<status status="PASS" starttime="20190729 19:03:17.652" endtime="20190729 19:03:17.657"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${b})</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:03:17.680" level="INFO">${b} = 6409</msg>
<status status="PASS" starttime="20190729 19:03:17.659" endtime="20190729 19:03:17.680"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${b}&gt;6500 or ${b}&lt;1000</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:17.681" endtime="20190729 19:03:17.684"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:03:18.687" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:03:17.685" endtime="20190729 19:03:18.689"></status>
</kw>
<status status="PASS" starttime="20190729 19:03:17.350" endtime="20190729 19:03:18.690"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:03:25.911" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
num 0, time: 2019-07-29 19:03:22
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1455,**pwr:13766|13757,*batt:3597|3597,*bntc:1573|1572,*gnss:2803|2803,*adc1:0|0,*adc2:0|0,*sos1:4245|4245,*sos2:4240|4243,*scap:6604|6595;</msg>
<msg timestamp="20190729 19:03:25.912" level="INFO">${a} = adc_drv chn:9,calib:1,cnv:1455,**pwr:13766|13757,*batt:3597|3597,*bntc:1573|1572,*gnss:2803|2803,*adc1:0|0,*adc2:0|0,*sos1:4245|4245,*sos2:4240|4243,*scap:6604|6595;</msg>
<status status="PASS" starttime="20190729 19:03:18.693" endtime="20190729 19:03:25.913"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:03:25.917" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1455', '**pwr', '13766', '13757', '*batt', '3597', '3597', '*bntc', '1573', '1572', '*gnss', '2803', '2803', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4245', '4245', '*sos2', '4240', '4243', '*scap', '6604', '6595', '']</msg>
<msg timestamp="20190729 19:03:25.919" level="INFO">${b} = 6604</msg>
<status status="PASS" starttime="20190729 19:03:25.915" endtime="20190729 19:03:25.919"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${b})</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:03:25.924" level="INFO">${b} = 6604</msg>
<status status="PASS" starttime="20190729 19:03:25.921" endtime="20190729 19:03:25.925"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${b}&gt;6500 or ${b}&lt;1000</arg>
</arguments>
<msg timestamp="20190729 19:03:25.930" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:03:25.927" endtime="20190729 19:03:25.931"></status>
</kw>
<status status="PASS" starttime="20190729 19:03:18.691" endtime="20190729 19:03:25.932"></status>
</kw>
<status status="PASS" starttime="20190729 19:03:17.349" endtime="20190729 19:03:25.932"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==99 or ${b}&lt;4500</arg>
<arg>Fail</arg>
<arg>电容电压不足</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:25.934" endtime="20190729 19:03:25.938"></status>
</kw>
<kw name="Power KL30 Close" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 19:03:25.940" endtime="20190729 19:03:25.943"></status>
</kw>
<kw name="Power KL15 Close" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 19:03:25.945" endtime="20190729 19:03:25.948"></status>
</kw>
<kw name="Exp Timestamp" library="EXP">
<assign>
<var>${time1}</var>
</assign>
<msg timestamp="20190729 19:03:25.952" level="INFO">${time1} = 1564398205</msg>
<status status="PASS" starttime="20190729 19:03:25.950" endtime="20190729 19:03:25.953"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-crt</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 19:03:26.213" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-crt
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)pwr err: handle is exist.</msg>
<status status="PASS" starttime="20190729 19:03:25.955" endtime="20190729 19:03:26.215"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)gpi-crt-chn30-tick1000-wakv1</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 19:03:26.516" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)gpi-crt-chn30-tick1000-wakv1
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)gpi callback, handle:0x1FFF49B8, sta_calb:0.</msg>
<status status="PASS" starttime="20190729 19:03:26.217" endtime="20190729 19:03:26.517"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)gpi-opn-chn30</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 19:03:26.819" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)gpi-opn-chn30
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)gpi open, handle:0x1FFF49B8, ret:0.</msg>
<status status="PASS" starttime="20190729 19:03:26.518" endtime="20190729 19:03:26.819"></status>
</kw>
<kw name="${i} IN RANGE [ 30 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:03:27.522" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:141400.</msg>
<msg timestamp="20190729 19:03:27.523" level="INFO">${a} = dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:141400.</msg>
<status status="PASS" starttime="20190729 19:03:26.822" endtime="20190729 19:03:27.524"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:03:27.530" level="INFO">['dsmin', '', 'value', '02', '', 'inter_type', '01', '', 'dect', '00', '', 'inter_cnt', '1', '', 'keep_tim', '141400.']</msg>
<msg timestamp="20190729 19:03:27.532" level="INFO">${b} = 02</msg>
<status status="PASS" starttime="20190729 19:03:27.526" endtime="20190729 19:03:27.532"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:27.534" endtime="20190729 19:03:27.537"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:03:28.542" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:03:27.539" endtime="20190729 19:03:28.543"></status>
</kw>
<status status="PASS" starttime="20190729 19:03:26.821" endtime="20190729 19:03:28.544"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:03:29.555" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:141400.</msg>
<msg timestamp="20190729 19:03:29.556" level="INFO">${a} = dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:141400.</msg>
<status status="PASS" starttime="20190729 19:03:28.546" endtime="20190729 19:03:29.557"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:03:29.563" level="INFO">['dsmin', '', 'value', '02', '', 'inter_type', '01', '', 'dect', '00', '', 'inter_cnt', '1', '', 'keep_tim', '141400.']</msg>
<msg timestamp="20190729 19:03:29.564" level="INFO">${b} = 02</msg>
<status status="PASS" starttime="20190729 19:03:29.559" endtime="20190729 19:03:30.384"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:30.387" endtime="20190729 19:03:30.390"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:03:31.394" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:03:30.392" endtime="20190729 19:03:31.396"></status>
</kw>
<status status="PASS" starttime="20190729 19:03:28.545" endtime="20190729 19:03:31.396"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:03:31.606" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:141400.</msg>
<msg timestamp="20190729 19:03:31.607" level="INFO">${a} = dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:141400.</msg>
<status status="PASS" starttime="20190729 19:03:31.399" endtime="20190729 19:03:31.607"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:03:31.609" level="INFO">['dsmin', '', 'value', '02', '', 'inter_type', '01', '', 'dect', '00', '', 'inter_cnt', '1', '', 'keep_tim', '141400.']</msg>
<msg timestamp="20190729 19:03:31.610" level="INFO">${b} = 02</msg>
<status status="PASS" starttime="20190729 19:03:31.608" endtime="20190729 19:03:31.610"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:31.611" endtime="20190729 19:03:31.613"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:03:32.615" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:03:31.614" endtime="20190729 19:03:32.617"></status>
</kw>
<status status="PASS" starttime="20190729 19:03:31.397" endtime="20190729 19:03:32.618"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:03:33.629" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:01, inter_type:02, dect:00, inter_cnt:4, keep_tim:0.</msg>
<msg timestamp="20190729 19:03:33.631" level="INFO">${a} = dsmin, value:01, inter_type:02, dect:00, inter_cnt:4, keep_tim:0.</msg>
<status status="PASS" starttime="20190729 19:03:32.621" endtime="20190729 19:03:33.631"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:03:33.636" level="INFO">['dsmin', '', 'value', '01', '', 'inter_type', '02', '', 'dect', '00', '', 'inter_cnt', '4', '', 'keep_tim', '0.']</msg>
<msg timestamp="20190729 19:03:33.637" level="INFO">${b} = 01</msg>
<status status="PASS" starttime="20190729 19:03:33.633" endtime="20190729 19:03:33.638"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<msg timestamp="20190729 19:03:33.643" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:03:33.639" endtime="20190729 19:03:33.644"></status>
</kw>
<status status="PASS" starttime="20190729 19:03:32.619" endtime="20190729 19:03:33.644"></status>
</kw>
<status status="PASS" starttime="20190729 19:03:26.820" endtime="20190729 19:03:33.645"></status>
</kw>
<kw name="Power KL30 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 19:03:33.647" endtime="20190729 19:03:33.649"></status>
</kw>
<kw name="Power KL30 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 19:03:33.652" endtime="20190729 19:03:33.654"></status>
</kw>
<kw name="Exp Timestamp" library="EXP">
<assign>
<var>${time2}</var>
</assign>
<msg timestamp="20190729 19:03:33.660" level="INFO">${time2} = 1564398213</msg>
<status status="PASS" starttime="20190729 19:03:33.656" endtime="20190729 19:03:33.661"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)gpi-cls-chn30</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 19:03:34.733" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)gpi-cls-chn30
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)gpi close, handle:0x1FFF49B8, ret:0.</msg>
<status status="PASS" starttime="20190729 19:03:33.664" endtime="20190729 19:03:34.735"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${time2}-${time1}</arg>
</arguments>
<assign>
<var>${time3}</var>
</assign>
<msg timestamp="20190729 19:03:34.742" level="INFO">${time3} = 8</msg>
<status status="PASS" starttime="20190729 19:03:34.737" endtime="20190729 19:03:34.742"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${time3}&lt;${dianrong}</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:34.746" endtime="20190729 19:03:34.750"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-crt</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 19:03:35.036" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-crt
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)pwr err: handle is exist.</msg>
<status status="PASS" starttime="20190729 19:03:34.752" endtime="20190729 19:03:35.038"></status>
</kw>
<kw name="${i} IN RANGE [ 2 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:03:35.340" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1548,**pwr:13819|13819,*batt:3516|3515,*bntc:1543|1543,*gnss:2803|2803,*adc1:0|0,*adc2:0|0,*sos1:4246|4245,*sos2:4237|4237,*scap:4574|4565;</msg>
<msg timestamp="20190729 19:03:35.341" level="INFO">${a} = adc_drv chn:9,calib:1,cnv:1548,**pwr:13819|13819,*batt:3516|3515,*bntc:1543|1543,*gnss:2803|2803,*adc1:0|0,*adc2:0|0,*sos1:4246|4245,*sos2:4237|4237,*scap:4574|4565;</msg>
<status status="PASS" starttime="20190729 19:03:35.042" endtime="20190729 19:03:35.342"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:03:35.346" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1548', '**pwr', '13819', '13819', '*batt', '3516', '3515', '*bntc', '1543', '1543', '*gnss', '2803', '2803', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4246', '4245', '*sos2', '4237', '4237', '*scap', '4574', '4565', '']</msg>
<msg timestamp="20190729 19:03:35.347" level="INFO">${b} = 4574</msg>
<status status="PASS" starttime="20190729 19:03:35.343" endtime="20190729 19:03:35.349"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${b})</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:03:35.354" level="INFO">${b} = 4574</msg>
<status status="PASS" starttime="20190729 19:03:35.350" endtime="20190729 19:03:35.354"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${b}&gt;6900</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:35.356" endtime="20190729 19:03:35.359"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190729 19:03:39.363" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20190729 19:03:35.361" endtime="20190729 19:03:39.364"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:03:39.573" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1589,**pwr:13810|13810,*batt:3529|3529,*bntc:1544|1544,*gnss:2803|2802,*adc1:0|0,*adc2:0|0,*sos1:4246|4246,*sos2:4237|4237,*scap:4698|4689;</msg>
<msg timestamp="20190729 19:03:39.574" level="INFO">${c} = adc_drv chn:9,calib:1,cnv:1589,**pwr:13810|13810,*batt:3529|3529,*bntc:1544|1544,*gnss:2803|2802,*adc1:0|0,*adc2:0|0,*sos1:4246|4246,*sos2:4237|4237,*scap:4698|4689;</msg>
<status status="PASS" starttime="20190729 19:03:39.366" endtime="20190729 19:03:39.575"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${c}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:03:39.579" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1589', '**pwr', '13810', '13810', '*batt', '3529', '3529', '*bntc', '1544', '1544', '*gnss', '2803', '2802', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4246', '4246', '*sos2', '4237', '4237', '*scap', '4698', '4689', '']</msg>
<msg timestamp="20190729 19:03:39.581" level="INFO">${d} = 4698</msg>
<status status="PASS" starttime="20190729 19:03:39.576" endtime="20190729 19:03:39.581"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${d})</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:03:39.586" level="INFO">${d} = 4698</msg>
<status status="PASS" starttime="20190729 19:03:39.583" endtime="20190729 19:03:39.587"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${d}&lt;=${b}</arg>
<arg>Fail</arg>
<arg>电容未充电</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:39.589" endtime="20190729 19:03:39.592"></status>
</kw>
<status status="PASS" starttime="20190729 19:03:35.041" endtime="20190729 19:03:39.593"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:03:39.876" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1592,**pwr:13810|13810,*batt:3531|3529,*bntc:1544|1544,*gnss:2801|2802,*adc1:0|0,*adc2:0|0,*sos1:4246|4246,*sos2:4237|4237,*scap:4707|4698;</msg>
<msg timestamp="20190729 19:03:39.877" level="INFO">${a} = adc_drv chn:9,calib:1,cnv:1592,**pwr:13810|13810,*batt:3531|3529,*bntc:1544|1544,*gnss:2801|2802,*adc1:0|0,*adc2:0|0,*sos1:4246|4246,*sos2:4237|4237,*scap:4707|4698;</msg>
<status status="PASS" starttime="20190729 19:03:39.595" endtime="20190729 19:03:39.878"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:03:39.883" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1592', '**pwr', '13810', '13810', '*batt', '3531', '3529', '*bntc', '1544', '1544', '*gnss', '2801', '2802', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4246', '4246', '*sos2', '4237', '4237', '*scap', '4707', '4698', '']</msg>
<msg timestamp="20190729 19:03:39.884" level="INFO">${b} = 4707</msg>
<status status="PASS" starttime="20190729 19:03:39.880" endtime="20190729 19:03:39.884"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${b})</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:03:39.889" level="INFO">${b} = 4707</msg>
<status status="PASS" starttime="20190729 19:03:39.886" endtime="20190729 19:03:39.890"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${b}&gt;6900</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:39.892" endtime="20190729 19:03:39.895"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190729 19:03:43.901" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20190729 19:03:39.896" endtime="20190729 19:03:43.902"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:03:44.110" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1633,**pwr:13686|13686,*batt:3537|3534,*bntc:1547|1547,*gnss:2801|2802,*adc1:0|0,*adc2:0|0,*sos1:4246|4246,*sos2:4242|4237,*scap:4831|4822;</msg>
<msg timestamp="20190729 19:03:44.111" level="INFO">${c} = adc_drv chn:9,calib:1,cnv:1633,**pwr:13686|13686,*batt:3537|3534,*bntc:1547|1547,*gnss:2801|2802,*adc1:0|0,*adc2:0|0,*sos1:4246|4246,*sos2:4242|4237,*scap:4831|4822;</msg>
<status status="PASS" starttime="20190729 19:03:43.904" endtime="20190729 19:03:44.112"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${c}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:03:44.114" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1633', '**pwr', '13686', '13686', '*batt', '3537', '3534', '*bntc', '1547', '1547', '*gnss', '2801', '2802', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4246', '4246', '*sos2', '4242', '4237', '*scap', '4831', '4822', '']</msg>
<msg timestamp="20190729 19:03:44.115" level="INFO">${d} = 4831</msg>
<status status="PASS" starttime="20190729 19:03:44.113" endtime="20190729 19:03:44.115"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${d})</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:03:44.118" level="INFO">${d} = 4831</msg>
<status status="PASS" starttime="20190729 19:03:44.116" endtime="20190729 19:03:44.118"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${d}&lt;=${b}</arg>
<arg>Fail</arg>
<arg>电容未充电</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:44.119" endtime="20190729 19:03:44.121"></status>
</kw>
<status status="PASS" starttime="20190729 19:03:39.594" endtime="20190729 19:03:44.122"></status>
</kw>
<status status="PASS" starttime="20190729 19:03:35.039" endtime="20190729 19:03:44.122"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>TS10_电容</arg>
<arg>PASS</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:44.123" endtime="20190729 19:03:44.126"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:44.129" endtime="20190729 19:03:44.131"></status>
</kw>
<status status="PASS" starttime="20190729 19:03:17.075" endtime="20190729 19:03:44.131" critical="yes"></status>
</test>
<test id="s1-t8" name="IOT_型号日期设置">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${DATA_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<msg timestamp="20190729 19:03:44.150" level="INFO">Execution passed with message:
此项不测试</msg>
<status status="PASS" starttime="20190729 19:03:44.147" endtime="20190729 19:03:44.151"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:44.154" endtime="20190729 19:03:44.155"></status>
</kw>
<status status="PASS" starttime="20190729 19:03:44.136" endtime="20190729 19:03:44.156" critical="yes">此项不测试</status>
</test>
<test id="s1-t9" name="IOT_PID设置">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${PID_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<msg timestamp="20190729 19:03:44.176" level="INFO">Execution passed with message:
此项不测试</msg>
<status status="PASS" starttime="20190729 19:03:44.170" endtime="20190729 19:03:44.177"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:44.179" endtime="20190729 19:03:44.180"></status>
</kw>
<status status="PASS" starttime="20190729 19:03:44.161" endtime="20190729 19:03:44.181" critical="yes">此项不测试</status>
</test>
<test id="s1-t10" name="GET_END">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+L1+nw.e01.r01.ic=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${ICCID_}</var>
</assign>
<msg timestamp="20190729 19:03:44.413" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+L1+nw.e01.r01.ic=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+L1+NW.E01.R01.IC=89860919730027337891;</msg>
<msg timestamp="20190729 19:03:44.414" level="INFO">${ICCID_} = 89860919730027337891</msg>
<status status="PASS" starttime="20190729 19:03:44.190" endtime="20190729 19:03:44.415"></status>
</kw>
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time2}</var>
</assign>
<msg timestamp="20190729 19:03:44.417" level="INFO">${time2} = 2019-07-29 19:03:44</msg>
<status status="PASS" starttime="20190729 19:03:44.416" endtime="20190729 19:03:44.418"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>结束时间:${time2}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:44.419" endtime="20190729 19:03:44.421"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>${ICCID_}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:44.422" endtime="20190729 19:03:44.425"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>***************************************************************************************</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:44.427" endtime="20190729 19:03:44.430"></status>
</kw>
<kw name="Txtrwx Transfer" library="Txtrwx">
<arguments>
<arg>/home/pi/production/mid.txt</arg>
<arg>/home/pi/production/log/整机测试日志.txt</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:44.431" endtime="20190729 19:03:44.434"></status>
</kw>
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/production/mid.txt</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:44.435" endtime="20190729 19:03:44.500"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:03:44.504" endtime="20190729 19:03:44.509"></status>
</kw>
<status status="PASS" starttime="20190729 19:03:44.185" endtime="20190729 19:03:44.510" critical="yes"></status>
</test>
<kw name="clear" type="teardown">
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/production/mid.txt</arg>
</arguments>
<msg timestamp="20190729 19:03:44.526" level="INFO">文件不存在</msg>
<status status="PASS" starttime="20190729 19:03:44.524" endtime="20190729 19:03:44.527"></status>
</kw>
<kw name="Power KL30 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 19:03:44.528" endtime="20190729 19:03:44.531"></status>
</kw>
<kw name="Power KL15 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 19:03:44.532" endtime="20190729 19:03:44.535"></status>
</kw>
<status status="PASS" starttime="20190729 19:03:44.521" endtime="20190729 19:03:44.537"></status>
</kw>
<status status="PASS" starttime="20190729 19:01:13.548" endtime="20190729 19:03:44.537"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="Ai Test">Ai Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
