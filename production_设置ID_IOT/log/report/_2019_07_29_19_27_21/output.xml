<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.7.0 on linux)" generated="20190729 19:27:23.203">
<suite id="s1" name="Ai Test" source="/home/pi/production/case/ai_test.txt">
<test id="s1-t1" name="GET_Ready">
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time1}</var>
</assign>
<msg timestamp="20190729 19:27:24.352" level="INFO">${time1} = 2019-07-29 19:27:24</msg>
<status status="PASS" starttime="20190729 19:27:24.349" endtime="20190729 19:27:24.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${time1}</arg>
</arguments>
<msg timestamp="20190729 19:27:24.360" level="INFO">${time1} = 2019-07-29 19:27:24</msg>
<status status="PASS" starttime="20190729 19:27:24.357" endtime="20190729 19:27:24.361"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>25</arg>
</arguments>
<msg timestamp="20190729 19:27:49.364" level="INFO">Slept 25 seconds</msg>
<status status="PASS" starttime="20190729 19:27:24.362" endtime="20190729 19:27:49.366"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ABOX_TEST}==1</arg>
<arg>发起自检</arg>
</arguments>
<kw name="发起自检">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.con.alive=5</arg>
<arg>IOT-S1+AI.M.CON.ALIVE=5</arg>
</arguments>
<msg timestamp="20190729 19:27:49.584" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.con.alive=5
应该收到串口数据: IOT-S1+AI.M.CON.ALIVE=5
实际接收到的数据:  IOT-S1+AI.M.CON.ALIVE=5;</msg>
<status status="PASS" starttime="20190729 19:27:49.377" endtime="20190729 19:27:49.585"></status>
</kw>
<kw name="${i} IN RANGE [ 80 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.con.st=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:27:49.886" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.con.st=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CON.ST=1;</msg>
<msg timestamp="20190729 19:27:49.887" level="INFO">${a} = 1</msg>
<status status="PASS" starttime="20190729 19:27:49.593" endtime="20190729 19:27:49.887"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${a}'=='1'</arg>
</arguments>
<msg timestamp="20190729 19:27:49.890" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:27:49.888" endtime="20190729 19:27:49.890"></status>
</kw>
<status status="PASS" starttime="20190729 19:27:49.590" endtime="20190729 19:27:49.891"></status>
</kw>
<status status="PASS" starttime="20190729 19:27:49.588" endtime="20190729 19:27:49.891"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==79</arg>
<arg>Fail</arg>
<arg>串口状态连接失败</arg>
</arguments>
<status status="PASS" starttime="20190729 19:27:49.892" endtime="20190729 19:27:49.894"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.lev.switch=0</arg>
<arg>IOT-V1+AI.LEV.SWITCH=successful;</arg>
</arguments>
<msg timestamp="20190729 19:27:50.188" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.lev.switch=0
应该收到串口数据: IOT-V1+AI.LEV.SWITCH=successful;
实际接收到的数据:  IOT-V1+AI.LEV.SWITCH=successful;</msg>
<status status="PASS" starttime="20190729 19:27:49.895" endtime="20190729 19:27:50.189"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190729 19:27:55.191" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190729 19:27:50.190" endtime="20190729 19:27:55.193"></status>
</kw>
<kw name="${i} IN RANGE [ 8 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.self.check=1</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:27:55.405" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.self.check=1
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.SELF.CHECK=successful;</msg>
<msg timestamp="20190729 19:27:55.406" level="INFO">${b} = successful</msg>
<status status="PASS" starttime="20190729 19:27:55.197" endtime="20190729 19:27:55.406"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20190729 19:27:57.409" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190729 19:27:55.407" endtime="20190729 19:27:57.410"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.se.ch.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:27:57.619" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.se.ch.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.SE.CH.ACK=1;</msg>
<msg timestamp="20190729 19:27:57.621" level="INFO">${c} = 1</msg>
<status status="PASS" starttime="20190729 19:27:57.412" endtime="20190729 19:27:57.621"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${c}'=='1'</arg>
</arguments>
<msg timestamp="20190729 19:27:57.627" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:27:57.623" endtime="20190729 19:27:57.644"></status>
</kw>
<status status="PASS" starttime="20190729 19:27:55.196" endtime="20190729 19:27:57.645"></status>
</kw>
<status status="PASS" starttime="20190729 19:27:55.194" endtime="20190729 19:27:57.645"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==7</arg>
<arg>Fail</arg>
<arg>发起自检失败</arg>
</arguments>
<status status="PASS" starttime="20190729 19:27:57.648" endtime="20190729 19:27:57.651"></status>
</kw>
<status status="PASS" starttime="20190729 19:27:49.373" endtime="20190729 19:27:57.653"></status>
</kw>
<status status="PASS" starttime="20190729 19:27:49.368" endtime="20190729 19:27:57.654"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>开始时间:${time1}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:27:57.656" endtime="20190729 19:27:57.661"></status>
</kw>
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time3}</var>
</assign>
<msg timestamp="20190729 19:27:57.667" level="INFO">${time3} = 2019-07-29 19:27:57</msg>
<status status="PASS" starttime="20190729 19:27:57.664" endtime="20190729 19:27:57.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${time3}</arg>
</arguments>
<msg timestamp="20190729 19:27:57.673" level="INFO">${time3} = 2019-07-29 19:27:57</msg>
<status status="PASS" starttime="20190729 19:27:57.670" endtime="20190729 19:27:57.673"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:27:57.675" endtime="20190729 19:27:57.677"></status>
</kw>
<status status="PASS" starttime="20190729 19:27:24.344" endtime="20190729 19:27:57.678" critical="yes"></status>
</test>
<test id="s1-t2" name="TS01_TONGXIN">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${TONGXIN_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 19:27:57.688" endtime="20190729 19:27:57.692"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1+nw.e01.inf=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:27:57.921" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+D1+nw.e01.inf=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+D3+NW.E01.INF=865501042607839,EC20CEFAG,EC20CEFAGR06A06M4G_OCPU  1  [Oct;</msg>
<msg timestamp="20190729 19:27:57.922" level="INFO">${a} = 865501042607839,EC20CEFAG,EC20CEFAGR06A06M4G_OCPU  1  [Oct</msg>
<status status="PASS" starttime="20190729 19:27:57.694" endtime="20190729 19:27:57.923"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:27:57.926" level="INFO">['865501042607839', 'EC20CEFAG', 'EC20CEFAGR06A06M4G_OCPU', '1', '[Oct']</msg>
<msg timestamp="20190729 19:27:57.927" level="INFO">${b} = ['EC20CEFAGR06A06M4G_OCPU']</msg>
<status status="PASS" starttime="20190729 19:27:57.924" endtime="20190729 19:27:57.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${b[0]}'!='${communication_version}'</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:27:57.929" endtime="20190729 19:27:57.931"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+nw.e01.stu=?</arg>
<arg>IOT</arg>
<arg>wait_time=6</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:27:58.224" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+nw.e01.stu=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+NW.E01.STU=LTE,2,LTE,2,1,198,29;</msg>
<msg timestamp="20190729 19:27:58.224" level="INFO">${c} = LTE,2,LTE,2,1,198,29</msg>
<status status="PASS" starttime="20190729 19:27:57.932" endtime="20190729 19:27:58.225"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:27:58.228" level="INFO">['LTE', '2', 'LTE', '2', '1', '198', '29']</msg>
<msg timestamp="20190729 19:27:58.228" level="INFO">${d} = ['LTE']</msg>
<status status="PASS" starttime="20190729 19:27:58.226" endtime="20190729 19:27:58.228"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${e}</var>
</assign>
<msg timestamp="20190729 19:27:58.231" level="INFO">['LTE', '2', 'LTE', '2', '1', '198', '29']</msg>
<msg timestamp="20190729 19:27:58.232" level="INFO">${e} = ['2']</msg>
<status status="PASS" starttime="20190729 19:27:58.230" endtime="20190729 19:27:58.232"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190729 19:27:58.235" level="INFO">['LTE', '2', 'LTE', '2', '1', '198', '29']</msg>
<msg timestamp="20190729 19:27:58.235" level="INFO">${f} = ['LTE']</msg>
<status status="PASS" starttime="20190729 19:27:58.233" endtime="20190729 19:27:58.236"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${g}</var>
</assign>
<msg timestamp="20190729 19:27:58.239" level="INFO">['LTE', '2', 'LTE', '2', '1', '198', '29']</msg>
<msg timestamp="20190729 19:27:58.240" level="INFO">${g} = ['2']</msg>
<status status="PASS" starttime="20190729 19:27:58.237" endtime="20190729 19:27:58.240"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${h}</var>
</assign>
<msg timestamp="20190729 19:27:58.243" level="INFO">['LTE', '2', 'LTE', '2', '1', '198', '29']</msg>
<msg timestamp="20190729 19:27:58.243" level="INFO">${h} = ['1']</msg>
<status status="PASS" starttime="20190729 19:27:58.241" endtime="20190729 19:27:58.244"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${communication_1}</arg>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190729 19:27:58.247" level="INFO">${one} = 1</msg>
<status status="PASS" starttime="20190729 19:27:58.245" endtime="20190729 19:27:58.247"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${communication_1}</arg>
<arg>${f[0]}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190729 19:27:58.251" level="INFO">${two} = 1</msg>
<status status="PASS" starttime="20190729 19:27:58.249" endtime="20190729 19:27:58.251"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${one}!=1 or ${two}!=1 or '${e[0]}'!='${communication_2}' or '${g[0]}'!= '${communication_2}' or '${h[0]}'!='${communication_3}'</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:27:58.253" endtime="20190729 19:27:58.257"></status>
</kw>
<kw name="${I} IN RANGE [ 30 ]" type="for">
<kw name="${I} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+nw.e01.stu=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:27:58.533" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+nw.e01.stu=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+NW.E01.STU=LTE,2,LTE,2,1,198,29;</msg>
<msg timestamp="20190729 19:27:58.535" level="INFO">${c} = LTE,2,LTE,2,1,198,29</msg>
<status status="PASS" starttime="20190729 19:27:58.260" endtime="20190729 19:27:58.536"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${m}</var>
</assign>
<msg timestamp="20190729 19:27:58.545" level="INFO">['LTE', '2', 'LTE', '2', '1', '198', '29']</msg>
<msg timestamp="20190729 19:27:58.547" level="INFO">${m} = ['29']</msg>
<status status="PASS" starttime="20190729 19:27:58.539" endtime="20190729 19:27:58.548"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${m[0]}</arg>
</arguments>
<assign>
<var>${m}</var>
</assign>
<msg timestamp="20190729 19:27:58.556" level="INFO">${m} = 29</msg>
<status status="PASS" starttime="20190729 19:27:58.550" endtime="20190729 19:27:58.557"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${m}&gt;${signal_value}</arg>
</arguments>
<msg timestamp="20190729 19:27:58.565" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:27:58.560" endtime="20190729 19:27:58.566"></status>
</kw>
<status status="PASS" starttime="20190729 19:27:58.259" endtime="20190729 19:27:58.567"></status>
</kw>
<status status="PASS" starttime="20190729 19:27:58.258" endtime="20190729 19:27:58.569"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${I}==29</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:27:58.572" endtime="20190729 19:27:58.578"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:27:58.581" endtime="20190729 19:27:58.584"></status>
</kw>
<status status="PASS" starttime="20190729 19:27:57.683" endtime="20190729 19:27:58.585" critical="yes"></status>
</test>
<test id="s1-t3" name="TS03_串口2">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${SERIAL_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 19:27:58.602" endtime="20190729 19:27:58.607"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-crt-chn2-baud115200</arg>
<arg>(bsp)usart</arg>
</arguments>
<msg timestamp="20190729 19:27:58.841" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-crt-chn2-baud115200
应该收到串口数据: (bsp)usart
实际接收到的数据:  (bsp)usart callback, handle:0x1FFF45F4, sta_calb:0.</msg>
<status status="PASS" starttime="20190729 19:27:58.609" endtime="20190729 19:27:58.842"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-opn-chn2</arg>
<arg>(bsp)usar</arg>
</arguments>
<msg timestamp="20190729 19:27:59.143" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-opn-chn2
应该收到串口数据: (bsp)usar
实际接收到的数据:  (bsp)usart open, handle:0x1FFF45F4, ret:0.</msg>
<status status="PASS" starttime="20190729 19:27:58.843" endtime="20190729 19:27:59.144"></status>
</kw>
<kw name="Start Ama0 Recv" library="SerialLibrary">
<status status="PASS" starttime="20190729 19:27:59.145" endtime="20190729 19:27:59.156"></status>
</kw>
<kw name="${i} IN RANGE [ 5 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 19:27:59.445" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF45F4, ret:0.</msg>
<status status="PASS" starttime="20190729 19:27:59.163" endtime="20190729 19:27:59.446"></status>
</kw>
<status status="PASS" starttime="20190729 19:27:59.162" endtime="20190729 19:27:59.447"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 19:27:59.748" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF45F4, ret:0.</msg>
<status status="PASS" starttime="20190729 19:27:59.450" endtime="20190729 19:27:59.749"></status>
</kw>
<status status="PASS" starttime="20190729 19:27:59.448" endtime="20190729 19:27:59.750"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 19:28:00.051" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF45F4, ret:0.</msg>
<status status="PASS" starttime="20190729 19:27:59.753" endtime="20190729 19:28:00.053"></status>
</kw>
<status status="PASS" starttime="20190729 19:27:59.751" endtime="20190729 19:28:00.054"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 19:28:00.355" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF45F4, ret:0.</msg>
<status status="PASS" starttime="20190729 19:28:00.056" endtime="20190729 19:28:00.356"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:00.054" endtime="20190729 19:28:00.356"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 19:28:00.658" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF45F4, ret:0.</msg>
<status status="PASS" starttime="20190729 19:28:00.359" endtime="20190729 19:28:00.659"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:00.357" endtime="20190729 19:28:00.660"></status>
</kw>
<status status="PASS" starttime="20190729 19:27:59.159" endtime="20190729 19:28:00.660"></status>
</kw>
<kw name="Txtrwx Read" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2.txt</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20190729 19:28:00.666" level="INFO">${r} = hello
hello
hello
hello
hello
</msg>
<status status="PASS" starttime="20190729 19:28:00.662" endtime="20190729 19:28:00.667"></status>
</kw>
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2.txt</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:00.669" endtime="20190729 19:28:00.757"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${r}</arg>
<arg>hello</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:28:00.764" level="INFO">${a} = 1</msg>
<status status="PASS" starttime="20190729 19:28:00.760" endtime="20190729 19:28:00.765"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${a}==0</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:00.768" endtime="20190729 19:28:00.773"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20190729 19:28:02.778" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190729 19:28:00.775" endtime="20190729 19:28:02.779"></status>
</kw>
<kw name="Serial Ama0 Send" library="SerialLibrary">
<arguments>
<arg>goodgoodgood</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:02.781" endtime="20190729 19:28:02.787"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20190729 19:28:04.792" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190729 19:28:02.789" endtime="20190729 19:28:04.794"></status>
</kw>
<kw name="Txtrwx Read" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2_send.txt</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20190729 19:28:04.799" level="INFO">${r} = goodgoodgood
</msg>
<status status="PASS" starttime="20190729 19:28:04.796" endtime="20190729 19:28:04.800"></status>
</kw>
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2_send.txt</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:04.802" endtime="20190729 19:28:04.884"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${r}</arg>
<arg>goodgoodgood</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:28:04.891" level="INFO">${a} = 1</msg>
<status status="PASS" starttime="20190729 19:28:04.887" endtime="20190729 19:28:04.891"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${a}==0</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:04.894" endtime="20190729 19:28:04.899"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:04.903" endtime="20190729 19:28:04.905"></status>
</kw>
<status status="PASS" starttime="20190729 19:27:58.595" endtime="20190729 19:28:04.907" critical="yes"></status>
</test>
<test id="s1-t4" name="TS04_定位">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${GPS_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:04.928" endtime="20190729 19:28:04.932"></status>
</kw>
<kw name="${I} IN RANGE [ 120 ]" type="for">
<kw name="${I} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+GNSS=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:28:05.150" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+GNSS=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+GNSS= MC120A, 1.1.1,1,1,13,1564637135,00000000;</msg>
<msg timestamp="20190729 19:28:05.151" level="INFO">${a} =  MC120A, 1.1.1,1,1,13,1564637135,00000000</msg>
<status status="PASS" starttime="20190729 19:28:04.939" endtime="20190729 19:28:05.152"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190729 19:28:05.155" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '13', '1564637135', '00000000']</msg>
<msg timestamp="20190729 19:28:05.155" level="INFO">${k} = ['MC120A']</msg>
<status status="PASS" starttime="20190729 19:28:05.153" endtime="20190729 19:28:05.155"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:28:05.158" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '13', '1564637135', '00000000']</msg>
<msg timestamp="20190729 19:28:05.159" level="INFO">${b} = ['1.1.1']</msg>
<status status="PASS" starttime="20190729 19:28:05.157" endtime="20190729 19:28:05.159"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:28:05.162" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '13', '1564637135', '00000000']</msg>
<msg timestamp="20190729 19:28:05.162" level="INFO">${c} = ['1']</msg>
<status status="PASS" starttime="20190729 19:28:05.160" endtime="20190729 19:28:05.163"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:05.165" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '13', '1564637135', '00000000']</msg>
<msg timestamp="20190729 19:28:05.166" level="INFO">${d} = ['13']</msg>
<status status="PASS" starttime="20190729 19:28:05.163" endtime="20190729 19:28:05.166"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:05.169" level="INFO">${d} = 13</msg>
<status status="PASS" starttime="20190729 19:28:05.167" endtime="20190729 19:28:05.170"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k[0]}'=='${GPS_model}' and '${b[0]}'== '${GPS_version}' and '${c[0]}'=='${GPS_state}' and ${d}&gt;${GPS_number}</arg>
</arguments>
<msg timestamp="20190729 19:28:05.176" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:28:05.171" endtime="20190729 19:28:05.176"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:04.936" endtime="20190729 19:28:05.177"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:04.934" endtime="20190729 19:28:05.177"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${I}==119</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:05.179" endtime="20190729 19:28:05.181"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>IOT_定位</arg>
<arg>PASS</arg>
<arg>IOT+S1+GNSS=?</arg>
<arg>${a}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:05.182" endtime="20190729 19:28:05.185"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+QXWZ=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${e}</var>
</assign>
<msg timestamp="20190729 19:28:05.452" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+QXWZ=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+QXWZ=1,1002,2002,3002,4014,0,0;</msg>
<msg timestamp="20190729 19:28:05.455" level="INFO">${e} = 1,1002,2002,3002,4014,0,0</msg>
<status status="PASS" starttime="20190729 19:28:05.187" endtime="20190729 19:28:05.455"></status>
</kw>
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time4}</var>
</assign>
<msg timestamp="20190729 19:28:05.458" level="INFO">${time4} = 2019-07-29 19:28:05</msg>
<status status="PASS" starttime="20190729 19:28:05.456" endtime="20190729 19:28:05.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${time4}</arg>
</arguments>
<msg timestamp="20190729 19:28:05.461" level="INFO">${time4} = 2019-07-29 19:28:05</msg>
<status status="PASS" starttime="20190729 19:28:05.460" endtime="20190729 19:28:05.462"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:05.464" endtime="20190729 19:28:05.465"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:04.915" endtime="20190729 19:28:05.466" critical="yes"></status>
</test>
<test id="s1-t5" name="TS05_WIFI">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${WIFI_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<msg timestamp="20190729 19:28:05.480" level="INFO">Execution passed with message:
此项不测试</msg>
<status status="PASS" starttime="20190729 19:28:05.477" endtime="20190729 19:28:05.481"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:05.484" endtime="20190729 19:28:05.486"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:05.472" endtime="20190729 19:28:05.488" critical="yes">此项不测试</status>
</test>
<test id="s1-t6" name="ABOX_自检">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${ABOX_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:05.503" endtime="20190729 19:28:05.506"></status>
</kw>
<kw name="${i} IN RANGE [ 100 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:05.757" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:05.758" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:05.514" endtime="20190729 19:28:05.759"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:05.761" endtime="20190729 19:28:05.765"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:06.769" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:05.767" endtime="20190729 19:28:06.770"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:05.511" endtime="20190729 19:28:06.771"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:06.976" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:06.977" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:06.772" endtime="20190729 19:28:06.977"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:06.978" endtime="20190729 19:28:06.980"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:07.982" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:06.981" endtime="20190729 19:28:07.983"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:06.771" endtime="20190729 19:28:07.984"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:08.189" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:08.190" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:07.985" endtime="20190729 19:28:08.190"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:08.191" endtime="20190729 19:28:08.195"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:09.198" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:08.196" endtime="20190729 19:28:09.199"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:07.984" endtime="20190729 19:28:09.200"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:09.410" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:09.411" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:09.203" endtime="20190729 19:28:09.412"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:09.414" endtime="20190729 19:28:09.419"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:10.424" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:09.421" endtime="20190729 19:28:10.425"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:09.201" endtime="20190729 19:28:10.426"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:10.635" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:10.637" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:10.428" endtime="20190729 19:28:10.637"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:10.639" endtime="20190729 19:28:10.642"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:11.646" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:10.644" endtime="20190729 19:28:11.648"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:10.427" endtime="20190729 19:28:11.648"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:11.858" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:11.860" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:11.651" endtime="20190729 19:28:11.861"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:11.862" endtime="20190729 19:28:11.867"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:12.872" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:11.869" endtime="20190729 19:28:12.874"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:11.649" endtime="20190729 19:28:12.874"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:13.083" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:13.085" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:12.877" endtime="20190729 19:28:13.086"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:13.087" endtime="20190729 19:28:13.092"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:14.096" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:13.094" endtime="20190729 19:28:14.097"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:12.875" endtime="20190729 19:28:14.098"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:14.308" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:14.309" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:14.101" endtime="20190729 19:28:14.310"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:14.312" endtime="20190729 19:28:14.316"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:15.326" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:14.317" endtime="20190729 19:28:15.328"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:14.099" endtime="20190729 19:28:15.328"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:15.540" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:15.541" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:15.331" endtime="20190729 19:28:15.542"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:15.543" endtime="20190729 19:28:15.547"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:16.551" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:15.548" endtime="20190729 19:28:16.552"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:15.329" endtime="20190729 19:28:16.553"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:16.762" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:16.763" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:16.555" endtime="20190729 19:28:16.764"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:16.765" endtime="20190729 19:28:16.769"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:17.773" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:16.771" endtime="20190729 19:28:17.775"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:16.554" endtime="20190729 19:28:17.775"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:17.984" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:17.985" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:17.778" endtime="20190729 19:28:17.985"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:17.986" endtime="20190729 19:28:17.988"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:18.990" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:17.989" endtime="20190729 19:28:18.992"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:17.776" endtime="20190729 19:28:18.992"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:19.402" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:19.404" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:18.995" endtime="20190729 19:28:19.405"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:19.407" endtime="20190729 19:28:19.410"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:20.414" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:19.412" endtime="20190729 19:28:20.416"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:18.993" endtime="20190729 19:28:20.416"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:20.626" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:20.627" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:20.419" endtime="20190729 19:28:20.628"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:20.630" endtime="20190729 19:28:20.633"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:21.637" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:20.635" endtime="20190729 19:28:21.639"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:20.417" endtime="20190729 19:28:21.639"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:21.850" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:21.852" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:21.643" endtime="20190729 19:28:21.852"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:21.854" endtime="20190729 19:28:21.858"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:22.862" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:21.859" endtime="20190729 19:28:22.863"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:21.641" endtime="20190729 19:28:22.864"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:23.074" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:23.076" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:22.866" endtime="20190729 19:28:23.076"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:23.078" endtime="20190729 19:28:23.082"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:24.085" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:23.083" endtime="20190729 19:28:24.087"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:22.865" endtime="20190729 19:28:24.088"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:24.297" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:24.299" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:24.090" endtime="20190729 19:28:24.299"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:24.301" endtime="20190729 19:28:24.305"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:25.309" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:24.306" endtime="20190729 19:28:25.310"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:24.089" endtime="20190729 19:28:25.311"></status>
</kw>
<kw name="${i} = 16" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:25.521" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:25.522" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:25.313" endtime="20190729 19:28:25.523"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:25.525" endtime="20190729 19:28:25.529"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:26.533" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:25.531" endtime="20190729 19:28:26.535"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:25.312" endtime="20190729 19:28:26.535"></status>
</kw>
<kw name="${i} = 17" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:26.747" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:26.749" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:26.539" endtime="20190729 19:28:26.750"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:26.752" endtime="20190729 19:28:26.758"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:27.762" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:26.760" endtime="20190729 19:28:27.763"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:26.536" endtime="20190729 19:28:27.763"></status>
</kw>
<kw name="${i} = 18" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:27.969" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:27.971" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:27.765" endtime="20190729 19:28:27.971"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:27.973" endtime="20190729 19:28:27.979"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:28.983" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:27.980" endtime="20190729 19:28:28.984"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:27.764" endtime="20190729 19:28:28.985"></status>
</kw>
<kw name="${i} = 19" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:29.194" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:29.196" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:28.987" endtime="20190729 19:28:29.196"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:29.199" endtime="20190729 19:28:29.202"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:30.206" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:29.204" endtime="20190729 19:28:30.208"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:28.986" endtime="20190729 19:28:30.208"></status>
</kw>
<kw name="${i} = 20" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:30.417" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:30.419" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:30.211" endtime="20190729 19:28:30.420"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:30.422" endtime="20190729 19:28:30.425"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:31.429" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:30.427" endtime="20190729 19:28:31.430"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:30.209" endtime="20190729 19:28:31.431"></status>
</kw>
<kw name="${i} = 21" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:31.641" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:31.642" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:31.434" endtime="20190729 19:28:31.643"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:31.644" endtime="20190729 19:28:31.650"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:32.655" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:31.652" endtime="20190729 19:28:32.657"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:31.432" endtime="20190729 19:28:32.657"></status>
</kw>
<kw name="${i} = 22" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:32.869" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:32.871" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:32.660" endtime="20190729 19:28:32.872"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:32.873" endtime="20190729 19:28:32.877"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:33.881" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:32.879" endtime="20190729 19:28:33.883"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:32.658" endtime="20190729 19:28:33.883"></status>
</kw>
<kw name="${i} = 23" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:34.093" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:34.095" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:33.886" endtime="20190729 19:28:34.095"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:34.097" endtime="20190729 19:28:34.101"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:35.104" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:34.102" endtime="20190729 19:28:35.106"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:33.884" endtime="20190729 19:28:35.107"></status>
</kw>
<kw name="${i} = 24" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:35.317" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:35.319" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:35.110" endtime="20190729 19:28:35.320"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:35.322" endtime="20190729 19:28:35.326"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:36.330" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:35.327" endtime="20190729 19:28:36.331"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:35.108" endtime="20190729 19:28:36.332"></status>
</kw>
<kw name="${i} = 25" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:36.542" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:36.544" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:36.334" endtime="20190729 19:28:36.544"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:36.546" endtime="20190729 19:28:36.550"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:37.555" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:36.552" endtime="20190729 19:28:37.557"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:36.333" endtime="20190729 19:28:37.558"></status>
</kw>
<kw name="${i} = 26" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:37.769" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:37.771" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:37.561" endtime="20190729 19:28:37.771"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:37.774" endtime="20190729 19:28:37.779"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:38.782" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:37.780" endtime="20190729 19:28:38.783"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:37.559" endtime="20190729 19:28:38.784"></status>
</kw>
<kw name="${i} = 27" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:38.989" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:38.990" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:38.785" endtime="20190729 19:28:38.990"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:38.991" endtime="20190729 19:28:38.993"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:39.995" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:38.994" endtime="20190729 19:28:39.997"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:38.784" endtime="20190729 19:28:39.997"></status>
</kw>
<kw name="${i} = 28" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:40.207" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:40.209" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:40.000" endtime="20190729 19:28:40.209"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:40.211" endtime="20190729 19:28:40.214"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:41.218" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:40.216" endtime="20190729 19:28:41.220"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:39.998" endtime="20190729 19:28:41.220"></status>
</kw>
<kw name="${i} = 29" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:41.431" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:41.433" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:41.223" endtime="20190729 19:28:41.433"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:41.436" endtime="20190729 19:28:41.439"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:42.443" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:41.441" endtime="20190729 19:28:42.445"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:41.221" endtime="20190729 19:28:42.445"></status>
</kw>
<kw name="${i} = 30" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:42.655" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:42.657" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:42.448" endtime="20190729 19:28:42.658"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:42.660" endtime="20190729 19:28:42.665"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:43.673" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:42.666" endtime="20190729 19:28:43.675"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:42.446" endtime="20190729 19:28:43.676"></status>
</kw>
<kw name="${i} = 31" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:43.888" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:43.890" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:43.680" endtime="20190729 19:28:43.890"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:43.892" endtime="20190729 19:28:43.896"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:44.899" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:43.897" endtime="20190729 19:28:44.901"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:43.678" endtime="20190729 19:28:44.902"></status>
</kw>
<kw name="${i} = 32" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:45.112" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:45.114" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:44.905" endtime="20190729 19:28:45.115"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:45.117" endtime="20190729 19:28:45.121"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:46.125" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:45.123" endtime="20190729 19:28:46.127"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:44.903" endtime="20190729 19:28:46.128"></status>
</kw>
<kw name="${i} = 33" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:46.337" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:46.339" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:46.131" endtime="20190729 19:28:46.340"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:46.342" endtime="20190729 19:28:46.346"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:47.351" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:46.348" endtime="20190729 19:28:47.353"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:46.129" endtime="20190729 19:28:47.354"></status>
</kw>
<kw name="${i} = 34" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:47.564" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:47.565" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:47.357" endtime="20190729 19:28:47.566"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:47.568" endtime="20190729 19:28:47.571"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:48.576" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:47.573" endtime="20190729 19:28:48.577"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:47.355" endtime="20190729 19:28:48.578"></status>
</kw>
<kw name="${i} = 35" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:48.787" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:48.789" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:48.580" endtime="20190729 19:28:48.790"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:48.791" endtime="20190729 19:28:48.798"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:49.805" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:48.801" endtime="20190729 19:28:49.806"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:48.579" endtime="20190729 19:28:49.806"></status>
</kw>
<kw name="${i} = 36" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:50.012" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:50.013" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:49.808" endtime="20190729 19:28:50.013"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:50.014" endtime="20190729 19:28:50.016"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:51.018" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:50.017" endtime="20190729 19:28:51.020"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:49.807" endtime="20190729 19:28:51.020"></status>
</kw>
<kw name="${i} = 37" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:51.230" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:51.232" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:51.023" endtime="20190729 19:28:51.232"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:51.234" endtime="20190729 19:28:51.237"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:52.242" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:51.239" endtime="20190729 19:28:52.243"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:51.021" endtime="20190729 19:28:52.244"></status>
</kw>
<kw name="${i} = 38" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:52.453" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:52.455" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:52.246" endtime="20190729 19:28:52.455"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:52.457" endtime="20190729 19:28:52.461"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:53.466" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:52.463" endtime="20190729 19:28:53.467"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:52.245" endtime="20190729 19:28:53.468"></status>
</kw>
<kw name="${i} = 39" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:53.678" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:53.680" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:53.471" endtime="20190729 19:28:53.680"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:53.682" endtime="20190729 19:28:53.685"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:54.692" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:53.687" endtime="20190729 19:28:54.694"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:53.469" endtime="20190729 19:28:54.694"></status>
</kw>
<kw name="${i} = 40" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:54.904" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:54.907" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:54.697" endtime="20190729 19:28:54.908"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:54.910" endtime="20190729 19:28:54.914"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:55.919" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:54.916" endtime="20190729 19:28:55.921"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:54.695" endtime="20190729 19:28:55.921"></status>
</kw>
<kw name="${i} = 41" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:56.130" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:56.132" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:55.924" endtime="20190729 19:28:56.133"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:56.134" endtime="20190729 19:28:56.138"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:57.142" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:56.139" endtime="20190729 19:28:57.143"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:55.922" endtime="20190729 19:28:57.144"></status>
</kw>
<kw name="${i} = 42" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:57.353" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 19:28:57.355" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 19:28:57.146" endtime="20190729 19:28:57.355"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:57.357" endtime="20190729 19:28:57.361"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:28:58.365" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:28:57.363" endtime="20190729 19:28:58.367"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:57.145" endtime="20190729 19:28:58.367"></status>
</kw>
<kw name="${i} = 43" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:28:58.577" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=1;</msg>
<msg timestamp="20190729 19:28:58.582" level="INFO">${d} = 1</msg>
<status status="PASS" starttime="20190729 19:28:58.370" endtime="20190729 19:28:58.582"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<msg timestamp="20190729 19:28:58.588" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:28:58.584" endtime="20190729 19:28:58.589"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:58.368" endtime="20190729 19:28:58.589"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:05.507" endtime="20190729 19:28:58.590"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==99</arg>
<arg>Fail</arg>
<arg>自检结果查询失败</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:58.592" endtime="20190729 19:28:58.599"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-C1+ai.sf.ck.r=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${e}</var>
</assign>
<msg timestamp="20190729 19:28:58.881" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-C1+AI.SF.CK.R=0,0,0,0,0,0,0,0,0,1,0,0,0;</msg>
<msg timestamp="20190729 19:28:58.883" level="INFO">${e} = 0,0,0,0,0,0,0,0,0,1,0,0,0</msg>
<status status="PASS" starttime="20190729 19:28:58.601" endtime="20190729 19:28:58.883"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${e}'!='0,0,0,0,0,0,0,0,0,1,0,0,0'</arg>
<arg>Fail</arg>
<arg>自检失败</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:58.886" endtime="20190729 19:28:58.891"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>${e}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:28:58.893" endtime="20190729 19:28:58.900"></status>
</kw>
<kw name="${i} IN RANGE [ 6 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.fom.nt=01</arg>
<arg>IOT</arg>
</arguments>
<msg timestamp="20190729 19:28:59.181" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.fom.nt=01
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.FOM.NT=successful;</msg>
<status status="PASS" starttime="20190729 19:28:58.908" endtime="20190729 19:28:59.183"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190729 19:29:04.185" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190729 19:28:59.184" endtime="20190729 19:29:04.187"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ai.fom.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190729 19:29:04.403" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ai.fom.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.AI.FOM.ACK=0;</msg>
<msg timestamp="20190729 19:29:04.405" level="INFO">${f} = 0</msg>
<status status="PASS" starttime="20190729 19:29:04.189" endtime="20190729 19:29:04.405"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${f}'=='2'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:04.407" endtime="20190729 19:29:04.412"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:58.905" endtime="20190729 19:29:04.412"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.fom.nt=01</arg>
<arg>IOT</arg>
</arguments>
<msg timestamp="20190729 19:29:04.706" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.fom.nt=01
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.FOM.NT=successful;</msg>
<status status="PASS" starttime="20190729 19:29:04.415" endtime="20190729 19:29:04.707"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190729 19:29:09.712" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190729 19:29:04.709" endtime="20190729 19:29:09.713"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ai.fom.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190729 19:29:09.922" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ai.fom.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.AI.FOM.ACK=0;</msg>
<msg timestamp="20190729 19:29:09.924" level="INFO">${f} = 0</msg>
<status status="PASS" starttime="20190729 19:29:09.715" endtime="20190729 19:29:09.924"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${f}'=='2'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:09.926" endtime="20190729 19:29:09.932"></status>
</kw>
<status status="PASS" starttime="20190729 19:29:04.413" endtime="20190729 19:29:09.932"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.fom.nt=01</arg>
<arg>IOT</arg>
</arguments>
<msg timestamp="20190729 19:29:10.226" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.fom.nt=01
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.FOM.NT=successful;</msg>
<status status="PASS" starttime="20190729 19:29:09.935" endtime="20190729 19:29:10.227"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190729 19:29:15.232" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190729 19:29:10.229" endtime="20190729 19:29:15.233"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ai.fom.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190729 19:29:15.443" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ai.fom.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.AI.FOM.ACK=0;</msg>
<msg timestamp="20190729 19:29:15.444" level="INFO">${f} = 0</msg>
<status status="PASS" starttime="20190729 19:29:15.235" endtime="20190729 19:29:15.445"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${f}'=='2'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:15.446" endtime="20190729 19:29:15.450"></status>
</kw>
<status status="PASS" starttime="20190729 19:29:09.933" endtime="20190729 19:29:15.451"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.fom.nt=01</arg>
<arg>IOT</arg>
</arguments>
<msg timestamp="20190729 19:29:15.746" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.fom.nt=01
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.FOM.NT=successful;</msg>
<status status="PASS" starttime="20190729 19:29:15.453" endtime="20190729 19:29:15.747"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190729 19:29:20.751" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190729 19:29:15.749" endtime="20190729 19:29:20.753"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ai.fom.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190729 19:29:20.961" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ai.fom.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.AI.FOM.ACK=2;</msg>
<msg timestamp="20190729 19:29:20.963" level="INFO">${f} = 2</msg>
<status status="PASS" starttime="20190729 19:29:20.755" endtime="20190729 19:29:20.964"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${f}'=='2'</arg>
</arguments>
<msg timestamp="20190729 19:29:20.969" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:29:20.965" endtime="20190729 19:29:20.971"></status>
</kw>
<status status="PASS" starttime="20190729 19:29:15.451" endtime="20190729 19:29:20.972"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:58.902" endtime="20190729 19:29:20.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==5</arg>
<arg>Fail</arg>
<arg>SD卡格式化失败</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:20.976" endtime="20190729 19:29:20.979"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:20.983" endtime="20190729 19:29:20.987"></status>
</kw>
<status status="PASS" starttime="20190729 19:28:05.492" endtime="20190729 19:29:20.989" critical="yes"></status>
</test>
<test id="s1-t7" name="TS06_电容">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${CAP_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:21.004" endtime="20190729 19:29:21.010"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-crt</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 19:29:21.264" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-crt
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)pwr err: handle is exist.</msg>
<status status="PASS" starttime="20190729 19:29:21.012" endtime="20190729 19:29:21.265"></status>
</kw>
<kw name="${i} IN RANGE [ 180 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:29:21.566" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1416,**pwr:13881|13872,*batt:3466|3466,*bntc:1531|1531,*gnss:2810|2812,*adc1:0|0,*adc2:0|0,*sos1:4238|4238,*sos2:4258|4256,*scap:7002|7002;</msg>
<msg timestamp="20190729 19:29:21.567" level="INFO">${a} = adc_drv chn:9,calib:1,cnv:1416,**pwr:13881|13872,*batt:3466|3466,*bntc:1531|1531,*gnss:2810|2812,*adc1:0|0,*adc2:0|0,*sos1:4238|4238,*sos2:4258|4256,*scap:7002|7002;</msg>
<status status="PASS" starttime="20190729 19:29:21.267" endtime="20190729 19:29:21.568"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:29:21.573" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1416', '**pwr', '13881', '13872', '*batt', '3466', '3466', '*bntc', '1531', '1531', '*gnss', '2810', '2812', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4238', '4238', '*sos2', '4258', '4256', '*scap', '7002', '7002', '']</msg>
<msg timestamp="20190729 19:29:21.574" level="INFO">${b} = 7002</msg>
<status status="PASS" starttime="20190729 19:29:21.569" endtime="20190729 19:29:21.574"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${b})</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:29:21.579" level="INFO">${b} = 7002</msg>
<status status="PASS" starttime="20190729 19:29:21.576" endtime="20190729 19:29:21.579"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${b}&gt;6500 or ${b}&lt;1000</arg>
</arguments>
<msg timestamp="20190729 19:29:21.583" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:29:21.580" endtime="20190729 19:29:21.584"></status>
</kw>
<status status="PASS" starttime="20190729 19:29:21.266" endtime="20190729 19:29:21.584"></status>
</kw>
<status status="PASS" starttime="20190729 19:29:21.265" endtime="20190729 19:29:21.584"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==99 or ${b}&lt;4500</arg>
<arg>Fail</arg>
<arg>电容电压不足</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:21.586" endtime="20190729 19:29:21.589"></status>
</kw>
<kw name="Power KL30 Close" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 19:29:21.591" endtime="20190729 19:29:21.593"></status>
</kw>
<kw name="Power KL15 Close" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 19:29:21.594" endtime="20190729 19:29:21.596"></status>
</kw>
<kw name="Exp Timestamp" library="EXP">
<assign>
<var>${time1}</var>
</assign>
<msg timestamp="20190729 19:29:21.599" level="INFO">${time1} = 1564399761</msg>
<status status="PASS" starttime="20190729 19:29:21.598" endtime="20190729 19:29:21.600"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-crt</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 19:29:21.869" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-crt
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)pwr err: handle is exist.</msg>
<status status="PASS" starttime="20190729 19:29:21.601" endtime="20190729 19:29:21.870"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)gpi-crt-chn30-tick1000-wakv1</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 19:29:22.172" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)gpi-crt-chn30-tick1000-wakv1
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)gpi callback, handle:0x1FFF4554, sta_calb:0.</msg>
<status status="PASS" starttime="20190729 19:29:21.872" endtime="20190729 19:29:22.173"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)gpi-opn-chn30</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 19:29:22.475" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)gpi-opn-chn30
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)gpi open, handle:0x1FFF4554, ret:0.</msg>
<status status="PASS" starttime="20190729 19:29:22.176" endtime="20190729 19:29:22.477"></status>
</kw>
<kw name="${i} IN RANGE [ 30 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:29:23.179" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:139700.</msg>
<msg timestamp="20190729 19:29:23.179" level="INFO">${a} = dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:139700.</msg>
<status status="PASS" starttime="20190729 19:29:22.481" endtime="20190729 19:29:23.180"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:29:23.182" level="INFO">['dsmin', '', 'value', '02', '', 'inter_type', '01', '', 'dect', '00', '', 'inter_cnt', '1', '', 'keep_tim', '139700.']</msg>
<msg timestamp="20190729 19:29:23.183" level="INFO">${b} = 02</msg>
<status status="PASS" starttime="20190729 19:29:23.181" endtime="20190729 19:29:23.183"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:23.184" endtime="20190729 19:29:23.186"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:29:24.188" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:29:23.187" endtime="20190729 19:29:24.190"></status>
</kw>
<status status="PASS" starttime="20190729 19:29:22.479" endtime="20190729 19:29:24.190"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:29:25.201" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:139700.</msg>
<msg timestamp="20190729 19:29:25.203" level="INFO">${a} = dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:139700.</msg>
<status status="PASS" starttime="20190729 19:29:24.193" endtime="20190729 19:29:25.203"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:29:25.208" level="INFO">['dsmin', '', 'value', '02', '', 'inter_type', '01', '', 'dect', '00', '', 'inter_cnt', '1', '', 'keep_tim', '139700.']</msg>
<msg timestamp="20190729 19:29:25.210" level="INFO">${b} = 02</msg>
<status status="PASS" starttime="20190729 19:29:25.205" endtime="20190729 19:29:25.210"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:25.212" endtime="20190729 19:29:25.216"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:29:26.220" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:29:25.217" endtime="20190729 19:29:26.221"></status>
</kw>
<status status="PASS" starttime="20190729 19:29:24.191" endtime="20190729 19:29:26.222"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:29:27.232" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:139700.</msg>
<msg timestamp="20190729 19:29:27.234" level="INFO">${a} = dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:139700.</msg>
<status status="PASS" starttime="20190729 19:29:26.225" endtime="20190729 19:29:27.235"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:29:27.241" level="INFO">['dsmin', '', 'value', '02', '', 'inter_type', '01', '', 'dect', '00', '', 'inter_cnt', '1', '', 'keep_tim', '139700.']</msg>
<msg timestamp="20190729 19:29:27.242" level="INFO">${b} = 02</msg>
<status status="PASS" starttime="20190729 19:29:27.237" endtime="20190729 19:29:27.243"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:27.245" endtime="20190729 19:29:27.247"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 19:29:28.250" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 19:29:27.248" endtime="20190729 19:29:28.251"></status>
</kw>
<status status="PASS" starttime="20190729 19:29:26.223" endtime="20190729 19:29:28.251"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:29:28.857" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:01, inter_type:02, dect:00, inter_cnt:12, keep_tim:0.</msg>
<msg timestamp="20190729 19:29:28.858" level="INFO">${a} = dsmin, value:01, inter_type:02, dect:00, inter_cnt:12, keep_tim:0.</msg>
<status status="PASS" starttime="20190729 19:29:28.253" endtime="20190729 19:29:28.858"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:29:28.861" level="INFO">['dsmin', '', 'value', '01', '', 'inter_type', '02', '', 'dect', '00', '', 'inter_cnt', '12', '', 'keep_tim', '0.']</msg>
<msg timestamp="20190729 19:29:28.861" level="INFO">${b} = 01</msg>
<status status="PASS" starttime="20190729 19:29:28.859" endtime="20190729 19:29:28.862"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<msg timestamp="20190729 19:29:28.865" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 19:29:28.863" endtime="20190729 19:29:28.866"></status>
</kw>
<status status="PASS" starttime="20190729 19:29:28.252" endtime="20190729 19:29:28.866"></status>
</kw>
<status status="PASS" starttime="20190729 19:29:22.478" endtime="20190729 19:29:28.866"></status>
</kw>
<kw name="Power KL30 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 19:29:28.868" endtime="20190729 19:29:28.871"></status>
</kw>
<kw name="Power KL30 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 19:29:28.874" endtime="20190729 19:29:28.876"></status>
</kw>
<kw name="Exp Timestamp" library="EXP">
<assign>
<var>${time2}</var>
</assign>
<msg timestamp="20190729 19:29:28.883" level="INFO">${time2} = 1564399768</msg>
<status status="PASS" starttime="20190729 19:29:28.880" endtime="20190729 19:29:28.884"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)gpi-cls-chn30</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 19:29:29.161" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)gpi-cls-chn30
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)gpi close, handle:0x1FFF4554, ret:0.</msg>
<status status="PASS" starttime="20190729 19:29:28.887" endtime="20190729 19:29:29.162"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${time2}-${time1}</arg>
</arguments>
<assign>
<var>${time3}</var>
</assign>
<msg timestamp="20190729 19:29:29.169" level="INFO">${time3} = 7</msg>
<status status="PASS" starttime="20190729 19:29:29.165" endtime="20190729 19:29:29.170"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${time3}&lt;${dianrong}</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:29.173" endtime="20190729 19:29:29.180"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-crt</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 19:29:29.464" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-crt
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)pwr err: handle is exist.</msg>
<status status="PASS" starttime="20190729 19:29:29.183" endtime="20190729 19:29:29.465"></status>
</kw>
<kw name="${i} IN RANGE [ 2 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:29:29.767" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1497,**pwr:13908|13881,*batt:3408|3387,*bntc:1523|1523,*gnss:2811|2811,*adc1:0|0,*adc2:0|0,*sos1:4238|4238,*sos2:4256|4256,*scap:4653|4636;</msg>
<msg timestamp="20190729 19:29:29.769" level="INFO">${a} = adc_drv chn:9,calib:1,cnv:1497,**pwr:13908|13881,*batt:3408|3387,*bntc:1523|1523,*gnss:2811|2811,*adc1:0|0,*adc2:0|0,*sos1:4238|4238,*sos2:4256|4256,*scap:4653|4636;</msg>
<status status="PASS" starttime="20190729 19:29:29.470" endtime="20190729 19:29:29.769"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:29:29.775" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1497', '**pwr', '13908', '13881', '*batt', '3408', '3387', '*bntc', '1523', '1523', '*gnss', '2811', '2811', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4238', '4238', '*sos2', '4256', '4256', '*scap', '4653', '4636', '']</msg>
<msg timestamp="20190729 19:29:29.777" level="INFO">${b} = 4653</msg>
<status status="PASS" starttime="20190729 19:29:29.771" endtime="20190729 19:29:29.778"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${b})</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:29:29.783" level="INFO">${b} = 4653</msg>
<status status="PASS" starttime="20190729 19:29:29.780" endtime="20190729 19:29:29.783"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${b}&gt;6900</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:29.785" endtime="20190729 19:29:29.788"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190729 19:29:33.792" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20190729 19:29:29.790" endtime="20190729 19:29:33.793"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:29:34.002" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1539,**pwr:13846|13846,*batt:3439|3437,*bntc:1522|1522,*gnss:2811|2811,*adc1:0|0,*adc2:0|0,*sos1:4238|4238,*sos2:4258|4256,*scap:4777|4769;</msg>
<msg timestamp="20190729 19:29:34.004" level="INFO">${c} = adc_drv chn:9,calib:1,cnv:1539,**pwr:13846|13846,*batt:3439|3437,*bntc:1522|1522,*gnss:2811|2811,*adc1:0|0,*adc2:0|0,*sos1:4238|4238,*sos2:4258|4256,*scap:4777|4769;</msg>
<status status="PASS" starttime="20190729 19:29:33.795" endtime="20190729 19:29:34.004"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${c}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:29:34.009" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1539', '**pwr', '13846', '13846', '*batt', '3439', '3437', '*bntc', '1522', '1522', '*gnss', '2811', '2811', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4238', '4238', '*sos2', '4258', '4256', '*scap', '4777', '4769', '']</msg>
<msg timestamp="20190729 19:29:34.010" level="INFO">${d} = 4777</msg>
<status status="PASS" starttime="20190729 19:29:34.006" endtime="20190729 19:29:34.011"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${d})</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:29:34.016" level="INFO">${d} = 4777</msg>
<status status="PASS" starttime="20190729 19:29:34.012" endtime="20190729 19:29:34.016"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${d}&lt;=${b}</arg>
<arg>Fail</arg>
<arg>电容未充电</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:34.018" endtime="20190729 19:29:34.022"></status>
</kw>
<status status="PASS" starttime="20190729 19:29:29.468" endtime="20190729 19:29:34.022"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 19:29:34.305" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1543,**pwr:13864|13855,*batt:3439|3439,*bntc:1522|1522,*gnss:2811|2811,*adc1:0|0,*adc2:0|0,*sos1:4238|4238,*sos2:4256|4256,*scap:4795|4786;</msg>
<msg timestamp="20190729 19:29:34.306" level="INFO">${a} = adc_drv chn:9,calib:1,cnv:1543,**pwr:13864|13855,*batt:3439|3439,*bntc:1522|1522,*gnss:2811|2811,*adc1:0|0,*adc2:0|0,*sos1:4238|4238,*sos2:4256|4256,*scap:4795|4786;</msg>
<status status="PASS" starttime="20190729 19:29:34.025" endtime="20190729 19:29:34.307"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:29:34.312" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1543', '**pwr', '13864', '13855', '*batt', '3439', '3439', '*bntc', '1522', '1522', '*gnss', '2811', '2811', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4238', '4238', '*sos2', '4256', '4256', '*scap', '4795', '4786', '']</msg>
<msg timestamp="20190729 19:29:34.313" level="INFO">${b} = 4795</msg>
<status status="PASS" starttime="20190729 19:29:34.309" endtime="20190729 19:29:34.314"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${b})</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 19:29:34.319" level="INFO">${b} = 4795</msg>
<status status="PASS" starttime="20190729 19:29:34.315" endtime="20190729 19:29:34.319"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${b}&gt;6900</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:34.321" endtime="20190729 19:29:34.324"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190729 19:29:38.328" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20190729 19:29:34.326" endtime="20190729 19:29:38.330"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 19:29:38.538" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1585,**pwr:13731|13731,*batt:3442|3442,*bntc:1522|1522,*gnss:2811|2811,*adc1:0|0,*adc2:0|0,*sos1:4240|4238,*sos2:4258|4256,*scap:4928|4919;</msg>
<msg timestamp="20190729 19:29:38.539" level="INFO">${c} = adc_drv chn:9,calib:1,cnv:1585,**pwr:13731|13731,*batt:3442|3442,*bntc:1522|1522,*gnss:2811|2811,*adc1:0|0,*adc2:0|0,*sos1:4240|4238,*sos2:4258|4256,*scap:4928|4919;</msg>
<status status="PASS" starttime="20190729 19:29:38.332" endtime="20190729 19:29:38.540"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${c}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:29:38.542" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1585', '**pwr', '13731', '13731', '*batt', '3442', '3442', '*bntc', '1522', '1522', '*gnss', '2811', '2811', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4240', '4238', '*sos2', '4258', '4256', '*scap', '4928', '4919', '']</msg>
<msg timestamp="20190729 19:29:38.543" level="INFO">${d} = 4928</msg>
<status status="PASS" starttime="20190729 19:29:38.541" endtime="20190729 19:29:38.543"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${d})</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 19:29:38.546" level="INFO">${d} = 4928</msg>
<status status="PASS" starttime="20190729 19:29:38.544" endtime="20190729 19:29:38.546"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${d}&lt;=${b}</arg>
<arg>Fail</arg>
<arg>电容未充电</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:38.547" endtime="20190729 19:29:38.549"></status>
</kw>
<status status="PASS" starttime="20190729 19:29:34.023" endtime="20190729 19:29:38.550"></status>
</kw>
<status status="PASS" starttime="20190729 19:29:29.467" endtime="20190729 19:29:38.550"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>TS10_电容</arg>
<arg>PASS</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:38.551" endtime="20190729 19:29:38.553"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:38.556" endtime="20190729 19:29:38.559"></status>
</kw>
<status status="PASS" starttime="20190729 19:29:20.996" endtime="20190729 19:29:38.560" critical="yes"></status>
</test>
<test id="s1-t8" name="IOT_型号日期设置">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${DATA_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<msg timestamp="20190729 19:29:38.590" level="INFO">Execution passed with message:
此项不测试</msg>
<status status="PASS" starttime="20190729 19:29:38.587" endtime="20190729 19:29:38.591"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:38.596" endtime="20190729 19:29:38.599"></status>
</kw>
<status status="PASS" starttime="20190729 19:29:38.564" endtime="20190729 19:29:38.600" critical="yes">此项不测试</status>
</test>
<test id="s1-t9" name="IOT_PID设置">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${PID_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<msg timestamp="20190729 19:29:38.620" level="INFO">Execution passed with message:
此项不测试</msg>
<status status="PASS" starttime="20190729 19:29:38.615" endtime="20190729 19:29:38.622"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:38.625" endtime="20190729 19:29:38.631"></status>
</kw>
<status status="PASS" starttime="20190729 19:29:38.607" endtime="20190729 19:29:38.633" critical="yes">此项不测试</status>
</test>
<test id="s1-t10" name="GET_END">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+L1+nw.e01.r01.ic=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${ICCID_}</var>
</assign>
<msg timestamp="20190729 19:29:45.866" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+L1+nw.e01.r01.ic=?
应该收到串口数据: IOT
num 0, time: 2019-07-29 19:29:42
实际接收到的数据:  IOT+L1+NW.E01.R01.IC=89860919730027328742;</msg>
<msg timestamp="20190729 19:29:45.868" level="INFO">${ICCID_} = 89860919730027328742</msg>
<status status="PASS" starttime="20190729 19:29:38.647" endtime="20190729 19:29:45.869"></status>
</kw>
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time2}</var>
</assign>
<msg timestamp="20190729 19:29:45.874" level="INFO">${time2} = 2019-07-29 19:29:45</msg>
<status status="PASS" starttime="20190729 19:29:45.871" endtime="20190729 19:29:45.875"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>结束时间:${time2}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:45.877" endtime="20190729 19:29:45.883"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>${ICCID_}</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:45.886" endtime="20190729 19:29:45.892"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>***************************************************************************************</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:45.895" endtime="20190729 19:29:45.901"></status>
</kw>
<kw name="Txtrwx Transfer" library="Txtrwx">
<arguments>
<arg>/home/pi/production/mid.txt</arg>
<arg>/home/pi/production/log/整机测试日志.txt</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:45.904" endtime="20190729 19:29:45.910"></status>
</kw>
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/production/mid.txt</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:45.913" endtime="20190729 19:29:46.010"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 19:29:46.013" endtime="20190729 19:29:46.017"></status>
</kw>
<status status="PASS" starttime="20190729 19:29:38.640" endtime="20190729 19:29:46.018" critical="yes"></status>
</test>
<kw name="clear" type="teardown">
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/production/mid.txt</arg>
</arguments>
<msg timestamp="20190729 19:29:46.049" level="INFO">文件不存在</msg>
<status status="PASS" starttime="20190729 19:29:46.045" endtime="20190729 19:29:46.050"></status>
</kw>
<kw name="Power KL30 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 19:29:46.052" endtime="20190729 19:29:46.055"></status>
</kw>
<kw name="Power KL15 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 19:29:46.057" endtime="20190729 19:29:46.058"></status>
</kw>
<status status="PASS" starttime="20190729 19:29:46.042" endtime="20190729 19:29:46.060"></status>
</kw>
<status status="PASS" starttime="20190729 19:27:23.231" endtime="20190729 19:29:46.060"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="Ai Test">Ai Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
