<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.7.0 on linux)" generated="20190729 17:52:11.687">
<suite id="s1" name="Ai Test" source="/home/pi/production/case/ai_test.txt">
<test id="s1-t1" name="GET_Ready">
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time1}</var>
</assign>
<msg timestamp="20190729 17:52:12.826" level="INFO">${time1} = 2019-07-29 17:52:12</msg>
<status status="PASS" starttime="20190729 17:52:12.823" endtime="20190729 17:52:12.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${time1}</arg>
</arguments>
<msg timestamp="20190729 17:52:12.831" level="INFO">${time1} = 2019-07-29 17:52:12</msg>
<status status="PASS" starttime="20190729 17:52:12.828" endtime="20190729 17:52:12.832"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>25</arg>
</arguments>
<msg timestamp="20190729 17:52:37.836" level="INFO">Slept 25 seconds</msg>
<status status="PASS" starttime="20190729 17:52:12.834" endtime="20190729 17:52:37.838"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${ABOX_TEST}==1</arg>
<arg>发起自检</arg>
</arguments>
<kw name="发起自检">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.con.alive=5</arg>
<arg>IOT-S1+AI.M.CON.ALIVE=5</arg>
</arguments>
<msg timestamp="20190729 17:52:38.061" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.con.alive=5
应该收到串口数据: IOT-S1+AI.M.CON.ALIVE=5
实际接收到的数据:  IOT-S1+AI.M.CON.ALIVE=5;</msg>
<status status="PASS" starttime="20190729 17:52:37.853" endtime="20190729 17:52:38.062"></status>
</kw>
<kw name="${i} IN RANGE [ 80 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.con.st=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 17:52:38.363" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.con.st=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CON.ST=1;</msg>
<msg timestamp="20190729 17:52:38.364" level="INFO">${a} = 1</msg>
<status status="PASS" starttime="20190729 17:52:38.064" endtime="20190729 17:52:38.364"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${a}'=='1'</arg>
</arguments>
<msg timestamp="20190729 17:52:38.367" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 17:52:38.365" endtime="20190729 17:52:38.368"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:38.063" endtime="20190729 17:52:38.369"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:38.062" endtime="20190729 17:52:38.369"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==79</arg>
<arg>Fail</arg>
<arg>串口状态连接失败</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:38.370" endtime="20190729 17:52:38.373"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.lev.switch=0</arg>
<arg>IOT-V1+AI.LEV.SWITCH=successful;</arg>
</arguments>
<msg timestamp="20190729 17:52:38.666" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.lev.switch=0
应该收到串口数据: IOT-V1+AI.LEV.SWITCH=successful;
实际接收到的数据:  IOT-V1+AI.LEV.SWITCH=successful;</msg>
<status status="PASS" starttime="20190729 17:52:38.375" endtime="20190729 17:52:38.667"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190729 17:52:43.671" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190729 17:52:38.669" endtime="20190729 17:52:43.672"></status>
</kw>
<kw name="${i} IN RANGE [ 8 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.self.check=1</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 17:52:43.879" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.self.check=1
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.SELF.CHECK=successful;</msg>
<msg timestamp="20190729 17:52:43.879" level="INFO">${b} = successful</msg>
<status status="PASS" starttime="20190729 17:52:43.675" endtime="20190729 17:52:43.880"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20190729 17:52:45.882" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190729 17:52:43.881" endtime="20190729 17:52:45.884"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.se.ch.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 17:52:46.093" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.se.ch.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.SE.CH.ACK=1;</msg>
<msg timestamp="20190729 17:52:46.094" level="INFO">${c} = 1</msg>
<status status="PASS" starttime="20190729 17:52:45.886" endtime="20190729 17:52:46.095"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${c}'=='1'</arg>
</arguments>
<msg timestamp="20190729 17:52:46.102" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 17:52:46.097" endtime="20190729 17:52:46.123"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:43.674" endtime="20190729 17:52:46.124"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:43.673" endtime="20190729 17:52:46.125"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==7</arg>
<arg>Fail</arg>
<arg>发起自检失败</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:46.128" endtime="20190729 17:52:46.131"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:37.846" endtime="20190729 17:52:46.131"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:37.841" endtime="20190729 17:52:46.132"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>开始时间:${time1}</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:46.133" endtime="20190729 17:52:46.136"></status>
</kw>
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time3}</var>
</assign>
<msg timestamp="20190729 17:52:46.140" level="INFO">${time3} = 2019-07-29 17:52:46</msg>
<status status="PASS" starttime="20190729 17:52:46.137" endtime="20190729 17:52:46.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${time3}</arg>
</arguments>
<msg timestamp="20190729 17:52:46.145" level="INFO">${time3} = 2019-07-29 17:52:46</msg>
<status status="PASS" starttime="20190729 17:52:46.143" endtime="20190729 17:52:46.147"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:46.151" endtime="20190729 17:52:46.154"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:12.818" endtime="20190729 17:52:46.155" critical="yes"></status>
</test>
<test id="s1-t2" name="TS01_TONGXIN">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${TONGXIN_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:46.170" endtime="20190729 17:52:46.176"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1+nw.e01.inf=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 17:52:46.400" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+D1+nw.e01.inf=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+D3+NW.E01.INF=863412047452308,EC20CEFAG,EC20CEFAGR06A06M4G_OCPU  1  [Oct;</msg>
<msg timestamp="20190729 17:52:46.401" level="INFO">${a} = 863412047452308,EC20CEFAG,EC20CEFAGR06A06M4G_OCPU  1  [Oct</msg>
<status status="PASS" starttime="20190729 17:52:46.180" endtime="20190729 17:52:46.401"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 17:52:46.406" level="INFO">['863412047452308', 'EC20CEFAG', 'EC20CEFAGR06A06M4G_OCPU', '1', '[Oct']</msg>
<msg timestamp="20190729 17:52:46.407" level="INFO">${b} = ['EC20CEFAGR06A06M4G_OCPU']</msg>
<status status="PASS" starttime="20190729 17:52:46.403" endtime="20190729 17:52:46.407"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${b[0]}'!='${communication_version}'</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:46.409" endtime="20190729 17:52:46.411"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+nw.e01.stu=?</arg>
<arg>IOT</arg>
<arg>wait_time=6</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 17:52:46.702" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+nw.e01.stu=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+NW.E01.STU=LTE,2,LTE,2,1,197,27;</msg>
<msg timestamp="20190729 17:52:46.703" level="INFO">${c} = LTE,2,LTE,2,1,197,27</msg>
<status status="PASS" starttime="20190729 17:52:46.412" endtime="20190729 17:52:46.703"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:52:46.706" level="INFO">['LTE', '2', 'LTE', '2', '1', '197', '27']</msg>
<msg timestamp="20190729 17:52:46.707" level="INFO">${d} = ['LTE']</msg>
<status status="PASS" starttime="20190729 17:52:46.704" endtime="20190729 17:52:46.707"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${e}</var>
</assign>
<msg timestamp="20190729 17:52:46.710" level="INFO">['LTE', '2', 'LTE', '2', '1', '197', '27']</msg>
<msg timestamp="20190729 17:52:46.711" level="INFO">${e} = ['2']</msg>
<status status="PASS" starttime="20190729 17:52:46.708" endtime="20190729 17:52:46.711"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190729 17:52:46.714" level="INFO">['LTE', '2', 'LTE', '2', '1', '197', '27']</msg>
<msg timestamp="20190729 17:52:46.714" level="INFO">${f} = ['LTE']</msg>
<status status="PASS" starttime="20190729 17:52:46.712" endtime="20190729 17:52:46.715"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${g}</var>
</assign>
<msg timestamp="20190729 17:52:46.717" level="INFO">['LTE', '2', 'LTE', '2', '1', '197', '27']</msg>
<msg timestamp="20190729 17:52:46.718" level="INFO">${g} = ['2']</msg>
<status status="PASS" starttime="20190729 17:52:46.716" endtime="20190729 17:52:46.718"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${h}</var>
</assign>
<msg timestamp="20190729 17:52:46.721" level="INFO">['LTE', '2', 'LTE', '2', '1', '197', '27']</msg>
<msg timestamp="20190729 17:52:46.722" level="INFO">${h} = ['1']</msg>
<status status="PASS" starttime="20190729 17:52:46.720" endtime="20190729 17:52:46.722"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${communication_1}</arg>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${one}</var>
</assign>
<msg timestamp="20190729 17:52:46.728" level="INFO">${one} = 1</msg>
<status status="PASS" starttime="20190729 17:52:46.724" endtime="20190729 17:52:46.728"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${communication_1}</arg>
<arg>${f[0]}</arg>
</arguments>
<assign>
<var>${two}</var>
</assign>
<msg timestamp="20190729 17:52:46.732" level="INFO">${two} = 1</msg>
<status status="PASS" starttime="20190729 17:52:46.729" endtime="20190729 17:52:46.732"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${one}!=1 or ${two}!=1 or '${e[0]}'!='${communication_2}' or '${g[0]}'!= '${communication_2}' or '${h[0]}'!='${communication_3}'</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:46.734" endtime="20190729 17:52:46.738"></status>
</kw>
<kw name="${I} IN RANGE [ 30 ]" type="for">
<kw name="${I} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+nw.e01.stu=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 17:52:47.010" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+nw.e01.stu=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+NW.E01.STU=LTE,2,LTE,2,1,197,27;</msg>
<msg timestamp="20190729 17:52:47.012" level="INFO">${c} = LTE,2,LTE,2,1,197,27</msg>
<status status="PASS" starttime="20190729 17:52:46.741" endtime="20190729 17:52:47.013"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${c}</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${m}</var>
</assign>
<msg timestamp="20190729 17:52:47.021" level="INFO">['LTE', '2', 'LTE', '2', '1', '197', '27']</msg>
<msg timestamp="20190729 17:52:47.022" level="INFO">${m} = ['27']</msg>
<status status="PASS" starttime="20190729 17:52:47.016" endtime="20190729 17:52:47.023"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${m[0]}</arg>
</arguments>
<assign>
<var>${m}</var>
</assign>
<msg timestamp="20190729 17:52:47.027" level="INFO">${m} = 27</msg>
<status status="PASS" starttime="20190729 17:52:47.024" endtime="20190729 17:52:47.028"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${m}&gt;${signal_value}</arg>
</arguments>
<msg timestamp="20190729 17:52:47.032" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 17:52:47.029" endtime="20190729 17:52:47.033"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:46.740" endtime="20190729 17:52:47.034"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:46.739" endtime="20190729 17:52:47.034"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${I}==29</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:47.036" endtime="20190729 17:52:47.039"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:47.042" endtime="20190729 17:52:47.045"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:46.161" endtime="20190729 17:52:47.047" critical="yes"></status>
</test>
<test id="s1-t3" name="TS03_串口2">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${SERIAL_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:47.067" endtime="20190729 17:52:47.070"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-crt-chn2-baud115200</arg>
<arg>(bsp)usart</arg>
</arguments>
<msg timestamp="20190729 17:52:47.319" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-crt-chn2-baud115200
应该收到串口数据: (bsp)usart
实际接收到的数据:  (bsp)usart callback, handle:0x1FFF4550, sta_calb:0.</msg>
<status status="PASS" starttime="20190729 17:52:47.072" endtime="20190729 17:52:47.319"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-opn-chn2</arg>
<arg>(bsp)usar</arg>
</arguments>
<msg timestamp="20190729 17:52:47.621" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-opn-chn2
应该收到串口数据: (bsp)usar
实际接收到的数据:  (bsp)usart open, handle:0x1FFF4550, ret:0.</msg>
<status status="PASS" starttime="20190729 17:52:47.321" endtime="20190729 17:52:47.622"></status>
</kw>
<kw name="Start Ama0 Recv" library="SerialLibrary">
<status status="PASS" starttime="20190729 17:52:47.623" endtime="20190729 17:52:47.634"></status>
</kw>
<kw name="${i} IN RANGE [ 5 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 17:52:47.925" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF4550, ret:0.</msg>
<status status="PASS" starttime="20190729 17:52:47.642" endtime="20190729 17:52:47.926"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:47.640" endtime="20190729 17:52:47.927"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 17:52:48.228" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF4550, ret:0.</msg>
<status status="PASS" starttime="20190729 17:52:47.930" endtime="20190729 17:52:48.230"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:47.928" endtime="20190729 17:52:48.230"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 17:52:48.531" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF4550, ret:0.</msg>
<status status="PASS" starttime="20190729 17:52:48.233" endtime="20190729 17:52:48.532"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:48.231" endtime="20190729 17:52:48.533"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 17:52:48.835" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF4550, ret:0.</msg>
<status status="PASS" starttime="20190729 17:52:48.535" endtime="20190729 17:52:48.836"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:48.534" endtime="20190729 17:52:48.837"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)usart-snd-chn2-hello</arg>
<arg>(bsp)usart send</arg>
</arguments>
<msg timestamp="20190729 17:52:49.138" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)usart-snd-chn2-hello
应该收到串口数据: (bsp)usart send
实际接收到的数据:  (bsp)usart send, handle:0x1FFF4550, ret:0.</msg>
<status status="PASS" starttime="20190729 17:52:48.839" endtime="20190729 17:52:49.140"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:48.838" endtime="20190729 17:52:49.140"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:47.637" endtime="20190729 17:52:49.141"></status>
</kw>
<kw name="Txtrwx Read" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2.txt</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20190729 17:52:49.147" level="INFO">${r} = hello
hello
hello
hello
hello
</msg>
<status status="PASS" starttime="20190729 17:52:49.143" endtime="20190729 17:52:49.148"></status>
</kw>
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2.txt</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:49.150" endtime="20190729 17:52:49.236"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${r}</arg>
<arg>hello</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 17:52:49.244" level="INFO">${a} = 1</msg>
<status status="PASS" starttime="20190729 17:52:49.240" endtime="20190729 17:52:49.245"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${a}==0</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:49.247" endtime="20190729 17:52:49.253"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20190729 17:52:51.259" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190729 17:52:49.256" endtime="20190729 17:52:51.260"></status>
</kw>
<kw name="Serial Ama0 Send" library="SerialLibrary">
<arguments>
<arg>goodgoodgood</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:51.262" endtime="20190729 17:52:51.266"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20190729 17:52:53.270" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190729 17:52:51.267" endtime="20190729 17:52:53.271"></status>
</kw>
<kw name="Txtrwx Read" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2_send.txt</arg>
</arguments>
<assign>
<var>${r}</var>
</assign>
<msg timestamp="20190729 17:52:53.277" level="INFO">${r} = goodgoodgood
</msg>
<status status="PASS" starttime="20190729 17:52:53.273" endtime="20190729 17:52:53.277"></status>
</kw>
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/ser2_send.txt</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:53.280" endtime="20190729 17:52:53.361"></status>
</kw>
<kw name="Exp Belong" library="EXP">
<doc>功能:判断字符串1是否在字符串2里面(成功返回1否则返回0)</doc>
<arguments>
<arg>${r}</arg>
<arg>goodgoodgood</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 17:52:53.368" level="INFO">${a} = 1</msg>
<status status="PASS" starttime="20190729 17:52:53.364" endtime="20190729 17:52:53.369"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${a}==0</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:53.371" endtime="20190729 17:52:53.379"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:53.382" endtime="20190729 17:52:53.385"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:47.058" endtime="20190729 17:52:53.386" critical="yes"></status>
</test>
<test id="s1-t4" name="TS04_定位">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${GPS_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:53.409" endtime="20190729 17:52:53.413"></status>
</kw>
<kw name="${I} IN RANGE [ 120 ]" type="for">
<kw name="${I} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+GNSS=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 17:52:53.627" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+GNSS=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+GNSS= MC120A, 1.1.1,1,1,13,1564631423,00000000;</msg>
<msg timestamp="20190729 17:52:53.628" level="INFO">${a} =  MC120A, 1.1.1,1,1,13,1564631423,00000000</msg>
<status status="PASS" starttime="20190729 17:52:53.419" endtime="20190729 17:52:53.629"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190729 17:52:53.631" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '13', '1564631423', '00000000']</msg>
<msg timestamp="20190729 17:52:53.632" level="INFO">${k} = ['MC120A']</msg>
<status status="PASS" starttime="20190729 17:52:53.630" endtime="20190729 17:52:53.632"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 17:52:53.635" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '13', '1564631423', '00000000']</msg>
<msg timestamp="20190729 17:52:53.636" level="INFO">${b} = ['1.1.1']</msg>
<status status="PASS" starttime="20190729 17:52:53.634" endtime="20190729 17:52:53.636"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 17:52:53.638" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '13', '1564631423', '00000000']</msg>
<msg timestamp="20190729 17:52:53.639" level="INFO">${c} = ['1']</msg>
<status status="PASS" starttime="20190729 17:52:53.637" endtime="20190729 17:52:53.639"></status>
</kw>
<kw name="Exp Serial Str Spilt" library="EXP">
<doc>功能：</doc>
<arguments>
<arg>${a}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:52:53.642" level="INFO">['', 'MC120A', '1.1.1', '1', '1', '13', '1564631423', '00000000']</msg>
<msg timestamp="20190729 17:52:53.643" level="INFO">${d} = ['13']</msg>
<status status="PASS" starttime="20190729 17:52:53.640" endtime="20190729 17:52:53.643"></status>
</kw>
<kw name="Return Int" library="EXP">
<arguments>
<arg>${d[0]}</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:52:53.646" level="INFO">${d} = 13</msg>
<status status="PASS" starttime="20190729 17:52:53.644" endtime="20190729 17:52:53.646"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k[0]}'=='${GPS_model}' and '${b[0]}'== '${GPS_version}' and '${c[0]}'=='${GPS_state}' and ${d}&gt;${GPS_number}</arg>
</arguments>
<msg timestamp="20190729 17:52:53.651" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 17:52:53.647" endtime="20190729 17:52:53.652"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:53.417" endtime="20190729 17:52:53.652"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:53.415" endtime="20190729 17:52:53.653"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${I}==119</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:53.654" endtime="20190729 17:52:53.656"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>IOT_定位</arg>
<arg>PASS</arg>
<arg>IOT+S1+GNSS=?</arg>
<arg>${a}</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:53.657" endtime="20190729 17:52:53.660"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+QXWZ=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${e}</var>
</assign>
<msg timestamp="20190729 17:52:53.929" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+S1+QXWZ=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+S1+QXWZ=1,1002,2002,3002,4014,0,0;</msg>
<msg timestamp="20190729 17:52:53.932" level="INFO">${e} = 1,1002,2002,3002,4014,0,0</msg>
<status status="PASS" starttime="20190729 17:52:53.662" endtime="20190729 17:52:53.932"></status>
</kw>
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time4}</var>
</assign>
<msg timestamp="20190729 17:52:53.935" level="INFO">${time4} = 2019-07-29 17:52:53</msg>
<status status="PASS" starttime="20190729 17:52:53.933" endtime="20190729 17:52:53.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${time4}</arg>
</arguments>
<msg timestamp="20190729 17:52:53.938" level="INFO">${time4} = 2019-07-29 17:52:53</msg>
<status status="PASS" starttime="20190729 17:52:53.936" endtime="20190729 17:52:53.938"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:53.940" endtime="20190729 17:52:53.942"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:53.396" endtime="20190729 17:52:53.944" critical="yes"></status>
</test>
<test id="s1-t5" name="TS05_WIFI">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${WIFI_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<msg timestamp="20190729 17:52:53.954" level="INFO">Execution passed with message:
此项不测试</msg>
<status status="PASS" starttime="20190729 17:52:53.951" endtime="20190729 17:52:53.955"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:53.957" endtime="20190729 17:52:53.959"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:53.947" endtime="20190729 17:52:53.960" critical="yes">此项不测试</status>
</test>
<test id="s1-t6" name="ABOX_自检">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${ABOX_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:53.971" endtime="20190729 17:52:53.975"></status>
</kw>
<kw name="${i} IN RANGE [ 100 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:52:54.232" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:52:54.234" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:52:53.980" endtime="20190729 17:52:54.234"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:54.236" endtime="20190729 17:52:54.239"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:52:55.243" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:52:54.241" endtime="20190729 17:52:55.245"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:53.979" endtime="20190729 17:52:55.245"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:52:55.455" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:52:55.456" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:52:55.248" endtime="20190729 17:52:55.457"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:55.458" endtime="20190729 17:52:55.462"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:52:56.466" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:52:55.464" endtime="20190729 17:52:56.466"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:55.246" endtime="20190729 17:52:56.467"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:52:56.672" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:52:56.673" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:52:56.468" endtime="20190729 17:52:56.673"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:56.674" endtime="20190729 17:52:56.676"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:52:57.679" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:52:56.677" endtime="20190729 17:52:57.680"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:56.467" endtime="20190729 17:52:57.681"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:52:57.890" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:52:57.892" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:52:57.684" endtime="20190729 17:52:57.892"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:57.894" endtime="20190729 17:52:57.898"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:52:58.902" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:52:57.900" endtime="20190729 17:52:58.904"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:57.682" endtime="20190729 17:52:58.904"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:52:59.114" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:52:59.122" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:52:58.907" endtime="20190729 17:52:59.123"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:52:59.125" endtime="20190729 17:52:59.129"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:00.134" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:52:59.131" endtime="20190729 17:53:00.136"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:58.905" endtime="20190729 17:53:00.136"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:00.346" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:00.348" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:00.139" endtime="20190729 17:53:00.348"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:00.350" endtime="20190729 17:53:00.354"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:01.357" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:00.355" endtime="20190729 17:53:01.358"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:00.137" endtime="20190729 17:53:01.359"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:01.564" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:01.566" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:01.360" endtime="20190729 17:53:01.567"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:01.569" endtime="20190729 17:53:01.574"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:02.578" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:01.576" endtime="20190729 17:53:02.580"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:01.359" endtime="20190729 17:53:02.580"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:02.790" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:02.792" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:02.583" endtime="20190729 17:53:02.793"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:02.795" endtime="20190729 17:53:02.799"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:03.803" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:02.801" endtime="20190729 17:53:03.805"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:02.581" endtime="20190729 17:53:03.805"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:04.016" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:04.018" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:03.808" endtime="20190729 17:53:04.019"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:04.021" endtime="20190729 17:53:04.032"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:05.036" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:04.034" endtime="20190729 17:53:05.037"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:03.806" endtime="20190729 17:53:05.038"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:05.247" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:05.249" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:05.041" endtime="20190729 17:53:05.249"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:05.251" endtime="20190729 17:53:05.254"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:06.260" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:05.257" endtime="20190729 17:53:06.261"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:05.039" endtime="20190729 17:53:06.262"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:06.471" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:06.473" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:06.264" endtime="20190729 17:53:06.473"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:06.475" endtime="20190729 17:53:06.479"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:07.483" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:06.480" endtime="20190729 17:53:07.484"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:06.263" endtime="20190729 17:53:07.485"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:07.694" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:07.696" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:07.487" endtime="20190729 17:53:07.696"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:07.698" endtime="20190729 17:53:07.702"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:08.706" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:07.704" endtime="20190729 17:53:08.708"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:07.486" endtime="20190729 17:53:08.708"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:08.917" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:08.919" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:08.711" endtime="20190729 17:53:08.920"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:08.921" endtime="20190729 17:53:08.925"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:09.929" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:08.927" endtime="20190729 17:53:09.930"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:08.709" endtime="20190729 17:53:09.931"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:10.141" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:10.143" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:09.934" endtime="20190729 17:53:10.144"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:10.145" endtime="20190729 17:53:10.150"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:11.154" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:10.152" endtime="20190729 17:53:11.156"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:09.932" endtime="20190729 17:53:11.156"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:11.366" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:11.368" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:11.159" endtime="20190729 17:53:11.368"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:11.371" endtime="20190729 17:53:11.375"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:12.379" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:11.377" endtime="20190729 17:53:12.381"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:11.157" endtime="20190729 17:53:12.381"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:12.592" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:12.593" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:12.385" endtime="20190729 17:53:12.594"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:12.596" endtime="20190729 17:53:12.600"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:13.605" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:12.602" endtime="20190729 17:53:13.607"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:12.383" endtime="20190729 17:53:13.607"></status>
</kw>
<kw name="${i} = 16" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:13.818" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:13.820" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:13.610" endtime="20190729 17:53:13.821"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:13.823" endtime="20190729 17:53:13.827"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:14.830" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:13.828" endtime="20190729 17:53:14.832"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:13.608" endtime="20190729 17:53:14.832"></status>
</kw>
<kw name="${i} = 17" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:15.042" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:15.043" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:14.835" endtime="20190729 17:53:15.044"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:15.046" endtime="20190729 17:53:15.051"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:16.055" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:15.053" endtime="20190729 17:53:16.057"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:14.833" endtime="20190729 17:53:16.057"></status>
</kw>
<kw name="${i} = 18" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:16.266" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:16.268" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:16.060" endtime="20190729 17:53:16.269"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:16.270" endtime="20190729 17:53:16.276"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:17.280" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:16.278" endtime="20190729 17:53:17.281"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:16.058" endtime="20190729 17:53:17.282"></status>
</kw>
<kw name="${i} = 19" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:17.491" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:17.493" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:17.285" endtime="20190729 17:53:17.493"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:17.496" endtime="20190729 17:53:17.499"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:18.503" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:17.501" endtime="20190729 17:53:18.505"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:17.283" endtime="20190729 17:53:18.505"></status>
</kw>
<kw name="${i} = 20" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:18.715" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:18.716" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:18.508" endtime="20190729 17:53:18.717"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:18.719" endtime="20190729 17:53:18.722"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:19.726" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:18.724" endtime="20190729 17:53:19.728"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:18.506" endtime="20190729 17:53:19.728"></status>
</kw>
<kw name="${i} = 21" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:19.938" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:19.939" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:19.731" endtime="20190729 17:53:19.940"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:19.942" endtime="20190729 17:53:19.945"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:20.949" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:19.947" endtime="20190729 17:53:20.951"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:19.729" endtime="20190729 17:53:20.951"></status>
</kw>
<kw name="${i} = 22" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:21.161" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:21.163" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:20.954" endtime="20190729 17:53:21.163"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:21.166" endtime="20190729 17:53:21.170"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:22.174" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:21.171" endtime="20190729 17:53:22.175"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:20.952" endtime="20190729 17:53:22.176"></status>
</kw>
<kw name="${i} = 23" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:22.385" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:22.386" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:22.179" endtime="20190729 17:53:22.387"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:22.389" endtime="20190729 17:53:22.392"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:23.396" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:22.394" endtime="20190729 17:53:23.398"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:22.177" endtime="20190729 17:53:23.398"></status>
</kw>
<kw name="${i} = 24" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:23.608" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:23.610" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:23.401" endtime="20190729 17:53:23.610"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:23.612" endtime="20190729 17:53:23.615"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:24.619" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:23.617" endtime="20190729 17:53:24.621"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:23.399" endtime="20190729 17:53:24.622"></status>
</kw>
<kw name="${i} = 25" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:24.831" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:24.832" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:24.624" endtime="20190729 17:53:24.833"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:24.835" endtime="20190729 17:53:24.839"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:25.843" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:24.841" endtime="20190729 17:53:25.845"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:24.623" endtime="20190729 17:53:25.846"></status>
</kw>
<kw name="${i} = 26" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:26.058" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:26.060" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:25.850" endtime="20190729 17:53:26.060"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:26.062" endtime="20190729 17:53:26.067"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:27.072" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:26.069" endtime="20190729 17:53:27.079"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:25.847" endtime="20190729 17:53:27.080"></status>
</kw>
<kw name="${i} = 27" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:27.292" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:27.293" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:27.084" endtime="20190729 17:53:27.294"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:27.295" endtime="20190729 17:53:27.299"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:28.303" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:27.301" endtime="20190729 17:53:28.305"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:27.081" endtime="20190729 17:53:28.305"></status>
</kw>
<kw name="${i} = 28" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:28.515" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:28.516" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:28.308" endtime="20190729 17:53:28.517"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:28.519" endtime="20190729 17:53:28.523"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:29.526" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:28.524" endtime="20190729 17:53:29.528"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:28.306" endtime="20190729 17:53:29.529"></status>
</kw>
<kw name="${i} = 29" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:29.742" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:29.747" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:29.531" endtime="20190729 17:53:29.748"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:29.750" endtime="20190729 17:53:29.754"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:30.758" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:29.756" endtime="20190729 17:53:30.760"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:29.530" endtime="20190729 17:53:30.760"></status>
</kw>
<kw name="${i} = 30" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:30.978" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:30.980" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:30.763" endtime="20190729 17:53:30.981"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:30.983" endtime="20190729 17:53:30.987"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:31.992" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:30.989" endtime="20190729 17:53:31.995"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:30.761" endtime="20190729 17:53:31.997"></status>
</kw>
<kw name="${i} = 31" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:32.209" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:32.211" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:32.001" endtime="20190729 17:53:32.211"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:32.213" endtime="20190729 17:53:32.216"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:33.221" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:32.218" endtime="20190729 17:53:33.222"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:31.999" endtime="20190729 17:53:33.223"></status>
</kw>
<kw name="${i} = 32" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:33.432" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:33.434" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:33.225" endtime="20190729 17:53:33.434"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:33.436" endtime="20190729 17:53:33.440"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:34.444" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:33.442" endtime="20190729 17:53:34.446"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:33.224" endtime="20190729 17:53:34.446"></status>
</kw>
<kw name="${i} = 33" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:34.656" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:34.658" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:34.449" endtime="20190729 17:53:34.658"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:34.660" endtime="20190729 17:53:34.663"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:35.667" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:34.665" endtime="20190729 17:53:35.669"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:34.447" endtime="20190729 17:53:35.669"></status>
</kw>
<kw name="${i} = 34" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:35.879" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:35.881" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:35.672" endtime="20190729 17:53:35.881"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:35.883" endtime="20190729 17:53:35.888"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:36.892" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:35.889" endtime="20190729 17:53:36.893"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:35.670" endtime="20190729 17:53:36.894"></status>
</kw>
<kw name="${i} = 35" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:37.103" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:37.105" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:36.896" endtime="20190729 17:53:37.105"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:37.107" endtime="20190729 17:53:37.111"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:38.114" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:37.112" endtime="20190729 17:53:38.116"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:36.895" endtime="20190729 17:53:38.116"></status>
</kw>
<kw name="${i} = 36" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:38.326" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:38.328" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:38.119" endtime="20190729 17:53:38.328"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:38.330" endtime="20190729 17:53:38.334"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:39.338" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:38.336" endtime="20190729 17:53:39.340"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:38.117" endtime="20190729 17:53:39.340"></status>
</kw>
<kw name="${i} = 37" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:39.549" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:39.551" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:39.343" endtime="20190729 17:53:39.551"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:39.553" endtime="20190729 17:53:39.557"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:40.561" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:39.558" endtime="20190729 17:53:40.562"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:39.341" endtime="20190729 17:53:40.563"></status>
</kw>
<kw name="${i} = 38" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:40.772" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:40.773" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:40.565" endtime="20190729 17:53:40.774"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:40.775" endtime="20190729 17:53:40.780"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:41.786" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:40.782" endtime="20190729 17:53:41.788"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:40.563" endtime="20190729 17:53:41.789"></status>
</kw>
<kw name="${i} = 39" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:42.003" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:42.005" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:41.792" endtime="20190729 17:53:42.006"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:42.007" endtime="20190729 17:53:42.011"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:43.017" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:42.013" endtime="20190729 17:53:43.018"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:41.790" endtime="20190729 17:53:43.019"></status>
</kw>
<kw name="${i} = 40" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:43.228" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:43.230" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:43.021" endtime="20190729 17:53:43.230"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:43.232" endtime="20190729 17:53:43.235"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:44.239" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:43.237" endtime="20190729 17:53:44.241"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:43.020" endtime="20190729 17:53:44.241"></status>
</kw>
<kw name="${i} = 41" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:44.451" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:44.452" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:44.244" endtime="20190729 17:53:44.453"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:44.454" endtime="20190729 17:53:44.458"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:45.462" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:44.460" endtime="20190729 17:53:45.464"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:44.242" endtime="20190729 17:53:45.464"></status>
</kw>
<kw name="${i} = 42" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:45.674" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=0;</msg>
<msg timestamp="20190729 17:53:45.675" level="INFO">${d} = 0</msg>
<status status="PASS" starttime="20190729 17:53:45.467" endtime="20190729 17:53:45.676"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:45.678" endtime="20190729 17:53:45.681"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:53:46.685" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:53:45.683" endtime="20190729 17:53:46.687"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:45.465" endtime="20190729 17:53:46.687"></status>
</kw>
<kw name="${i} = 43" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ch.re.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:53:46.897" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ch.re.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.CH.RE.ACK=1;</msg>
<msg timestamp="20190729 17:53:46.899" level="INFO">${d} = 1</msg>
<status status="PASS" starttime="20190729 17:53:46.690" endtime="20190729 17:53:46.899"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${d}'=='1'</arg>
</arguments>
<msg timestamp="20190729 17:53:46.905" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 17:53:46.901" endtime="20190729 17:53:46.906"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:46.688" endtime="20190729 17:53:46.907"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:53.976" endtime="20190729 17:53:46.907"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==99</arg>
<arg>Fail</arg>
<arg>自检结果查询失败</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:46.910" endtime="20190729 17:53:46.913"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-C1+ai.sf.ck.r=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${e}</var>
</assign>
<msg timestamp="20190729 17:53:47.200" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-C1+AI.SF.CK.R=0,0,0,0,0,0,0,0,0,1,0,0,0;</msg>
<msg timestamp="20190729 17:53:47.202" level="INFO">${e} = 0,0,0,0,0,0,0,0,0,1,0,0,0</msg>
<status status="PASS" starttime="20190729 17:53:46.915" endtime="20190729 17:53:47.203"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${e}'!='0,0,0,0,0,0,0,0,0,1,0,0,0'</arg>
<arg>Fail</arg>
<arg>自检失败</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:47.205" endtime="20190729 17:53:47.210"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>${e}</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:47.212" endtime="20190729 17:53:47.216"></status>
</kw>
<kw name="${i} IN RANGE [ 6 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.fom.nt=01</arg>
<arg>IOT</arg>
</arguments>
<msg timestamp="20190729 17:53:47.504" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.fom.nt=01
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.FOM.NT=successful;</msg>
<status status="PASS" starttime="20190729 17:53:47.221" endtime="20190729 17:53:47.506"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190729 17:53:52.510" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190729 17:53:47.508" endtime="20190729 17:53:52.512"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ai.fom.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190729 17:53:52.721" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ai.fom.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.AI.FOM.ACK=0;</msg>
<msg timestamp="20190729 17:53:52.722" level="INFO">${f} = 0</msg>
<status status="PASS" starttime="20190729 17:53:52.513" endtime="20190729 17:53:52.723"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${f}'=='2'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:52.725" endtime="20190729 17:53:52.728"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:47.219" endtime="20190729 17:53:52.729"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-V1+ai.fom.nt=01</arg>
<arg>IOT</arg>
</arguments>
<msg timestamp="20190729 17:53:53.024" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-V1+ai.fom.nt=01
应该收到串口数据: IOT
实际接收到的数据:  IOT-V1+AI.FOM.NT=successful;</msg>
<status status="PASS" starttime="20190729 17:53:52.731" endtime="20190729 17:53:53.025"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20190729 17:53:58.029" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190729 17:53:53.027" endtime="20190729 17:53:58.030"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT-S1+ai.m.ai.fom.ack=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${f}</var>
</assign>
<msg timestamp="20190729 17:53:58.240" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT-S1+ai.m.ai.fom.ack=?
应该收到串口数据: IOT
实际接收到的数据:  IOT-S1+AI.M.AI.FOM.ACK=2;</msg>
<msg timestamp="20190729 17:53:58.241" level="INFO">${f} = 2</msg>
<status status="PASS" starttime="20190729 17:53:58.032" endtime="20190729 17:53:58.242"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${f}'=='2'</arg>
</arguments>
<msg timestamp="20190729 17:53:58.246" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 17:53:58.244" endtime="20190729 17:53:58.248"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:52.730" endtime="20190729 17:53:58.248"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:47.217" endtime="20190729 17:53:58.249"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==5</arg>
<arg>Fail</arg>
<arg>SD卡格式化失败</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:58.251" endtime="20190729 17:53:58.259"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:58.264" endtime="20190729 17:53:58.267"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:53.963" endtime="20190729 17:53:58.268" critical="yes"></status>
</test>
<test id="s1-t7" name="TS06_电容">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${CAP_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:58.295" endtime="20190729 17:53:58.304"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-crt</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 17:53:58.547" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-crt
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)pwr err: handle is exist.</msg>
<status status="PASS" starttime="20190729 17:53:58.306" endtime="20190729 17:53:58.548"></status>
</kw>
<kw name="${i} IN RANGE [ 180 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 17:53:58.849" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1256,**pwr:13828|13828,*batt:3930|3929,*bntc:1582|1582,*gnss:2803|2803,*adc1:0|0,*adc2:0|0,*sos1:4243|4243,*sos2:4238|4238,*scap:7011|7020;</msg>
<msg timestamp="20190729 17:53:58.850" level="INFO">${a} = adc_drv chn:9,calib:1,cnv:1256,**pwr:13828|13828,*batt:3930|3929,*bntc:1582|1582,*gnss:2803|2803,*adc1:0|0,*adc2:0|0,*sos1:4243|4243,*sos2:4238|4238,*scap:7011|7020;</msg>
<status status="PASS" starttime="20190729 17:53:58.551" endtime="20190729 17:53:58.851"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 17:53:58.855" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1256', '**pwr', '13828', '13828', '*batt', '3930', '3929', '*bntc', '1582', '1582', '*gnss', '2803', '2803', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4243', '4243', '*sos2', '4238', '4238', '*scap', '7011', '7020', '']</msg>
<msg timestamp="20190729 17:53:58.856" level="INFO">${b} = 7011</msg>
<status status="PASS" starttime="20190729 17:53:58.852" endtime="20190729 17:53:58.856"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${b})</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 17:53:58.859" level="INFO">${b} = 7011</msg>
<status status="PASS" starttime="20190729 17:53:58.857" endtime="20190729 17:53:58.859"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${b}&gt;6500 or ${b}&lt;1000</arg>
</arguments>
<msg timestamp="20190729 17:53:58.862" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 17:53:58.860" endtime="20190729 17:53:58.863"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:58.550" endtime="20190729 17:53:58.863"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:58.549" endtime="20190729 17:53:58.863"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==99 or ${b}&lt;4500</arg>
<arg>Fail</arg>
<arg>电容电压不足</arg>
</arguments>
<status status="PASS" starttime="20190729 17:53:58.865" endtime="20190729 17:53:58.867"></status>
</kw>
<kw name="Power KL30 Close" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 17:53:58.869" endtime="20190729 17:53:58.871"></status>
</kw>
<kw name="Power KL15 Close" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 17:53:58.873" endtime="20190729 17:53:58.876"></status>
</kw>
<kw name="Exp Timestamp" library="EXP">
<assign>
<var>${time1}</var>
</assign>
<msg timestamp="20190729 17:53:58.879" level="INFO">${time1} = 1564394038</msg>
<status status="PASS" starttime="20190729 17:53:58.878" endtime="20190729 17:53:58.880"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-crt</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 17:53:59.152" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-crt
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)pwr err: handle is exist.</msg>
<status status="PASS" starttime="20190729 17:53:58.881" endtime="20190729 17:53:59.154"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)gpi-crt-chn30-tick1000-wakv1</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 17:53:59.455" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)gpi-crt-chn30-tick1000-wakv1
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)gpi callback, handle:0x1FFF45AC, sta_calb:0.</msg>
<status status="PASS" starttime="20190729 17:53:59.156" endtime="20190729 17:53:59.456"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)gpi-opn-chn30</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 17:53:59.757" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)gpi-opn-chn30
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)gpi open, handle:0x1FFF45AC, ret:0.</msg>
<status status="PASS" starttime="20190729 17:53:59.458" endtime="20190729 17:53:59.758"></status>
</kw>
<kw name="${i} IN RANGE [ 30 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 17:54:00.461" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:123800.</msg>
<msg timestamp="20190729 17:54:00.463" level="INFO">${a} = dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:123800.</msg>
<status status="PASS" starttime="20190729 17:53:59.761" endtime="20190729 17:54:00.463"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 17:54:00.469" level="INFO">['dsmin', '', 'value', '02', '', 'inter_type', '01', '', 'dect', '00', '', 'inter_cnt', '1', '', 'keep_tim', '123800.']</msg>
<msg timestamp="20190729 17:54:00.470" level="INFO">${b} = 02</msg>
<status status="PASS" starttime="20190729 17:54:00.465" endtime="20190729 17:54:00.471"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:54:00.473" endtime="20190729 17:54:00.477"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:54:01.481" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:54:00.479" endtime="20190729 17:54:01.483"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:59.760" endtime="20190729 17:54:01.483"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 17:54:02.494" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:123800.</msg>
<msg timestamp="20190729 17:54:02.495" level="INFO">${a} = dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:123800.</msg>
<status status="PASS" starttime="20190729 17:54:01.486" endtime="20190729 17:54:02.496"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 17:54:02.501" level="INFO">['dsmin', '', 'value', '02', '', 'inter_type', '01', '', 'dect', '00', '', 'inter_cnt', '1', '', 'keep_tim', '123800.']</msg>
<msg timestamp="20190729 17:54:02.502" level="INFO">${b} = 02</msg>
<status status="PASS" starttime="20190729 17:54:02.498" endtime="20190729 17:54:02.503"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:54:02.505" endtime="20190729 17:54:02.509"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:54:03.514" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:54:02.511" endtime="20190729 17:54:03.516"></status>
</kw>
<status status="PASS" starttime="20190729 17:54:01.484" endtime="20190729 17:54:03.517"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 17:54:04.529" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:123800.</msg>
<msg timestamp="20190729 17:54:04.532" level="INFO">${a} = dsmin, value:02, inter_type:01, dect:00, inter_cnt:1, keep_tim:123800.</msg>
<status status="PASS" starttime="20190729 17:54:03.521" endtime="20190729 17:54:04.532"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 17:54:04.540" level="INFO">['dsmin', '', 'value', '02', '', 'inter_type', '01', '', 'dect', '00', '', 'inter_cnt', '1', '', 'keep_tim', '123800.']</msg>
<msg timestamp="20190729 17:54:04.541" level="INFO">${b} = 02</msg>
<status status="PASS" starttime="20190729 17:54:04.535" endtime="20190729 17:54:04.542"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:54:04.543" endtime="20190729 17:54:04.547"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:54:05.558" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:54:04.549" endtime="20190729 17:54:05.560"></status>
</kw>
<status status="PASS" starttime="20190729 17:54:03.519" endtime="20190729 17:54:05.561"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 17:54:05.772" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:02, inter_type:01, dect:00, inter_cnt:3, keep_tim:0.</msg>
<msg timestamp="20190729 17:54:05.773" level="INFO">${a} = dsmin, value:02, inter_type:01, dect:00, inter_cnt:3, keep_tim:0.</msg>
<status status="PASS" starttime="20190729 17:54:05.564" endtime="20190729 17:54:05.773"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 17:54:05.776" level="INFO">['dsmin', '', 'value', '02', '', 'inter_type', '01', '', 'dect', '00', '', 'inter_cnt', '3', '', 'keep_tim', '0.']</msg>
<msg timestamp="20190729 17:54:05.777" level="INFO">${b} = 02</msg>
<status status="PASS" starttime="20190729 17:54:05.774" endtime="20190729 17:54:05.777"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<status status="PASS" starttime="20190729 17:54:05.778" endtime="20190729 17:54:05.780"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190729 17:54:06.782" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190729 17:54:05.781" endtime="20190729 17:54:06.784"></status>
</kw>
<status status="PASS" starttime="20190729 17:54:05.562" endtime="20190729 17:54:06.785"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>FF</arg>
<arg>dsmin</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 17:54:07.595" level="INFO">('127.0.0.1', 2560)
发送串口数据: FF
应该收到串口数据: dsmin
实际接收到的数据:  dsmin, value:01, inter_type:02, dect:00, inter_cnt:4, keep_tim:0.</msg>
<msg timestamp="20190729 17:54:07.597" level="INFO">${a} = dsmin, value:01, inter_type:02, dect:00, inter_cnt:4, keep_tim:0.</msg>
<status status="PASS" starttime="20190729 17:54:06.787" endtime="20190729 17:54:07.597"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>value</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 17:54:07.604" level="INFO">['dsmin', '', 'value', '01', '', 'inter_type', '02', '', 'dect', '00', '', 'inter_cnt', '4', '', 'keep_tim', '0.']</msg>
<msg timestamp="20190729 17:54:07.606" level="INFO">${b} = 01</msg>
<status status="PASS" starttime="20190729 17:54:07.600" endtime="20190729 17:54:07.607"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${b}'=='01'</arg>
</arguments>
<msg timestamp="20190729 17:54:07.613" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190729 17:54:07.609" endtime="20190729 17:54:07.615"></status>
</kw>
<status status="PASS" starttime="20190729 17:54:06.786" endtime="20190729 17:54:07.616"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:59.759" endtime="20190729 17:54:07.618"></status>
</kw>
<kw name="Power KL30 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 17:54:07.620" endtime="20190729 17:54:07.623"></status>
</kw>
<kw name="Power KL30 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 17:54:07.626" endtime="20190729 17:54:07.628"></status>
</kw>
<kw name="Exp Timestamp" library="EXP">
<assign>
<var>${time2}</var>
</assign>
<msg timestamp="20190729 17:54:07.638" level="INFO">${time2} = 1564394047</msg>
<status status="PASS" starttime="20190729 17:54:07.634" endtime="20190729 17:54:07.640"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)gpi-cls-chn30</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 17:54:08.698" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)gpi-cls-chn30
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)gpi inter callback, handle:0x1FFF45AC, name:dsmin, value:02, inter_type:01, dect:00, inter_cnt:5, keep_tim:0.</msg>
<status status="PASS" starttime="20190729 17:54:07.643" endtime="20190729 17:54:08.700"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${time2}-${time1}</arg>
</arguments>
<assign>
<var>${time3}</var>
</assign>
<msg timestamp="20190729 17:54:08.708" level="INFO">${time3} = 9</msg>
<status status="PASS" starttime="20190729 17:54:08.703" endtime="20190729 17:54:08.709"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${time3}&lt;${dianrong}</arg>
<arg>Fail</arg>
<arg>error</arg>
</arguments>
<status status="PASS" starttime="20190729 17:54:08.712" endtime="20190729 17:54:08.716"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-crt</arg>
<arg>(bsp)</arg>
</arguments>
<msg timestamp="20190729 17:54:09.001" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-crt
应该收到串口数据: (bsp)
实际接收到的数据:  (bsp)pwr err: handle is exist.</msg>
<status status="PASS" starttime="20190729 17:54:08.720" endtime="20190729 17:54:09.003"></status>
</kw>
<kw name="${i} IN RANGE [ 2 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 17:54:09.308" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1358,**pwr:13864|13864,*batt:3900|3900,*bntc:1568|1567,*gnss:2803|2803,*adc1:0|0,*adc2:0|0,*sos1:4243|4243,*sos2:4238|4238,*scap:4547|4547;</msg>
<msg timestamp="20190729 17:54:09.310" level="INFO">${a} = adc_drv chn:9,calib:1,cnv:1358,**pwr:13864|13864,*batt:3900|3900,*bntc:1568|1567,*gnss:2803|2803,*adc1:0|0,*adc2:0|0,*sos1:4243|4243,*sos2:4238|4238,*scap:4547|4547;</msg>
<status status="PASS" starttime="20190729 17:54:09.009" endtime="20190729 17:54:09.311"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 17:54:09.319" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1358', '**pwr', '13864', '13864', '*batt', '3900', '3900', '*bntc', '1568', '1567', '*gnss', '2803', '2803', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4243', '4243', '*sos2', '4238', '4238', '*scap', '4547', '4547', '']</msg>
<msg timestamp="20190729 17:54:09.321" level="INFO">${b} = 4547</msg>
<status status="PASS" starttime="20190729 17:54:09.313" endtime="20190729 17:54:09.321"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${b})</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 17:54:09.328" level="INFO">${b} = 4547</msg>
<status status="PASS" starttime="20190729 17:54:09.323" endtime="20190729 17:54:09.328"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${b}&gt;6900</arg>
</arguments>
<status status="PASS" starttime="20190729 17:54:09.330" endtime="20190729 17:54:09.334"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190729 17:54:13.339" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20190729 17:54:09.336" endtime="20190729 17:54:13.341"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 17:54:13.551" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1399,**pwr:13855|13846,*batt:3906|3906,*bntc:1568|1568,*gnss:2803|2803,*adc1:0|0,*adc2:0|0,*sos1:4243|4243,*sos2:4238|4238,*scap:4680|4671;</msg>
<msg timestamp="20190729 17:54:13.553" level="INFO">${c} = adc_drv chn:9,calib:1,cnv:1399,**pwr:13855|13846,*batt:3906|3906,*bntc:1568|1568,*gnss:2803|2803,*adc1:0|0,*adc2:0|0,*sos1:4243|4243,*sos2:4238|4238,*scap:4680|4671;</msg>
<status status="PASS" starttime="20190729 17:54:13.343" endtime="20190729 17:54:13.554"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${c}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:54:13.559" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1399', '**pwr', '13855', '13846', '*batt', '3906', '3906', '*bntc', '1568', '1568', '*gnss', '2803', '2803', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4243', '4243', '*sos2', '4238', '4238', '*scap', '4680', '4671', '']</msg>
<msg timestamp="20190729 17:54:13.560" level="INFO">${d} = 4680</msg>
<status status="PASS" starttime="20190729 17:54:13.556" endtime="20190729 17:54:13.561"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${d})</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:54:13.566" level="INFO">${d} = 4680</msg>
<status status="PASS" starttime="20190729 17:54:13.562" endtime="20190729 17:54:13.566"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${d}&lt;=${b}</arg>
<arg>Fail</arg>
<arg>电容未充电</arg>
</arguments>
<status status="PASS" starttime="20190729 17:54:13.568" endtime="20190729 17:54:13.572"></status>
</kw>
<status status="PASS" starttime="20190729 17:54:09.007" endtime="20190729 17:54:13.572"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190729 17:54:13.854" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1402,**pwr:13855|13846,*batt:3906|3906,*bntc:1568|1568,*gnss:2803|2803,*adc1:0|0,*adc2:0|0,*sos1:4243|4243,*sos2:4238|4238,*scap:4689|4689;</msg>
<msg timestamp="20190729 17:54:13.855" level="INFO">${a} = adc_drv chn:9,calib:1,cnv:1402,**pwr:13855|13846,*batt:3906|3906,*bntc:1568|1568,*gnss:2803|2803,*adc1:0|0,*adc2:0|0,*sos1:4243|4243,*sos2:4238|4238,*scap:4689|4689;</msg>
<status status="PASS" starttime="20190729 17:54:13.575" endtime="20190729 17:54:13.856"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 17:54:13.861" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1402', '**pwr', '13855', '13846', '*batt', '3906', '3906', '*bntc', '1568', '1568', '*gnss', '2803', '2803', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4243', '4243', '*sos2', '4238', '4238', '*scap', '4689', '4689', '']</msg>
<msg timestamp="20190729 17:54:13.862" level="INFO">${b} = 4689</msg>
<status status="PASS" starttime="20190729 17:54:13.858" endtime="20190729 17:54:13.862"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${b})</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190729 17:54:13.867" level="INFO">${b} = 4689</msg>
<status status="PASS" starttime="20190729 17:54:13.864" endtime="20190729 17:54:13.868"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${b}&gt;6900</arg>
</arguments>
<status status="PASS" starttime="20190729 17:54:13.870" endtime="20190729 17:54:13.873"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20190729 17:54:17.877" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20190729 17:54:13.874" endtime="20190729 17:54:17.878"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(bsp)pwr-tra-adc_drv</arg>
<arg>adc_drv</arg>
</arguments>
<assign>
<var>${c}</var>
</assign>
<msg timestamp="20190729 17:54:18.087" level="INFO">('127.0.0.1', 2560)
发送串口数据: (bsp)pwr-tra-adc_drv
应该收到串口数据: adc_drv
实际接收到的数据:  adc_drv chn:9,calib:1,cnv:1443,**pwr:13748|13739,*batt:3910|3910,*bntc:1569|1569,*gnss:2803|2803,*adc1:0|0,*adc2:0|0,*sos1:4243|4243,*sos2:4238|4238,*scap:4822|4813;</msg>
<msg timestamp="20190729 17:54:18.089" level="INFO">${c} = adc_drv chn:9,calib:1,cnv:1443,**pwr:13748|13739,*batt:3910|3910,*bntc:1569|1569,*gnss:2803|2803,*adc1:0|0,*adc2:0|0,*sos1:4243|4243,*sos2:4238|4238,*scap:4822|4813;</msg>
<status status="PASS" starttime="20190729 17:54:17.880" endtime="20190729 17:54:18.089"></status>
</kw>
<kw name="Exp Flag More Query" library="EXP">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${c}</arg>
<arg>*scap</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:54:18.094" level="INFO">['adc_drv', 'chn', '9', 'calib', '1', 'cnv', '1443', '**pwr', '13748', '13739', '*batt', '3910', '3910', '*bntc', '1569', '1569', '*gnss', '2803', '2803', '*adc1', '0', '0', '*adc2', '0', '0', '*sos1', '4243', '4243', '*sos2', '4238', '4238', '*scap', '4822', '4813', '']</msg>
<msg timestamp="20190729 17:54:18.095" level="INFO">${d} = 4822</msg>
<status status="PASS" starttime="20190729 17:54:18.091" endtime="20190729 17:54:18.096"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int(${d})</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190729 17:54:18.101" level="INFO">${d} = 4822</msg>
<status status="PASS" starttime="20190729 17:54:18.097" endtime="20190729 17:54:18.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${d}&lt;=${b}</arg>
<arg>Fail</arg>
<arg>电容未充电</arg>
</arguments>
<status status="PASS" starttime="20190729 17:54:18.104" endtime="20190729 17:54:18.107"></status>
</kw>
<status status="PASS" starttime="20190729 17:54:13.573" endtime="20190729 17:54:18.108"></status>
</kw>
<status status="PASS" starttime="20190729 17:54:09.005" endtime="20190729 17:54:18.108"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>TS10_电容</arg>
<arg>PASS</arg>
</arguments>
<status status="PASS" starttime="20190729 17:54:18.111" endtime="20190729 17:54:18.116"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 17:54:18.120" endtime="20190729 17:54:18.123"></status>
</kw>
<status status="PASS" starttime="20190729 17:53:58.274" endtime="20190729 17:54:18.124" critical="yes"></status>
</test>
<test id="s1-t8" name="IOT_型号日期设置">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${DATA_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<msg timestamp="20190729 17:54:18.172" level="INFO">Execution passed with message:
此项不测试</msg>
<status status="PASS" starttime="20190729 17:54:18.164" endtime="20190729 17:54:18.174"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 17:54:18.182" endtime="20190729 17:54:18.188"></status>
</kw>
<status status="PASS" starttime="20190729 17:54:18.133" endtime="20190729 17:54:18.191" critical="yes">此项不测试</status>
</test>
<test id="s1-t9" name="IOT_PID设置">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>${PID_TEST}==0</arg>
<arg>此项不测试</arg>
</arguments>
<msg timestamp="20190729 17:54:18.215" level="INFO">Execution passed with message:
此项不测试</msg>
<status status="PASS" starttime="20190729 17:54:18.212" endtime="20190729 17:54:18.215"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 17:54:18.219" endtime="20190729 17:54:18.223"></status>
</kw>
<status status="PASS" starttime="20190729 17:54:18.203" endtime="20190729 17:54:18.224" critical="yes">此项不测试</status>
</test>
<test id="s1-t10" name="GET_END">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+L1+nw.e01.r01.ic=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${ICCID_}</var>
</assign>
<msg timestamp="20190729 17:54:18.441" level="INFO">('127.0.0.1', 2560)
发送串口数据: IOT+L1+nw.e01.r01.ic=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+L1+NW.E01.R01.IC=89860919730029416685;</msg>
<msg timestamp="20190729 17:54:18.442" level="INFO">${ICCID_} = 89860919730029416685</msg>
<status status="PASS" starttime="20190729 17:54:18.234" endtime="20190729 17:54:18.442"></status>
</kw>
<kw name="Get Local Time" library="EXP">
<assign>
<var>${time2}</var>
</assign>
<msg timestamp="20190729 17:54:18.445" level="INFO">${time2} = 2019-07-29 17:54:18</msg>
<status status="PASS" starttime="20190729 17:54:18.443" endtime="20190729 17:54:18.445"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>结束时间:${time2}</arg>
</arguments>
<status status="PASS" starttime="20190729 17:54:18.446" endtime="20190729 17:54:18.449"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>${ICCID_}</arg>
</arguments>
<status status="PASS" starttime="20190729 17:54:18.451" endtime="20190729 17:54:18.455"></status>
</kw>
<kw name="Txtrwx Mid File Write" library="Txtrwx">
<arguments>
<arg>***************************************************************************************</arg>
</arguments>
<status status="PASS" starttime="20190729 17:54:18.458" endtime="20190729 17:54:18.461"></status>
</kw>
<kw name="Txtrwx Transfer" library="Txtrwx">
<arguments>
<arg>/home/pi/production/mid.txt</arg>
<arg>/home/pi/production/log/整机测试日志.txt</arg>
</arguments>
<status status="PASS" starttime="20190729 17:54:18.463" endtime="20190729 17:54:18.466"></status>
</kw>
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/production/mid.txt</arg>
</arguments>
<status status="PASS" starttime="20190729 17:54:18.468" endtime="20190729 17:54:18.539"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190729 17:54:18.542" endtime="20190729 17:54:18.545"></status>
</kw>
<status status="PASS" starttime="20190729 17:54:18.229" endtime="20190729 17:54:18.545" critical="yes"></status>
</test>
<kw name="clear" type="teardown">
<kw name="Txtrwx Delet" library="Txtrwx">
<arguments>
<arg>/home/pi/production/mid.txt</arg>
</arguments>
<msg timestamp="20190729 17:54:18.572" level="INFO">文件不存在</msg>
<status status="PASS" starttime="20190729 17:54:18.567" endtime="20190729 17:54:18.575"></status>
</kw>
<kw name="Power KL30 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 17:54:18.578" endtime="20190729 17:54:18.580"></status>
</kw>
<kw name="Power KL15 Open" library="Power">
<doc>功能:</doc>
<status status="PASS" starttime="20190729 17:54:18.581" endtime="20190729 17:54:18.583"></status>
</kw>
<status status="PASS" starttime="20190729 17:54:18.563" endtime="20190729 17:54:18.585"></status>
</kw>
<status status="PASS" starttime="20190729 17:52:11.716" endtime="20190729 17:54:18.586"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="Ai Test">Ai Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
