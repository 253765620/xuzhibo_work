<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.7.0 on linux)" generated="20190525 02:39:55.012">
<suite id="s1" name="Ai Test" source="/home/pi/production/case/ai_test.txt">
<test id="s1-t1" name="GET_Ready">
<kw name="Get Local Time" library="Utils">
<assign>
<var>${time1}</var>
</assign>
<msg timestamp="20190525 02:39:55.499" level="INFO">${time1} = 1558723195.4985018</msg>
<status status="PASS" starttime="20190525 02:39:55.497" endtime="20190525 02:39:55.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${time1}</arg>
</arguments>
<msg timestamp="20190525 02:39:55.502" level="INFO">${time1} = 1558723195.4985018</msg>
<status status="PASS" starttime="20190525 02:39:55.501" endtime="20190525 02:39:55.503"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>开始时间:${time1}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:39:55.504" endtime="20190525 02:39:55.507"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190525 02:39:55.509" endtime="20190525 02:39:55.510"></status>
</kw>
<status status="PASS" starttime="20190525 02:39:55.493" endtime="20190525 02:39:55.511" critical="yes"></status>
</test>
<test id="s1-t2" name="abox自检+设置pid">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1+N.SN=?</arg>
<arg>IOT+D3</arg>
</arguments>
<assign>
<var>${is_have_pid}</var>
</assign>
<msg timestamp="20190525 02:39:55.728" level="INFO">发送串口数据: IOT+D1+N.SN=?
应该收到串口数据: IOT+D3
实际接收到的数据:  IOT+D3+N.SN=;</msg>
<msg timestamp="20190525 02:39:55.729" level="INFO">${is_have_pid} = </msg>
<status status="PASS" starttime="20190525 02:39:55.523" endtime="20190525 02:39:55.729"></status>
</kw>
<kw name="Length" library="Utils">
<arguments>
<arg>${is_have_pid}</arg>
</arguments>
<assign>
<var>${lenpid}</var>
</assign>
<msg timestamp="20190525 02:39:55.732" level="INFO">${lenpid} = 0</msg>
<status status="PASS" starttime="20190525 02:39:55.730" endtime="20190525 02:39:55.732"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenpid}&gt;1</arg>
<arg>Fail</arg>
<arg>PID不为空</arg>
</arguments>
<status status="PASS" starttime="20190525 02:39:55.733" endtime="20190525 02:39:55.735"></status>
</kw>
<kw name="${i} IN RANGE [ 20 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+ai.m.con.st=?</arg>
<arg>IOT+S1+AI.M.CON.ST</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190525 02:39:56.030" level="INFO">发送串口数据: IOT+S1+ai.m.con.st=?
应该收到串口数据: IOT+S1+AI.M.CON.ST
实际接收到的数据:  IOT+S1+AI.M.CON.ST=1;</msg>
<msg timestamp="20190525 02:39:56.031" level="INFO">${k} = 1</msg>
<status status="PASS" starttime="20190525 02:39:55.738" endtime="20190525 02:39:56.031"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k}'=='1'</arg>
</arguments>
<msg timestamp="20190525 02:39:56.034" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190525 02:39:56.032" endtime="20190525 02:39:56.034"></status>
</kw>
<status status="PASS" starttime="20190525 02:39:55.737" endtime="20190525 02:39:56.035"></status>
</kw>
<status status="PASS" starttime="20190525 02:39:55.736" endtime="20190525 02:39:56.035"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==19</arg>
<arg>fail</arg>
<arg>IOT+S1+ai.m.con.st失败</arg>
</arguments>
<status status="PASS" starttime="20190525 02:39:56.036" endtime="20190525 02:39:56.038"></status>
</kw>
<kw name="Ai Test" library="NetTest">
<doc>- aibox自检的测试用例</doc>
<msg timestamp="20190525 02:41:28.938" level="INFO">发送串口数据: (CESHI)DSMCORE FACTORY-LOCK
应该收到串口数据: (CESHI)
实际接收到的数据:  (CESHI)DSMCORE FACTORY LOCKED;

发送串口数据: (CESHI)DSMCORE FACTORY-P0000000000000110
应该收到串口数据: (CESHI)
实际接收到的数据:  (CESHI)GOING;

发送串口数据: IOT+V1+ai.self.check=1
应该收到串口数据: IOT
实际接收到的数据:  IOT+V1+AI.SELF.CHECK=successful;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=0,0,0,0,0,0,0,0,0,1,0;

['0', '0', '0', '0', '0', '0', '0', '1', '0']
测试全部通过
发送串口数据: (CESHI)DSMCORE FACTORY-P0000000000000111
应该收到串口数据: (CESHI)
实际接收到的数据:  (CESHI)GOING;

发送串口数据: (CESHI)DSMCORE FACTORY-UNLOCK
应该收到串口数据: (CESHI)
实际接收到的数据:  (CESHI)DSMCORE FACTORY UNLOCKED;</msg>
<status status="PASS" starttime="20190525 02:39:56.039" endtime="20190525 02:41:28.942"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20190525 02:41:30.946" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190525 02:41:28.944" endtime="20190525 02:41:30.948"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+V1+ai.fom.nt=01</arg>
<arg>IOT+V1+AI.FOM.NT=successful</arg>
</arguments>
<msg timestamp="20190525 02:41:31.155" level="INFO">发送串口数据: IOT+V1+ai.fom.nt=01
应该收到串口数据: IOT+V1+AI.FOM.NT=successful
实际接收到的数据:  IOT+V1+AI.FOM.NT=successful;</msg>
<status status="PASS" starttime="20190525 02:41:30.950" endtime="20190525 02:41:31.156"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190525 02:41:32.159" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190525 02:41:31.157" endtime="20190525 02:41:32.160"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+ai.m.ai.fom.ack=?</arg>
<arg>IOT+S1+AI.M.AI.FOM.ACK=2</arg>
</arguments>
<msg timestamp="20190525 02:41:35.575" level="INFO">发送串口数据: IOT+S1+ai.m.ai.fom.ack=?
应该收到串口数据: IOT+S1+AI.M.AI.FOM.ACK=2
num 0, time: 2019-05-25 02:41:32
实际接收到的数据:  IOT+S1+AI.M.AI.FOM.ACK=2;</msg>
<status status="PASS" starttime="20190525 02:41:32.163" endtime="20190525 02:41:35.575"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(CESHI)MODEM INFO</arg>
<arg>(CESHI)MODEM</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190525 02:41:35.877" level="INFO">发送串口数据: (CESHI)MODEM INFO
应该收到串口数据: (CESHI)MODEM
实际接收到的数据:  (CESHI)MODEM 0,0,33,EC20F_CEFAGR06A01M4G_HL_BETA0404;DRV:V0.2 2018-2-8,Gprs;USIM:Ready,00;COPS:255|255,CHN-UNICOM;ICCID:89860918710006540682;IMSI:460099501781395;IMEI:861529043679022;LAC_SID:22291;CID_NID:214416149;BID:0;LOCALIP:10.7.152.48;BOARD:Ready,Tim2;PPP:Ready,Con2,ITIM28;MAINLNK0:Tcp,UseMajor,Error,Try4,OTIM1;MAINLNK1:Tcp,UseMajor,Error,Try3,OTIM1;MAINLNK2:None,UseMajor,Error,Try0,OTIM1;TCPFST:Close;UDPFST:Close;RFTEST:0;CONFAIL:0;EDISCNT:2;ANT0:2|1785|0;ANT1:2|1788|1;QX:1,Try0;</msg>
<msg timestamp="20190525 02:41:35.878" level="INFO">${a} = (CESHI)MODEM 0,0,33,EC20F_CEFAGR06A01M4G_HL_BETA0404;DRV:V0.2 2018-2-8,Gprs;USIM:Ready,00;COPS:255|255,CHN-UNICOM;ICCID:89860918710006540682;IMSI:460099501781395;IMEI:861529043679022;LAC_SID:22291;CID...</msg>
<status status="PASS" starttime="20190525 02:41:35.577" endtime="20190525 02:41:35.878"></status>
</kw>
<kw name="Get Flag 1" library="Utils">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>IMEI</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${IMEI}</var>
</assign>
<msg timestamp="20190525 02:41:35.882" level="INFO">['(CESHI)MODEM', '0', '0', '33', 'EC20F_CEFAGR06A01M4G_HL_BETA0404', 'DRV', 'V0.2', '2018-2-8', 'Gprs', 'USIM', 'Ready', '00', 'COPS', '255|255', 'CHN-UNICOM', 'ICCID', '89860918710006540682', 'IMSI', '460099501781395', 'IMEI', '861529043679022', 'LAC_SID', '22291', 'CID_NID', '214416149', 'BID', '0', 'LOCALIP', '10.7.152.48', 'BOARD', 'Ready', 'Tim2', 'PPP', 'Ready', 'Con2', 'ITIM28', 'MAINLNK0', 'Tcp', 'UseMajor', 'Error', 'Try4', 'OTIM1', 'MAINLNK1', 'Tcp', 'UseMajor', 'Error', 'Try3', 'OTIM1', 'MAINLNK2', 'None', 'UseMajor', 'Error', 'Try0', 'OTIM1', 'TCPFST', 'Close', 'UDPFST', 'Close', 'RFTEST', '0', 'CONFAIL', '0', 'EDISCNT', '2', 'ANT0', '2|1785|0', 'ANT1', '2|1788|1', 'QX', '1', 'Try0', '']</msg>
<msg timestamp="20190525 02:41:35.883" level="INFO">${IMEI} = 861529043679022</msg>
<status status="PASS" starttime="20190525 02:41:35.879" endtime="20190525 02:41:35.883"></status>
</kw>
<kw name="Get Flag 1" library="Utils">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>ICCID</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190525 02:41:35.886" level="INFO">['(CESHI)MODEM', '0', '0', '33', 'EC20F_CEFAGR06A01M4G_HL_BETA0404', 'DRV', 'V0.2', '2018-2-8', 'Gprs', 'USIM', 'Ready', '00', 'COPS', '255|255', 'CHN-UNICOM', 'ICCID', '89860918710006540682', 'IMSI', '460099501781395', 'IMEI', '861529043679022', 'LAC_SID', '22291', 'CID_NID', '214416149', 'BID', '0', 'LOCALIP', '10.7.152.48', 'BOARD', 'Ready', 'Tim2', 'PPP', 'Ready', 'Con2', 'ITIM28', 'MAINLNK0', 'Tcp', 'UseMajor', 'Error', 'Try4', 'OTIM1', 'MAINLNK1', 'Tcp', 'UseMajor', 'Error', 'Try3', 'OTIM1', 'MAINLNK2', 'None', 'UseMajor', 'Error', 'Try0', 'OTIM1', 'TCPFST', 'Close', 'UDPFST', 'Close', 'RFTEST', '0', 'CONFAIL', '0', 'EDISCNT', '2', 'ANT0', '2|1785|0', 'ANT1', '2|1788|1', 'QX', '1', 'Try0', '']</msg>
<msg timestamp="20190525 02:41:35.886" level="INFO">${b} = 89860918710006540682</msg>
<status status="PASS" starttime="20190525 02:41:35.884" endtime="20190525 02:41:35.887"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${ICCID_SIM['${b}']}</arg>
</arguments>
<assign>
<var>${sim}</var>
</assign>
<msg timestamp="20190525 02:41:35.891" level="INFO">${sim} = 8614619911775</msg>
<status status="PASS" starttime="20190525 02:41:35.888" endtime="20190525 02:41:35.892"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1150511+WA.SIM=${ICCID_SIM['${b}']}</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190525 02:41:36.179" level="INFO">发送串口数据: IOT+D1150511+WA.SIM=8614619911775
应该收到串口数据: IOT
实际接收到的数据:  IOT+D1150511+WA.SIM=8614619911775;</msg>
<msg timestamp="20190525 02:41:36.181" level="INFO">${d} = 8614619911775</msg>
<status status="PASS" starttime="20190525 02:41:35.893" endtime="20190525 02:41:36.181"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${ICCID_SIM['${b}']}</arg>
</arguments>
<assign>
<var>${sim1}</var>
</assign>
<msg timestamp="20190525 02:41:36.188" level="INFO">${sim1} = 8614619911775</msg>
<status status="PASS" starttime="20190525 02:41:36.183" endtime="20190525 02:41:36.188"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${sim}'!='${d}'</arg>
<arg>fail</arg>
<arg>sim查询错误</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:36.191" endtime="20190525 02:41:36.194"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1150511+N.SN=${pid_start}</arg>
<arg>IOT+D1150511+N.SN=${pid_start}</arg>
</arguments>
<msg timestamp="20190525 02:41:36.481" level="INFO">发送串口数据: IOT+D1150511+N.SN=6914407
应该收到串口数据: IOT+D1150511+N.SN=6914407
实际接收到的数据:  IOT+D1150511+N.SN=6914407;</msg>
<status status="PASS" starttime="20190525 02:41:36.198" endtime="20190525 02:41:36.482"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1+N.SN=?</arg>
<arg>IOT+D3+N.SN=${pid_start}</arg>
</arguments>
<msg timestamp="20190525 02:41:36.783" level="INFO">发送串口数据: IOT+D1+N.SN=?
应该收到串口数据: IOT+D3+N.SN=6914407
实际接收到的数据:  IOT+D3+N.SN=6914407;</msg>
<status status="PASS" starttime="20190525 02:41:36.483" endtime="20190525 02:41:36.784"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1+N.P.D=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20190525 02:41:37.085" level="INFO">发送串口数据: IOT+D1+N.P.D=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+D3+N.P.D=20190523;</msg>
<msg timestamp="20190525 02:41:37.088" level="INFO">${date} = 20190523</msg>
<status status="PASS" starttime="20190525 02:41:36.785" endtime="20190525 02:41:37.089"></status>
</kw>
<kw name="Zhongji Id" library="Utils">
<arguments>
<arg>t</arg>
<arg>d</arg>
<arg>${date}</arg>
<arg>${pid_start}</arg>
</arguments>
<assign>
<var>${tdid}</var>
</assign>
<msg timestamp="20190525 02:41:37.094" level="INFO">69014407</msg>
<msg timestamp="20190525 02:41:37.095" level="INFO">${tdid} = 010101190569014407</msg>
<status status="PASS" starttime="20190525 02:41:37.091" endtime="20190525 02:41:37.096"></status>
</kw>
<kw name="Zhongji Id" library="Utils">
<arguments>
<arg>t</arg>
<arg>c</arg>
<arg>${date}</arg>
<arg>${pid_start}</arg>
</arguments>
<assign>
<var>${tcid}</var>
</assign>
<msg timestamp="20190525 02:41:37.102" level="INFO">69014407</msg>
<msg timestamp="20190525 02:41:37.105" level="INFO">${tcid} = GID_T3_Group@@@010101190569014407</msg>
<status status="PASS" starttime="20190525 02:41:37.098" endtime="20190525 02:41:37.105"></status>
</kw>
<kw name="Zhongji Id" library="Utils">
<arguments>
<arg>a</arg>
<arg>d</arg>
<arg>${date}</arg>
<arg>${pid_start}</arg>
</arguments>
<assign>
<var>${adid}</var>
</assign>
<msg timestamp="20190525 02:41:37.112" level="INFO">69014407</msg>
<msg timestamp="20190525 02:41:37.113" level="INFO">${adid} = 010201190569014407</msg>
<status status="PASS" starttime="20190525 02:41:37.107" endtime="20190525 02:41:37.114"></status>
</kw>
<kw name="Zhongji Id" library="Utils">
<arguments>
<arg>a</arg>
<arg>c</arg>
<arg>${date}</arg>
<arg>${pid_start}</arg>
</arguments>
<assign>
<var>${acid}</var>
</assign>
<msg timestamp="20190525 02:41:37.122" level="INFO">69014407</msg>
<msg timestamp="20190525 02:41:37.124" level="INFO">${acid} = GID_T3_Group@@@010201190569014407</msg>
<status status="PASS" starttime="20190525 02:41:37.115" endtime="20190525 02:41:37.125"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+L1+mat3.f1.dide=?</arg>
<arg>IOT+L1+MAT3.F1.DIDE=${tdid}</arg>
</arguments>
<msg timestamp="20190525 02:41:37.388" level="INFO">发送串口数据: IOT+L1+mat3.f1.dide=?
应该收到串口数据: IOT+L1+MAT3.F1.DIDE=010101190569014407
实际接收到的数据:  IOT+L1+MAT3.F1.DIDE=010101190569014407;</msg>
<status status="PASS" starttime="20190525 02:41:37.127" endtime="20190525 02:41:37.389"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+L1+mat3.f1.ide=?</arg>
<arg>IOT+L1+MAT3.F1.IDE=${tcid}</arg>
</arguments>
<msg timestamp="20190525 02:41:37.690" level="INFO">发送串口数据: IOT+L1+mat3.f1.ide=?
应该收到串口数据: IOT+L1+MAT3.F1.IDE=GID_T3_Group@@@010101190569014407
实际接收到的数据:  IOT+L1+MAT3.F1.IDE=GID_T3_Group@@@010101190569014407;</msg>
<status status="PASS" starttime="20190525 02:41:37.390" endtime="20190525 02:41:37.691"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+V1+ai.m.info.req=</arg>
<arg>IOT+V1+AI.M.INFO.REQ=successful</arg>
</arguments>
<msg timestamp="20190525 02:41:37.992" level="INFO">发送串口数据: IOT+V1+ai.m.info.req=
应该收到串口数据: IOT+V1+AI.M.INFO.REQ=successful
实际接收到的数据:  IOT+V1+AI.M.INFO.REQ=successful;</msg>
<status status="PASS" starttime="20190525 02:41:37.692" endtime="20190525 02:41:37.992"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+C1+ai.m.dev.id=?</arg>
<arg>IOT+C1+AI.M.DEV.ID=${adid}</arg>
</arguments>
<msg timestamp="20190525 02:41:38.294" level="INFO">发送串口数据: IOT+C1+ai.m.dev.id=?
应该收到串口数据: IOT+C1+AI.M.DEV.ID=010201190569014407
实际接收到的数据:  IOT+C1+AI.M.DEV.ID=010201190569014407;</msg>
<status status="PASS" starttime="20190525 02:41:37.994" endtime="20190525 02:41:38.295"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+C1+ai.m.cli.id=?</arg>
<arg>IOT+C1+AI.M.CLI.ID=${acid}</arg>
</arguments>
<msg timestamp="20190525 02:41:38.596" level="INFO">发送串口数据: IOT+C1+ai.m.cli.id=?
应该收到串口数据: IOT+C1+AI.M.CLI.ID=GID_T3_Group@@@010201190569014407
实际接收到的数据:  IOT+C1+AI.M.CLI.ID=GID_T3_Group@@@010201190569014407;</msg>
<status status="PASS" starttime="20190525 02:41:38.296" endtime="20190525 02:41:38.597"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+V1+ai.app.st=1</arg>
<arg>IOT+V1+AI.APP.ST=successful</arg>
</arguments>
<msg timestamp="20190525 02:41:38.898" level="INFO">发送串口数据: IOT+V1+ai.app.st=1
应该收到串口数据: IOT+V1+AI.APP.ST=successful
实际接收到的数据:  IOT+V1+AI.APP.ST=successful;</msg>
<status status="PASS" starttime="20190525 02:41:38.598" endtime="20190525 02:41:38.899"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+ai.m.app.ack=?</arg>
<arg>IOT+S1+ai.m.app.ack=1</arg>
</arguments>
<msg timestamp="20190525 02:41:39.201" level="INFO">发送串口数据: IOT+S1+ai.m.app.ack=?
应该收到串口数据: IOT+S1+ai.m.app.ack=1
实际接收到的数据:  IOT+S1+AI.M.APP.ACK=1;</msg>
<status status="PASS" starttime="20190525 02:41:38.900" endtime="20190525 02:41:39.202"></status>
</kw>
<kw name="Write Setid File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${b}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.203" endtime="20190525 02:41:39.205"></status>
</kw>
<kw name="Write Setid File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${IMEI}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.206" endtime="20190525 02:41:39.208"></status>
</kw>
<kw name="Write Setid File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${sim}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.209" endtime="20190525 02:41:39.212"></status>
</kw>
<kw name="Write Setid File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${pid_start}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.213" endtime="20190525 02:41:39.216"></status>
</kw>
<kw name="Write Setid File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${tdid}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.217" endtime="20190525 02:41:39.219"></status>
</kw>
<kw name="Write Setid File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${adid}</arg>
<arg>\n</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.220" endtime="20190525 02:41:39.223"></status>
</kw>
<kw name="Pid Set" library="Utils">
<doc>功能:PID比较并写入配置文件</doc>
<arguments>
<arg>${pid_start}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.224" endtime="20190525 02:41:39.226"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${b}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.227" endtime="20190525 02:41:39.229"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+S1+ai.m.con.st=?</arg>
<arg>IOT+S1+AI.M.CON.ST=${k}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.231" endtime="20190525 02:41:39.234"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+D1150511+WA.SIM=${ICCID_SIM['${b}']}</arg>
<arg>${d}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.235" endtime="20190525 02:41:39.239"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+D1150511+N.SN=${pid_start}</arg>
<arg>IOT+D1150511+N.SN=${pid_start}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.240" endtime="20190525 02:41:39.243"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+D1+N.P.D=?</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.244" endtime="20190525 02:41:39.246"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+L1+mat3.f1.dide=?</arg>
<arg>IOT+L1+MAT3.F1.DIDE=${tdid}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.248" endtime="20190525 02:41:39.250"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+L1+mat3.f1.ide=?</arg>
<arg>IOT+L1+MAT3.F1.IDE=${tcid}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.251" endtime="20190525 02:41:39.254"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+V1+ai.m.info.req=</arg>
<arg>IOT+V1+AI.M.INFO.REQ=successful</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.255" endtime="20190525 02:41:39.257"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+C1+ai.m.dev.id=?</arg>
<arg>IOT+C1+AI.M.DEV.ID=${adid}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.258" endtime="20190525 02:41:39.260"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+C1+ai.m.cli.id=?</arg>
<arg>IOT+C1+AI.M.CLI.ID=${acid}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.262" endtime="20190525 02:41:39.265"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+V1+ai.app.st=1</arg>
<arg>IOT+V1+AI.APP.ST=successful</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.267" endtime="20190525 02:41:39.269"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+S1+ai.m.app.ack=?</arg>
<arg>IOT+S1+ai.m.app.ack=1</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.270" endtime="20190525 02:41:39.272"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.274" endtime="20190525 02:41:39.275"></status>
</kw>
<status status="PASS" starttime="20190525 02:39:55.514" endtime="20190525 02:41:39.276" critical="yes"></status>
</test>
<test id="s1-t3" name="GET_END">
<kw name="Get Local Time" library="Utils">
<assign>
<var>${time2}</var>
</assign>
<msg timestamp="20190525 02:41:39.284" level="INFO">${time2} = 1558723299.2838695</msg>
<status status="PASS" starttime="20190525 02:41:39.283" endtime="20190525 02:41:39.285"></status>
</kw>
<kw name="Round Int" library="Utils">
<doc>功能:做差(保留2位小数，针对小数点后面数字很多的)</doc>
<arguments>
<arg>${time1}</arg>
<arg>${time2}</arg>
</arguments>
<assign>
<var>${time3}</var>
</assign>
<msg timestamp="20190525 02:41:39.288" level="INFO">${time3} = 103.79</msg>
<status status="PASS" starttime="20190525 02:41:39.286" endtime="20190525 02:41:39.288"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(CESHI)MODEM INFO</arg>
<arg>(CESHI)MODEM</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190525 02:41:39.503" level="INFO">发送串口数据: (CESHI)MODEM INFO
应该收到串口数据: (CESHI)MODEM
实际接收到的数据:  (CESHI)MODEM 0,0,33,EC20F_CEFAGR06A01M4G_HL_BETA0404;DRV:V0.2 2018-2-8,Gprs;USIM:Error,00;COPS:255|255,CHN-UNICOM;ICCID:89860918710006540682;IMSI:460099501781395;IMEI:861529043679022;LAC_SID:22291;CID_NID:214416149;BID:0;LOCALIP:10.7.152.48;BOARD:Ready,Tim5;PPP:Ready,Con2,ITIM31;MAINLNK0:Tcp,UseMajor,Error,Try4,OTIM1;MAINLNK1:Tcp,UseMajor,Error,Try3,OTIM1;MAINLNK2:None,UseMajor,Error,Try0,OTIM1;TCPFST:Close;UDPFST:Close;RFTEST:0;CONFAIL:0;EDISCNT:3;ANT0:2|1785|0;ANT1:2|1788|1;QX:1,Try0;</msg>
<msg timestamp="20190525 02:41:39.504" level="INFO">${a} = (CESHI)MODEM 0,0,33,EC20F_CEFAGR06A01M4G_HL_BETA0404;DRV:V0.2 2018-2-8,Gprs;USIM:Error,00;COPS:255|255,CHN-UNICOM;ICCID:89860918710006540682;IMSI:460099501781395;IMEI:861529043679022;LAC_SID:22291;CID...</msg>
<status status="PASS" starttime="20190525 02:41:39.289" endtime="20190525 02:41:39.504"></status>
</kw>
<kw name="Get Flag 1" library="Utils">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>ICCID</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190525 02:41:39.507" level="INFO">['(CESHI)MODEM', '0', '0', '33', 'EC20F_CEFAGR06A01M4G_HL_BETA0404', 'DRV', 'V0.2', '2018-2-8', 'Gprs', 'USIM', 'Error', '00', 'COPS', '255|255', 'CHN-UNICOM', 'ICCID', '89860918710006540682', 'IMSI', '460099501781395', 'IMEI', '861529043679022', 'LAC_SID', '22291', 'CID_NID', '214416149', 'BID', '0', 'LOCALIP', '10.7.152.48', 'BOARD', 'Ready', 'Tim5', 'PPP', 'Ready', 'Con2', 'ITIM31', 'MAINLNK0', 'Tcp', 'UseMajor', 'Error', 'Try4', 'OTIM1', 'MAINLNK1', 'Tcp', 'UseMajor', 'Error', 'Try3', 'OTIM1', 'MAINLNK2', 'None', 'UseMajor', 'Error', 'Try0', 'OTIM1', 'TCPFST', 'Close', 'UDPFST', 'Close', 'RFTEST', '0', 'CONFAIL', '0', 'EDISCNT', '3', 'ANT0', '2|1785|0', 'ANT1', '2|1788|1', 'QX', '1', 'Try0', '']</msg>
<msg timestamp="20190525 02:41:39.508" level="INFO">${b} = 89860918710006540682</msg>
<status status="PASS" starttime="20190525 02:41:39.505" endtime="20190525 02:41:39.508"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>ICCID:${b}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.509" endtime="20190525 02:41:39.512"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>结束时间:${time2}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.513" endtime="20190525 02:41:39.517"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>耗时:${time3}秒</arg>
<arg>\n\n</arg>
<arg>*****************************</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.519" endtime="20190525 02:41:39.523"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190525 02:41:39.525" endtime="20190525 02:41:39.526"></status>
</kw>
<status status="PASS" starttime="20190525 02:41:39.279" endtime="20190525 02:41:39.526" critical="yes"></status>
</test>
<status status="PASS" starttime="20190525 02:39:55.041" endtime="20190525 02:41:39.533"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="Ai Test">Ai Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
