<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.7.0 on linux)" generated="20190524 22:47:51.947">
<suite id="s1" name="Ai Test" source="/home/pi/production/case/ai_test.txt">
<test id="s1-t1" name="GET_Ready">
<kw name="Get Local Time" library="Utils">
<assign>
<var>${time1}</var>
</assign>
<msg timestamp="20190524 22:47:52.468" level="INFO">${time1} = 1558709272.467181</msg>
<status status="PASS" starttime="20190524 22:47:52.466" endtime="20190524 22:47:52.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${time1}</arg>
</arguments>
<msg timestamp="20190524 22:47:52.471" level="INFO">${time1} = 1558709272.467181</msg>
<status status="PASS" starttime="20190524 22:47:52.469" endtime="20190524 22:47:52.471"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>开始时间:${time1}</arg>
</arguments>
<status status="PASS" starttime="20190524 22:47:52.472" endtime="20190524 22:47:52.475"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190524 22:47:52.477" endtime="20190524 22:47:52.479"></status>
</kw>
<status status="PASS" starttime="20190524 22:47:52.462" endtime="20190524 22:47:52.479" critical="yes"></status>
</test>
<test id="s1-t2" name="abox自检+设置pid">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1+N.SN=?</arg>
<arg>IOT+D3</arg>
</arguments>
<assign>
<var>${is_have_pid}</var>
</assign>
<msg timestamp="20190524 22:47:52.697" level="INFO">发送串口数据: IOT+D1+N.SN=?
应该收到串口数据: IOT+D3
实际接收到的数据:  IOT+D3+N.SN=;</msg>
<msg timestamp="20190524 22:47:52.698" level="INFO">${is_have_pid} = </msg>
<status status="PASS" starttime="20190524 22:47:52.491" endtime="20190524 22:47:52.698"></status>
</kw>
<kw name="Length" library="Utils">
<arguments>
<arg>${is_have_pid}</arg>
</arguments>
<assign>
<var>${lenpid}</var>
</assign>
<msg timestamp="20190524 22:47:52.701" level="INFO">${lenpid} = 0</msg>
<status status="PASS" starttime="20190524 22:47:52.699" endtime="20190524 22:47:52.701"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenpid}&gt;1</arg>
<arg>Fail</arg>
<arg>PID不为空</arg>
</arguments>
<status status="PASS" starttime="20190524 22:47:52.702" endtime="20190524 22:47:52.704"></status>
</kw>
<kw name="${i} IN RANGE [ 20 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+ai.m.con.st=?</arg>
<arg>IOT+S1+AI.M.CON.ST</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190524 22:47:52.998" level="INFO">发送串口数据: IOT+S1+ai.m.con.st=?
应该收到串口数据: IOT+S1+AI.M.CON.ST
实际接收到的数据:  IOT+S1+AI.M.CON.ST=1;</msg>
<msg timestamp="20190524 22:47:52.999" level="INFO">${k} = 1</msg>
<status status="PASS" starttime="20190524 22:47:52.707" endtime="20190524 22:47:52.999"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k}'=='1'</arg>
</arguments>
<msg timestamp="20190524 22:47:53.002" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190524 22:47:53.000" endtime="20190524 22:47:53.003"></status>
</kw>
<status status="PASS" starttime="20190524 22:47:52.706" endtime="20190524 22:47:53.003"></status>
</kw>
<status status="PASS" starttime="20190524 22:47:52.705" endtime="20190524 22:47:53.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==19</arg>
<arg>fail</arg>
<arg>IOT+S1+ai.m.con.st失败</arg>
</arguments>
<status status="PASS" starttime="20190524 22:47:53.004" endtime="20190524 22:47:53.006"></status>
</kw>
<kw name="Ai Test" library="NetTest">
<doc>- aibox自检的测试用例</doc>
<msg timestamp="20190524 22:48:56.983" level="INFO">发送串口数据: (CESHI)DSMCORE FACTORY-LOCK
应该收到串口数据: (CESHI)
实际接收到的数据:  (CESHI)DSMCORE FACTORY LOCKED;

发送串口数据: (CESHI)DSMCORE FACTORY-P0000000000000110
应该收到串口数据: (CESHI)
实际接收到的数据:  (CESHI)GOING;

发送串口数据: IOT+V1+ai.self.check=1
应该收到串口数据: IOT
实际接收到的数据:  IOT+V1+AI.SELF.CHECK=successful;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=0,0,0,0,0,0,0,0,0,1,0;

['0', '0', '0', '0', '0', '0', '0', '1', '0']
测试全部通过
发送串口数据: (CESHI)DSMCORE FACTORY-P0000000000000111
应该收到串口数据: (CESHI)
实际接收到的数据:  (CESHI)GOING;

发送串口数据: (CESHI)DSMCORE FACTORY-UNLOCK
应该收到串口数据: (CESHI)
实际接收到的数据:  (CESHI)DSMCORE FACTORY UNLOCKED;</msg>
<status status="PASS" starttime="20190524 22:47:53.007" endtime="20190524 22:48:56.986"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20190524 22:48:58.990" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190524 22:48:56.988" endtime="20190524 22:48:58.992"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+V1+ai.fom.nt=01</arg>
<arg>IOT+V1+AI.FOM.NT=successful</arg>
</arguments>
<msg timestamp="20190524 22:48:59.200" level="INFO">发送串口数据: IOT+V1+ai.fom.nt=01
应该收到串口数据: IOT+V1+AI.FOM.NT=successful
实际接收到的数据:  IOT+V1+AI.FOM.NT=successful;</msg>
<status status="PASS" starttime="20190524 22:48:58.994" endtime="20190524 22:48:59.200"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190524 22:49:00.203" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190524 22:48:59.201" endtime="20190524 22:49:00.204"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+ai.m.ai.fom.ack=?</arg>
<arg>IOT+S1+AI.M.AI.FOM.ACK=2</arg>
</arguments>
<msg timestamp="20190524 22:49:03.618" level="INFO">发送串口数据: IOT+S1+ai.m.ai.fom.ack=?
应该收到串口数据: IOT+S1+AI.M.AI.FOM.ACK=2
num 0, time: 2019-05-24 22:49:00
实际接收到的数据:  IOT+S1+AI.M.AI.FOM.ACK=2;</msg>
<status status="PASS" starttime="20190524 22:49:00.206" endtime="20190524 22:49:03.619"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(CESHI)MODEM INFO</arg>
<arg>(CESHI)MODEM</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190524 22:49:03.920" level="INFO">发送串口数据: (CESHI)MODEM INFO
应该收到串口数据: (CESHI)MODEM
实际接收到的数据:  (CESHI)MODEM 0,0,33,EC20F_CEFAGR06A01M4G_HL_BETA0404;DRV:V0.2 2018-2-8,Gprs;USIM:Ready,27;COPS:1|7,CHN-UNICOM;ICCID:89860918710006540682;IMSI:460099501781395;IMEI:861529043679022;LAC_SID:22291;CID_NID:214416149;BID:0;LOCALIP:10.229.240.93;BOARD:Ready,Tim286;PPP:Ready,Con5,ITIM240;MAINLNK0:Tcp,UseMajor,Error,Try74,OTIM259;MAINLNK1:Tcp,UseMajor,Error,Try50,OTIM259;MAINLNK2:None,UseMajor,Error,Try0,OTIM259;TCPFST:Close;UDPFST:Close;RFTEST:0;CONFAIL:0;EDISCNT:30;ANT0:2|1785|0;ANT1:2|1788|1;QX:1,Try0;</msg>
<msg timestamp="20190524 22:49:03.921" level="INFO">${a} = (CESHI)MODEM 0,0,33,EC20F_CEFAGR06A01M4G_HL_BETA0404;DRV:V0.2 2018-2-8,Gprs;USIM:Ready,27;COPS:1|7,CHN-UNICOM;ICCID:89860918710006540682;IMSI:460099501781395;IMEI:861529043679022;LAC_SID:22291;CID_NID...</msg>
<status status="PASS" starttime="20190524 22:49:03.620" endtime="20190524 22:49:03.922"></status>
</kw>
<kw name="Get Flag 1" library="Utils">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>IMEI</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${IMEI}</var>
</assign>
<msg timestamp="20190524 22:49:03.925" level="INFO">['(CESHI)MODEM', '0', '0', '33', 'EC20F_CEFAGR06A01M4G_HL_BETA0404', 'DRV', 'V0.2', '2018-2-8', 'Gprs', 'USIM', 'Ready', '27', 'COPS', '1|7', 'CHN-UNICOM', 'ICCID', '89860918710006540682', 'IMSI', '460099501781395', 'IMEI', '861529043679022', 'LAC_SID', '22291', 'CID_NID', '214416149', 'BID', '0', 'LOCALIP', '10.229.240.93', 'BOARD', 'Ready', 'Tim286', 'PPP', 'Ready', 'Con5', 'ITIM240', 'MAINLNK0', 'Tcp', 'UseMajor', 'Error', 'Try74', 'OTIM259', 'MAINLNK1', 'Tcp', 'UseMajor', 'Error', 'Try50', 'OTIM259', 'MAINLNK2', 'None', 'UseMajor', 'Error', 'Try0', 'OTIM259', 'TCPFST', 'Close', 'UDPFST', 'Close', 'RFTEST', '0', 'CONFAIL', '0', 'EDISCNT', '30', 'ANT0', '2|1785|0', 'ANT1', '2|1788|1', 'QX', '1', 'Try0', '']</msg>
<msg timestamp="20190524 22:49:03.926" level="INFO">${IMEI} = 861529043679022</msg>
<status status="PASS" starttime="20190524 22:49:03.923" endtime="20190524 22:49:03.926"></status>
</kw>
<kw name="Get Flag 1" library="Utils">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>ICCID</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190524 22:49:03.930" level="INFO">['(CESHI)MODEM', '0', '0', '33', 'EC20F_CEFAGR06A01M4G_HL_BETA0404', 'DRV', 'V0.2', '2018-2-8', 'Gprs', 'USIM', 'Ready', '27', 'COPS', '1|7', 'CHN-UNICOM', 'ICCID', '89860918710006540682', 'IMSI', '460099501781395', 'IMEI', '861529043679022', 'LAC_SID', '22291', 'CID_NID', '214416149', 'BID', '0', 'LOCALIP', '10.229.240.93', 'BOARD', 'Ready', 'Tim286', 'PPP', 'Ready', 'Con5', 'ITIM240', 'MAINLNK0', 'Tcp', 'UseMajor', 'Error', 'Try74', 'OTIM259', 'MAINLNK1', 'Tcp', 'UseMajor', 'Error', 'Try50', 'OTIM259', 'MAINLNK2', 'None', 'UseMajor', 'Error', 'Try0', 'OTIM259', 'TCPFST', 'Close', 'UDPFST', 'Close', 'RFTEST', '0', 'CONFAIL', '0', 'EDISCNT', '30', 'ANT0', '2|1785|0', 'ANT1', '2|1788|1', 'QX', '1', 'Try0', '']</msg>
<msg timestamp="20190524 22:49:03.930" level="INFO">${b} = 89860918710006540682</msg>
<status status="PASS" starttime="20190524 22:49:03.928" endtime="20190524 22:49:03.931"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${ICCID_SIM['${b}']}</arg>
</arguments>
<assign>
<var>${sim}</var>
</assign>
<msg timestamp="20190524 22:49:03.934" level="INFO">${sim} = 8614619911775</msg>
<status status="PASS" starttime="20190524 22:49:03.932" endtime="20190524 22:49:03.935"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1150511+WA.SIM=${ICCID_SIM['${b}']}</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190524 22:49:04.222" level="INFO">发送串口数据: IOT+D1150511+WA.SIM=8614619911775
应该收到串口数据: IOT
实际接收到的数据:  IOT+D1150511+WA.SIM=8614619911775;</msg>
<msg timestamp="20190524 22:49:04.223" level="INFO">${d} = 8614619911775</msg>
<status status="PASS" starttime="20190524 22:49:03.936" endtime="20190524 22:49:04.224"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${ICCID_SIM['${b}']}</arg>
</arguments>
<assign>
<var>${sim1}</var>
</assign>
<msg timestamp="20190524 22:49:04.227" level="INFO">${sim1} = 8614619911775</msg>
<status status="PASS" starttime="20190524 22:49:04.225" endtime="20190524 22:49:04.227"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${sim}'!='${d}'</arg>
<arg>fail</arg>
<arg>sim查询错误</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:04.228" endtime="20190524 22:49:04.230"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1150511+N.SN=${pid_start}</arg>
<arg>IOT+D1150511+N.SN=${pid_start}</arg>
</arguments>
<msg timestamp="20190524 22:49:04.525" level="INFO">发送串口数据: IOT+D1150511+N.SN=6914405
应该收到串口数据: IOT+D1150511+N.SN=6914405
实际接收到的数据:  IOT+D1150511+N.SN=6914405;</msg>
<status status="PASS" starttime="20190524 22:49:04.231" endtime="20190524 22:49:04.526"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1+N.SN=?</arg>
<arg>IOT+D3+N.SN=${pid_start}</arg>
</arguments>
<msg timestamp="20190524 22:49:04.827" level="INFO">发送串口数据: IOT+D1+N.SN=?
应该收到串口数据: IOT+D3+N.SN=6914405
实际接收到的数据:  IOT+D3+N.SN=6914405;</msg>
<status status="PASS" starttime="20190524 22:49:04.527" endtime="20190524 22:49:04.828"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1+N.P.D=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20190524 22:49:05.129" level="INFO">发送串口数据: IOT+D1+N.P.D=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+D3+N.P.D=20190523;</msg>
<msg timestamp="20190524 22:49:05.130" level="INFO">${date} = 20190523</msg>
<status status="PASS" starttime="20190524 22:49:04.829" endtime="20190524 22:49:05.131"></status>
</kw>
<kw name="Zhongji Id" library="Utils">
<arguments>
<arg>t</arg>
<arg>d</arg>
<arg>${date}</arg>
<arg>${pid_start}</arg>
</arguments>
<assign>
<var>${tdid}</var>
</assign>
<msg timestamp="20190524 22:49:05.133" level="INFO">69014405</msg>
<msg timestamp="20190524 22:49:05.134" level="INFO">${tdid} = 010101190569014405</msg>
<status status="PASS" starttime="20190524 22:49:05.132" endtime="20190524 22:49:05.134"></status>
</kw>
<kw name="Zhongji Id" library="Utils">
<arguments>
<arg>t</arg>
<arg>c</arg>
<arg>${date}</arg>
<arg>${pid_start}</arg>
</arguments>
<assign>
<var>${tcid}</var>
</assign>
<msg timestamp="20190524 22:49:05.137" level="INFO">69014405</msg>
<msg timestamp="20190524 22:49:05.138" level="INFO">${tcid} = GID_T3_Group@@@010101190569014405</msg>
<status status="PASS" starttime="20190524 22:49:05.135" endtime="20190524 22:49:05.138"></status>
</kw>
<kw name="Zhongji Id" library="Utils">
<arguments>
<arg>a</arg>
<arg>d</arg>
<arg>${date}</arg>
<arg>${pid_start}</arg>
</arguments>
<assign>
<var>${adid}</var>
</assign>
<msg timestamp="20190524 22:49:05.141" level="INFO">69014405</msg>
<msg timestamp="20190524 22:49:05.142" level="INFO">${adid} = 010201190569014405</msg>
<status status="PASS" starttime="20190524 22:49:05.139" endtime="20190524 22:49:05.142"></status>
</kw>
<kw name="Zhongji Id" library="Utils">
<arguments>
<arg>a</arg>
<arg>c</arg>
<arg>${date}</arg>
<arg>${pid_start}</arg>
</arguments>
<assign>
<var>${acid}</var>
</assign>
<msg timestamp="20190524 22:49:05.145" level="INFO">69014405</msg>
<msg timestamp="20190524 22:49:05.146" level="INFO">${acid} = GID_T3_Group@@@010201190569014405</msg>
<status status="PASS" starttime="20190524 22:49:05.143" endtime="20190524 22:49:05.146"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+L1+mat3.f1.dide=?</arg>
<arg>IOT+L1+MAT3.F1.DIDE=${tdid}</arg>
</arguments>
<msg timestamp="20190524 22:49:05.432" level="INFO">发送串口数据: IOT+L1+mat3.f1.dide=?
应该收到串口数据: IOT+L1+MAT3.F1.DIDE=010101190569014405
实际接收到的数据:  IOT+L1+MAT3.F1.DIDE=010101190569014405;</msg>
<status status="PASS" starttime="20190524 22:49:05.147" endtime="20190524 22:49:05.433"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+L1+mat3.f1.ide=?</arg>
<arg>IOT+L1+MAT3.F1.IDE=${tcid}</arg>
</arguments>
<msg timestamp="20190524 22:49:05.734" level="INFO">发送串口数据: IOT+L1+mat3.f1.ide=?
应该收到串口数据: IOT+L1+MAT3.F1.IDE=GID_T3_Group@@@010101190569014405
实际接收到的数据:  IOT+L1+MAT3.F1.IDE=GID_T3_Group@@@010101190569014405;</msg>
<status status="PASS" starttime="20190524 22:49:05.434" endtime="20190524 22:49:05.735"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+V1+ai.m.info.req=</arg>
<arg>IOT+V1+AI.M.INFO.REQ=successful</arg>
</arguments>
<msg timestamp="20190524 22:49:06.036" level="INFO">发送串口数据: IOT+V1+ai.m.info.req=
应该收到串口数据: IOT+V1+AI.M.INFO.REQ=successful
实际接收到的数据:  IOT+V1+AI.M.INFO.REQ=successful;</msg>
<status status="PASS" starttime="20190524 22:49:05.736" endtime="20190524 22:49:06.037"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+C1+ai.m.dev.id=?</arg>
<arg>IOT+C1+AI.M.DEV.ID=${adid}</arg>
</arguments>
<msg timestamp="20190524 22:49:06.339" level="INFO">发送串口数据: IOT+C1+ai.m.dev.id=?
应该收到串口数据: IOT+C1+AI.M.DEV.ID=010201190569014405
实际接收到的数据:  IOT+C1+AI.M.DEV.ID=010201190569014405;</msg>
<status status="PASS" starttime="20190524 22:49:06.038" endtime="20190524 22:49:06.340"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+C1+ai.m.cli.id=?</arg>
<arg>IOT+C1+AI.M.CLI.ID=${acid}</arg>
</arguments>
<msg timestamp="20190524 22:49:06.641" level="INFO">发送串口数据: IOT+C1+ai.m.cli.id=?
应该收到串口数据: IOT+C1+AI.M.CLI.ID=GID_T3_Group@@@010201190569014405
实际接收到的数据:  IOT+C1+AI.M.CLI.ID=GID_T3_Group@@@010201190569014405;</msg>
<status status="PASS" starttime="20190524 22:49:06.341" endtime="20190524 22:49:06.642"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+V1+ai.app.st=1</arg>
<arg>IOT+V1+AI.APP.ST=successful</arg>
</arguments>
<msg timestamp="20190524 22:49:06.943" level="INFO">发送串口数据: IOT+V1+ai.app.st=1
应该收到串口数据: IOT+V1+AI.APP.ST=successful
实际接收到的数据:  IOT+V1+AI.APP.ST=successful;</msg>
<status status="PASS" starttime="20190524 22:49:06.643" endtime="20190524 22:49:06.944"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+ai.m.app.ack=?</arg>
<arg>IOT+S1+ai.m.app.ack=1</arg>
</arguments>
<msg timestamp="20190524 22:49:07.246" level="INFO">发送串口数据: IOT+S1+ai.m.app.ack=?
应该收到串口数据: IOT+S1+ai.m.app.ack=1
实际接收到的数据:  IOT+S1+AI.M.APP.ACK=1;</msg>
<status status="PASS" starttime="20190524 22:49:06.945" endtime="20190524 22:49:07.248"></status>
</kw>
<kw name="Write Setid File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${b}</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.249" endtime="20190524 22:49:07.254"></status>
</kw>
<kw name="Write Setid File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${IMEI}</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.256" endtime="20190524 22:49:07.259"></status>
</kw>
<kw name="Write Setid File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${sim}</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.262" endtime="20190524 22:49:07.266"></status>
</kw>
<kw name="Write Setid File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${pid_start}</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.268" endtime="20190524 22:49:07.271"></status>
</kw>
<kw name="Write Setid File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${tdid}</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.273" endtime="20190524 22:49:07.277"></status>
</kw>
<kw name="Write Setid File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${adid}</arg>
<arg>\n</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.279" endtime="20190524 22:49:07.284"></status>
</kw>
<kw name="Pid Set" library="Utils">
<doc>功能:PID比较并写入配置文件</doc>
<arguments>
<arg>${pid_start}</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.286" endtime="20190524 22:49:07.291"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${b}</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.293" endtime="20190524 22:49:07.297"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+S1+ai.m.con.st=?</arg>
<arg>IOT+S1+AI.M.CON.ST=${k}</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.299" endtime="20190524 22:49:07.303"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+D1150511+WA.SIM=${ICCID_SIM['${b}']}</arg>
<arg>${d}</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.305" endtime="20190524 22:49:07.310"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+D1150511+N.SN=${pid_start}</arg>
<arg>IOT+D1150511+N.SN=${pid_start}</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.313" endtime="20190524 22:49:07.318"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+D1+N.P.D=?</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.320" endtime="20190524 22:49:07.324"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+L1+mat3.f1.dide=?</arg>
<arg>IOT+L1+MAT3.F1.DIDE=${tdid}</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.326" endtime="20190524 22:49:07.331"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+L1+mat3.f1.ide=?</arg>
<arg>IOT+L1+MAT3.F1.IDE=${tcid}</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.333" endtime="20190524 22:49:07.337"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+V1+ai.m.info.req=</arg>
<arg>IOT+V1+AI.M.INFO.REQ=successful</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.339" endtime="20190524 22:49:07.342"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+C1+ai.m.dev.id=?</arg>
<arg>IOT+C1+AI.M.DEV.ID=${adid}</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.344" endtime="20190524 22:49:07.349"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+C1+ai.m.cli.id=?</arg>
<arg>IOT+C1+AI.M.CLI.ID=${acid}</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.351" endtime="20190524 22:49:07.355"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+V1+ai.app.st=1</arg>
<arg>IOT+V1+AI.APP.ST=successful</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.357" endtime="20190524 22:49:07.361"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+S1+ai.m.app.ack=?</arg>
<arg>IOT+S1+ai.m.app.ack=1</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.363" endtime="20190524 22:49:07.367"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.370" endtime="20190524 22:49:07.372"></status>
</kw>
<status status="PASS" starttime="20190524 22:47:52.482" endtime="20190524 22:49:07.373" critical="yes"></status>
</test>
<test id="s1-t3" name="GET_END">
<kw name="Get Local Time" library="Utils">
<assign>
<var>${time2}</var>
</assign>
<msg timestamp="20190524 22:49:07.385" level="INFO">${time2} = 1558709347.3850229</msg>
<status status="PASS" starttime="20190524 22:49:07.384" endtime="20190524 22:49:07.386"></status>
</kw>
<kw name="Round Int" library="Utils">
<doc>功能:做差(保留2位小数，针对小数点后面数字很多的)</doc>
<arguments>
<arg>${time1}</arg>
<arg>${time2}</arg>
</arguments>
<assign>
<var>${time3}</var>
</assign>
<msg timestamp="20190524 22:49:07.389" level="INFO">${time3} = 74.92</msg>
<status status="PASS" starttime="20190524 22:49:07.387" endtime="20190524 22:49:07.389"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(CESHI)MODEM INFO</arg>
<arg>(CESHI)MODEM</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190524 22:49:07.595" level="INFO">发送串口数据: (CESHI)MODEM INFO
应该收到串口数据: (CESHI)MODEM
实际接收到的数据:  (CESHI)MODEM 0,0,33,EC20F_CEFAGR06A01M4G_HL_BETA0404;DRV:V0.2 2018-2-8,Gprs;USIM:Ready,27;COPS:1|7,CHN-UNICOM;ICCID:89860918710006540682;IMSI:460099501781395;IMEI:861529043679022;LAC_SID:22291;CID_NID:214416149;BID:0;LOCALIP:10.229.240.93;BOARD:Ready,Tim290;PPP:Error,Try0,OTIM1;MAINLNK0:Tcp,UseMajor,Error,Try75,OTIM263;MAINLNK1:Tcp,UseMajor,Error,Try50,OTIM263;MAINLNK2:None,UseMajor,Error,Try0,OTIM263;TCPFST:Close;UDPFST:Close;RFTEST:0;CONFAIL:0;EDISCNT:30;ANT0:2|1784|0;ANT1:2|1788|1;QX:1,Try0;</msg>
<msg timestamp="20190524 22:49:07.595" level="INFO">${a} = (CESHI)MODEM 0,0,33,EC20F_CEFAGR06A01M4G_HL_BETA0404;DRV:V0.2 2018-2-8,Gprs;USIM:Ready,27;COPS:1|7,CHN-UNICOM;ICCID:89860918710006540682;IMSI:460099501781395;IMEI:861529043679022;LAC_SID:22291;CID_NID...</msg>
<status status="PASS" starttime="20190524 22:49:07.390" endtime="20190524 22:49:07.596"></status>
</kw>
<kw name="Get Flag 1" library="Utils">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>ICCID</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190524 22:49:07.599" level="INFO">['(CESHI)MODEM', '0', '0', '33', 'EC20F_CEFAGR06A01M4G_HL_BETA0404', 'DRV', 'V0.2', '2018-2-8', 'Gprs', 'USIM', 'Ready', '27', 'COPS', '1|7', 'CHN-UNICOM', 'ICCID', '89860918710006540682', 'IMSI', '460099501781395', 'IMEI', '861529043679022', 'LAC_SID', '22291', 'CID_NID', '214416149', 'BID', '0', 'LOCALIP', '10.229.240.93', 'BOARD', 'Ready', 'Tim290', 'PPP', 'Error', 'Try0', 'OTIM1', 'MAINLNK0', 'Tcp', 'UseMajor', 'Error', 'Try75', 'OTIM263', 'MAINLNK1', 'Tcp', 'UseMajor', 'Error', 'Try50', 'OTIM263', 'MAINLNK2', 'None', 'UseMajor', 'Error', 'Try0', 'OTIM263', 'TCPFST', 'Close', 'UDPFST', 'Close', 'RFTEST', '0', 'CONFAIL', '0', 'EDISCNT', '30', 'ANT0', '2|1784|0', 'ANT1', '2|1788|1', 'QX', '1', 'Try0', '']</msg>
<msg timestamp="20190524 22:49:07.599" level="INFO">${b} = 89860918710006540682</msg>
<status status="PASS" starttime="20190524 22:49:07.597" endtime="20190524 22:49:07.599"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>ICCID:${b}</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.600" endtime="20190524 22:49:07.602"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>结束时间:${time2}</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.604" endtime="20190524 22:49:07.606"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>耗时:${time3}秒</arg>
<arg>\n\n</arg>
<arg>*****************************</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.607" endtime="20190524 22:49:07.611"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190524 22:49:07.612" endtime="20190524 22:49:07.614"></status>
</kw>
<status status="PASS" starttime="20190524 22:49:07.380" endtime="20190524 22:49:07.614" critical="yes"></status>
</test>
<status status="PASS" starttime="20190524 22:47:51.967" endtime="20190524 22:49:07.619"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="Ai Test">Ai Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
