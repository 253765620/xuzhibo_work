<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.7.0 on linux)" generated="20190525 02:30:34.173">
<suite id="s1" name="Ai Test" source="/home/pi/production/case/ai_test.txt">
<test id="s1-t1" name="GET_Ready">
<kw name="Get Local Time" library="Utils">
<assign>
<var>${time1}</var>
</assign>
<msg timestamp="20190525 02:30:34.665" level="INFO">${time1} = 1558722634.6649537</msg>
<status status="PASS" starttime="20190525 02:30:34.664" endtime="20190525 02:30:34.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${time1}</arg>
</arguments>
<msg timestamp="20190525 02:30:34.669" level="INFO">${time1} = 1558722634.6649537</msg>
<status status="PASS" starttime="20190525 02:30:34.667" endtime="20190525 02:30:34.669"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>开始时间:${time1}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:30:34.670" endtime="20190525 02:30:34.673"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190525 02:30:34.675" endtime="20190525 02:30:34.677"></status>
</kw>
<status status="PASS" starttime="20190525 02:30:34.660" endtime="20190525 02:30:34.677" critical="yes"></status>
</test>
<test id="s1-t2" name="abox自检+设置pid">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1+N.SN=?</arg>
<arg>IOT+D3</arg>
</arguments>
<assign>
<var>${is_have_pid}</var>
</assign>
<msg timestamp="20190525 02:30:34.899" level="INFO">发送串口数据: IOT+D1+N.SN=?
应该收到串口数据: IOT+D3
实际接收到的数据:  IOT+D3+N.SN=;</msg>
<msg timestamp="20190525 02:30:34.900" level="INFO">${is_have_pid} = </msg>
<status status="PASS" starttime="20190525 02:30:34.689" endtime="20190525 02:30:34.900"></status>
</kw>
<kw name="Length" library="Utils">
<arguments>
<arg>${is_have_pid}</arg>
</arguments>
<assign>
<var>${lenpid}</var>
</assign>
<msg timestamp="20190525 02:30:34.903" level="INFO">${lenpid} = 0</msg>
<status status="PASS" starttime="20190525 02:30:34.901" endtime="20190525 02:30:34.903"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenpid}&gt;1</arg>
<arg>Fail</arg>
<arg>PID不为空</arg>
</arguments>
<status status="PASS" starttime="20190525 02:30:34.905" endtime="20190525 02:30:34.906"></status>
</kw>
<kw name="${i} IN RANGE [ 20 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+ai.m.con.st=?</arg>
<arg>IOT+S1+AI.M.CON.ST</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190525 02:30:35.201" level="INFO">发送串口数据: IOT+S1+ai.m.con.st=?
应该收到串口数据: IOT+S1+AI.M.CON.ST
实际接收到的数据:  IOT+S1+AI.M.CON.ST=1;</msg>
<msg timestamp="20190525 02:30:35.202" level="INFO">${k} = 1</msg>
<status status="PASS" starttime="20190525 02:30:34.909" endtime="20190525 02:30:35.202"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k}'=='1'</arg>
</arguments>
<msg timestamp="20190525 02:30:35.204" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190525 02:30:35.203" endtime="20190525 02:30:35.205"></status>
</kw>
<status status="PASS" starttime="20190525 02:30:34.908" endtime="20190525 02:30:35.205"></status>
</kw>
<status status="PASS" starttime="20190525 02:30:34.907" endtime="20190525 02:30:35.206"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==19</arg>
<arg>fail</arg>
<arg>IOT+S1+ai.m.con.st失败</arg>
</arguments>
<status status="PASS" starttime="20190525 02:30:35.207" endtime="20190525 02:30:35.208"></status>
</kw>
<kw name="Ai Test" library="NetTest">
<doc>- aibox自检的测试用例</doc>
<msg timestamp="20190525 02:31:39.177" level="INFO">发送串口数据: (CESHI)DSMCORE FACTORY-LOCK
应该收到串口数据: (CESHI)
实际接收到的数据:  (CESHI)DSMCORE FACTORY LOCKED;

发送串口数据: (CESHI)DSMCORE FACTORY-P0000000000000110
应该收到串口数据: (CESHI)
实际接收到的数据:  (CESHI)GOING;

发送串口数据: IOT+V1+ai.self.check=1
应该收到串口数据: IOT
实际接收到的数据:  IOT+V1+AI.SELF.CHECK=successful;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=0,0,0,0,0,0,0,0,0,1,0;

['0', '0', '0', '0', '0', '0', '0', '1', '0']
测试全部通过
发送串口数据: (CESHI)DSMCORE FACTORY-P0000000000000111
应该收到串口数据: (CESHI)
实际接收到的数据:  (CESHI)GOING;

发送串口数据: (CESHI)DSMCORE FACTORY-UNLOCK
应该收到串口数据: (CESHI)
实际接收到的数据:  (CESHI)DSMCORE FACTORY UNLOCKED;</msg>
<status status="PASS" starttime="20190525 02:30:35.209" endtime="20190525 02:31:39.180"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20190525 02:31:41.184" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190525 02:31:39.182" endtime="20190525 02:31:41.186"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+V1+ai.fom.nt=01</arg>
<arg>IOT+V1+AI.FOM.NT=successful</arg>
</arguments>
<msg timestamp="20190525 02:31:41.393" level="INFO">发送串口数据: IOT+V1+ai.fom.nt=01
应该收到串口数据: IOT+V1+AI.FOM.NT=successful
实际接收到的数据:  IOT+V1+AI.FOM.NT=successful;</msg>
<status status="PASS" starttime="20190525 02:31:41.188" endtime="20190525 02:31:41.394"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20190525 02:31:42.396" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190525 02:31:41.395" endtime="20190525 02:31:42.398"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+ai.m.ai.fom.ack=?</arg>
<arg>IOT+S1+AI.M.AI.FOM.ACK=2</arg>
</arguments>
<msg timestamp="20190525 02:31:45.812" level="INFO">发送串口数据: IOT+S1+ai.m.ai.fom.ack=?
应该收到串口数据: IOT+S1+AI.M.AI.FOM.ACK=2
num 0, time: 2019-05-25 02:31:42
实际接收到的数据:  IOT+S1+AI.M.AI.FOM.ACK=2;</msg>
<status status="PASS" starttime="20190525 02:31:42.400" endtime="20190525 02:31:45.813"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(CESHI)MODEM INFO</arg>
<arg>(CESHI)MODEM</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190525 02:31:46.114" level="INFO">发送串口数据: (CESHI)MODEM INFO
应该收到串口数据: (CESHI)MODEM
实际接收到的数据:  (CESHI)MODEM 0,0,33,EC20F_CEFAGR06A01M4G_HL_BETA0404;DRV:V0.2 2018-2-8,Gprs;USIM:Ready,26;COPS:1|7,CHN-UNICOM;ICCID:89860918710006540682;IMSI:460099501781395;IMEI:861529043679022;LAC_SID:22291;CID_NID:214416149;BID:0;LOCALIP:10.38.25.240;BOARD:Ready,Tim395;PPP:Ready,Con3,ITIM349;MAINLNK0:Tcp,UseMajor,Error,Try21,OTIM368;MAINLNK1:Tcp,UseMajor,Error,Try14,OTIM368;MAINLNK2:None,UseMajor,Error,Try0,OTIM368;TCPFST:Close;UDPFST:Close;RFTEST:0;CONFAIL:0;EDISCNT:8;ANT0:2|1785|0;ANT1:2|1788|1;QX:1,Try0;</msg>
<msg timestamp="20190525 02:31:46.115" level="INFO">${a} = (CESHI)MODEM 0,0,33,EC20F_CEFAGR06A01M4G_HL_BETA0404;DRV:V0.2 2018-2-8,Gprs;USIM:Ready,26;COPS:1|7,CHN-UNICOM;ICCID:89860918710006540682;IMSI:460099501781395;IMEI:861529043679022;LAC_SID:22291;CID_NID...</msg>
<status status="PASS" starttime="20190525 02:31:45.814" endtime="20190525 02:31:46.116"></status>
</kw>
<kw name="Get Flag 1" library="Utils">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>IMEI</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${IMEI}</var>
</assign>
<msg timestamp="20190525 02:31:46.119" level="INFO">['(CESHI)MODEM', '0', '0', '33', 'EC20F_CEFAGR06A01M4G_HL_BETA0404', 'DRV', 'V0.2', '2018-2-8', 'Gprs', 'USIM', 'Ready', '26', 'COPS', '1|7', 'CHN-UNICOM', 'ICCID', '89860918710006540682', 'IMSI', '460099501781395', 'IMEI', '861529043679022', 'LAC_SID', '22291', 'CID_NID', '214416149', 'BID', '0', 'LOCALIP', '10.38.25.240', 'BOARD', 'Ready', 'Tim395', 'PPP', 'Ready', 'Con3', 'ITIM349', 'MAINLNK0', 'Tcp', 'UseMajor', 'Error', 'Try21', 'OTIM368', 'MAINLNK1', 'Tcp', 'UseMajor', 'Error', 'Try14', 'OTIM368', 'MAINLNK2', 'None', 'UseMajor', 'Error', 'Try0', 'OTIM368', 'TCPFST', 'Close', 'UDPFST', 'Close', 'RFTEST', '0', 'CONFAIL', '0', 'EDISCNT', '8', 'ANT0', '2|1785|0', 'ANT1', '2|1788|1', 'QX', '1', 'Try0', '']</msg>
<msg timestamp="20190525 02:31:46.120" level="INFO">${IMEI} = 861529043679022</msg>
<status status="PASS" starttime="20190525 02:31:46.117" endtime="20190525 02:31:46.120"></status>
</kw>
<kw name="Get Flag 1" library="Utils">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>ICCID</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190525 02:31:46.123" level="INFO">['(CESHI)MODEM', '0', '0', '33', 'EC20F_CEFAGR06A01M4G_HL_BETA0404', 'DRV', 'V0.2', '2018-2-8', 'Gprs', 'USIM', 'Ready', '26', 'COPS', '1|7', 'CHN-UNICOM', 'ICCID', '89860918710006540682', 'IMSI', '460099501781395', 'IMEI', '861529043679022', 'LAC_SID', '22291', 'CID_NID', '214416149', 'BID', '0', 'LOCALIP', '10.38.25.240', 'BOARD', 'Ready', 'Tim395', 'PPP', 'Ready', 'Con3', 'ITIM349', 'MAINLNK0', 'Tcp', 'UseMajor', 'Error', 'Try21', 'OTIM368', 'MAINLNK1', 'Tcp', 'UseMajor', 'Error', 'Try14', 'OTIM368', 'MAINLNK2', 'None', 'UseMajor', 'Error', 'Try0', 'OTIM368', 'TCPFST', 'Close', 'UDPFST', 'Close', 'RFTEST', '0', 'CONFAIL', '0', 'EDISCNT', '8', 'ANT0', '2|1785|0', 'ANT1', '2|1788|1', 'QX', '1', 'Try0', '']</msg>
<msg timestamp="20190525 02:31:46.124" level="INFO">${b} = 89860918710006540682</msg>
<status status="PASS" starttime="20190525 02:31:46.121" endtime="20190525 02:31:46.124"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${ICCID_SIM['${b}']}</arg>
</arguments>
<assign>
<var>${sim}</var>
</assign>
<msg timestamp="20190525 02:31:46.128" level="INFO">${sim} = 8614619911775</msg>
<status status="PASS" starttime="20190525 02:31:46.125" endtime="20190525 02:31:46.128"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1150511+WA.SIM=${ICCID_SIM['${b}']}</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${d}</var>
</assign>
<msg timestamp="20190525 02:31:46.416" level="INFO">发送串口数据: IOT+D1150511+WA.SIM=8614619911775
应该收到串口数据: IOT
实际接收到的数据:  IOT+D1150511+WA.SIM=8614619911775;</msg>
<msg timestamp="20190525 02:31:46.417" level="INFO">${d} = 8614619911775</msg>
<status status="PASS" starttime="20190525 02:31:46.130" endtime="20190525 02:31:46.417"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${ICCID_SIM['${b}']}</arg>
</arguments>
<assign>
<var>${sim1}</var>
</assign>
<msg timestamp="20190525 02:31:46.421" level="INFO">${sim1} = 8614619911775</msg>
<status status="PASS" starttime="20190525 02:31:46.418" endtime="20190525 02:31:46.421"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${sim}'!='${d}'</arg>
<arg>fail</arg>
<arg>sim查询错误</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:46.422" endtime="20190525 02:31:46.424"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1150511+N.SN=${pid_start}</arg>
<arg>IOT+D1150511+N.SN=${pid_start}</arg>
</arguments>
<msg timestamp="20190525 02:31:46.719" level="INFO">发送串口数据: IOT+D1150511+N.SN=6914406
应该收到串口数据: IOT+D1150511+N.SN=6914406
实际接收到的数据:  IOT+D1150511+N.SN=6914406;</msg>
<status status="PASS" starttime="20190525 02:31:46.425" endtime="20190525 02:31:46.720"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1+N.SN=?</arg>
<arg>IOT+D3+N.SN=${pid_start}</arg>
</arguments>
<msg timestamp="20190525 02:31:47.021" level="INFO">发送串口数据: IOT+D1+N.SN=?
应该收到串口数据: IOT+D3+N.SN=6914406
实际接收到的数据:  IOT+D3+N.SN=6914406;</msg>
<status status="PASS" starttime="20190525 02:31:46.721" endtime="20190525 02:31:47.022"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1+N.P.D=?</arg>
<arg>IOT</arg>
</arguments>
<assign>
<var>${date}</var>
</assign>
<msg timestamp="20190525 02:31:47.323" level="INFO">发送串口数据: IOT+D1+N.P.D=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+D3+N.P.D=20190523;</msg>
<msg timestamp="20190525 02:31:47.325" level="INFO">${date} = 20190523</msg>
<status status="PASS" starttime="20190525 02:31:47.023" endtime="20190525 02:31:47.326"></status>
</kw>
<kw name="Zhongji Id" library="Utils">
<arguments>
<arg>t</arg>
<arg>d</arg>
<arg>${date}</arg>
<arg>${pid_start}</arg>
</arguments>
<assign>
<var>${tdid}</var>
</assign>
<msg timestamp="20190525 02:31:47.331" level="INFO">69014406</msg>
<msg timestamp="20190525 02:31:47.332" level="INFO">${tdid} = 010101190569014406</msg>
<status status="PASS" starttime="20190525 02:31:47.328" endtime="20190525 02:31:47.333"></status>
</kw>
<kw name="Zhongji Id" library="Utils">
<arguments>
<arg>t</arg>
<arg>c</arg>
<arg>${date}</arg>
<arg>${pid_start}</arg>
</arguments>
<assign>
<var>${tcid}</var>
</assign>
<msg timestamp="20190525 02:31:47.339" level="INFO">69014406</msg>
<msg timestamp="20190525 02:31:47.340" level="INFO">${tcid} = GID_T3_Group@@@010101190569014406</msg>
<status status="PASS" starttime="20190525 02:31:47.335" endtime="20190525 02:31:47.341"></status>
</kw>
<kw name="Zhongji Id" library="Utils">
<arguments>
<arg>a</arg>
<arg>d</arg>
<arg>${date}</arg>
<arg>${pid_start}</arg>
</arguments>
<assign>
<var>${adid}</var>
</assign>
<msg timestamp="20190525 02:31:47.348" level="INFO">69014406</msg>
<msg timestamp="20190525 02:31:47.349" level="INFO">${adid} = 010201190569014406</msg>
<status status="PASS" starttime="20190525 02:31:47.343" endtime="20190525 02:31:47.350"></status>
</kw>
<kw name="Zhongji Id" library="Utils">
<arguments>
<arg>a</arg>
<arg>c</arg>
<arg>${date}</arg>
<arg>${pid_start}</arg>
</arguments>
<assign>
<var>${acid}</var>
</assign>
<msg timestamp="20190525 02:31:47.355" level="INFO">69014406</msg>
<msg timestamp="20190525 02:31:47.356" level="INFO">${acid} = GID_T3_Group@@@010201190569014406</msg>
<status status="PASS" starttime="20190525 02:31:47.352" endtime="20190525 02:31:47.357"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+L1+mat3.f1.dide=?</arg>
<arg>IOT+L1+MAT3.F1.DIDE=${tdid}</arg>
</arguments>
<msg timestamp="20190525 02:31:47.626" level="INFO">发送串口数据: IOT+L1+mat3.f1.dide=?
应该收到串口数据: IOT+L1+MAT3.F1.DIDE=010101190569014406
实际接收到的数据:  IOT+L1+MAT3.F1.DIDE=010101190569014406;</msg>
<status status="PASS" starttime="20190525 02:31:47.359" endtime="20190525 02:31:47.627"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+L1+mat3.f1.ide=?</arg>
<arg>IOT+L1+MAT3.F1.IDE=${tcid}</arg>
</arguments>
<msg timestamp="20190525 02:31:47.928" level="INFO">发送串口数据: IOT+L1+mat3.f1.ide=?
应该收到串口数据: IOT+L1+MAT3.F1.IDE=GID_T3_Group@@@010101190569014406
实际接收到的数据:  IOT+L1+MAT3.F1.IDE=GID_T3_Group@@@010101190569014406;</msg>
<status status="PASS" starttime="20190525 02:31:47.628" endtime="20190525 02:31:47.929"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+V1+ai.m.info.req=</arg>
<arg>IOT+V1+AI.M.INFO.REQ=successful</arg>
</arguments>
<msg timestamp="20190525 02:31:48.230" level="INFO">发送串口数据: IOT+V1+ai.m.info.req=
应该收到串口数据: IOT+V1+AI.M.INFO.REQ=successful
实际接收到的数据:  IOT+V1+AI.M.INFO.REQ=successful;</msg>
<status status="PASS" starttime="20190525 02:31:47.930" endtime="20190525 02:31:48.231"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+C1+ai.m.dev.id=?</arg>
<arg>IOT+C1+AI.M.DEV.ID=${adid}</arg>
</arguments>
<msg timestamp="20190525 02:31:48.533" level="INFO">发送串口数据: IOT+C1+ai.m.dev.id=?
应该收到串口数据: IOT+C1+AI.M.DEV.ID=010201190569014406
实际接收到的数据:  IOT+C1+AI.M.DEV.ID=010201190569014406;</msg>
<status status="PASS" starttime="20190525 02:31:48.233" endtime="20190525 02:31:48.533"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+C1+ai.m.cli.id=?</arg>
<arg>IOT+C1+AI.M.CLI.ID=${acid}</arg>
</arguments>
<msg timestamp="20190525 02:31:48.835" level="INFO">发送串口数据: IOT+C1+ai.m.cli.id=?
应该收到串口数据: IOT+C1+AI.M.CLI.ID=GID_T3_Group@@@010201190569014406
实际接收到的数据:  IOT+C1+AI.M.CLI.ID=GID_T3_Group@@@010201190569014406;</msg>
<status status="PASS" starttime="20190525 02:31:48.534" endtime="20190525 02:31:48.835"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+V1+ai.app.st=1</arg>
<arg>IOT+V1+AI.APP.ST=successful</arg>
</arguments>
<msg timestamp="20190525 02:31:49.137" level="INFO">发送串口数据: IOT+V1+ai.app.st=1
应该收到串口数据: IOT+V1+AI.APP.ST=successful
实际接收到的数据:  IOT+V1+AI.APP.ST=successful;</msg>
<status status="PASS" starttime="20190525 02:31:48.836" endtime="20190525 02:31:49.138"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+ai.m.app.ack=?</arg>
<arg>IOT+S1+ai.m.app.ack=1</arg>
</arguments>
<msg timestamp="20190525 02:31:49.439" level="INFO">发送串口数据: IOT+S1+ai.m.app.ack=?
应该收到串口数据: IOT+S1+ai.m.app.ack=1
实际接收到的数据:  IOT+S1+AI.M.APP.ACK=1;</msg>
<status status="PASS" starttime="20190525 02:31:49.140" endtime="20190525 02:31:49.440"></status>
</kw>
<kw name="Write Setid File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${b}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.441" endtime="20190525 02:31:49.443"></status>
</kw>
<kw name="Write Setid File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${IMEI}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.445" endtime="20190525 02:31:49.446"></status>
</kw>
<kw name="Write Setid File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${sim}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.448" endtime="20190525 02:31:49.450"></status>
</kw>
<kw name="Write Setid File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${pid_start}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.451" endtime="20190525 02:31:49.454"></status>
</kw>
<kw name="Write Setid File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${tdid}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.455" endtime="20190525 02:31:49.457"></status>
</kw>
<kw name="Write Setid File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${adid}</arg>
<arg>\n</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.461" endtime="20190525 02:31:49.463"></status>
</kw>
<kw name="Pid Set" library="Utils">
<doc>功能:PID比较并写入配置文件</doc>
<arguments>
<arg>${pid_start}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.465" endtime="20190525 02:31:49.467"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>${b}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.469" endtime="20190525 02:31:49.472"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+S1+ai.m.con.st=?</arg>
<arg>IOT+S1+AI.M.CON.ST=${k}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.473" endtime="20190525 02:31:49.475"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+D1150511+WA.SIM=${ICCID_SIM['${b}']}</arg>
<arg>${d}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.476" endtime="20190525 02:31:49.479"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+D1150511+N.SN=${pid_start}</arg>
<arg>IOT+D1150511+N.SN=${pid_start}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.481" endtime="20190525 02:31:49.483"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+D1+N.P.D=?</arg>
<arg>${date}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.485" endtime="20190525 02:31:49.487"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+L1+mat3.f1.dide=?</arg>
<arg>IOT+L1+MAT3.F1.DIDE=${tdid}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.488" endtime="20190525 02:31:49.491"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+L1+mat3.f1.ide=?</arg>
<arg>IOT+L1+MAT3.F1.IDE=${tcid}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.492" endtime="20190525 02:31:49.494"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+V1+ai.m.info.req=</arg>
<arg>IOT+V1+AI.M.INFO.REQ=successful</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.495" endtime="20190525 02:31:49.497"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+C1+ai.m.dev.id=?</arg>
<arg>IOT+C1+AI.M.DEV.ID=${adid}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.499" endtime="20190525 02:31:49.501"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+C1+ai.m.cli.id=?</arg>
<arg>IOT+C1+AI.M.CLI.ID=${acid}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.502" endtime="20190525 02:31:49.505"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+V1+ai.app.st=1</arg>
<arg>IOT+V1+AI.APP.ST=successful</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.506" endtime="20190525 02:31:49.508"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>IOT+S1+ai.m.app.ack=?</arg>
<arg>IOT+S1+ai.m.app.ack=1</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.509" endtime="20190525 02:31:49.511"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.513" endtime="20190525 02:31:49.514"></status>
</kw>
<status status="PASS" starttime="20190525 02:30:34.680" endtime="20190525 02:31:49.515" critical="yes"></status>
</test>
<test id="s1-t3" name="GET_END">
<kw name="Get Local Time" library="Utils">
<assign>
<var>${time2}</var>
</assign>
<msg timestamp="20190525 02:31:49.523" level="INFO">${time2} = 1558722709.5228093</msg>
<status status="PASS" starttime="20190525 02:31:49.522" endtime="20190525 02:31:49.523"></status>
</kw>
<kw name="Round Int" library="Utils">
<doc>功能:做差(保留2位小数，针对小数点后面数字很多的)</doc>
<arguments>
<arg>${time1}</arg>
<arg>${time2}</arg>
</arguments>
<assign>
<var>${time3}</var>
</assign>
<msg timestamp="20190525 02:31:49.526" level="INFO">${time3} = 74.86</msg>
<status status="PASS" starttime="20190525 02:31:49.525" endtime="20190525 02:31:49.527"></status>
</kw>
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>(CESHI)MODEM INFO</arg>
<arg>(CESHI)MODEM</arg>
</arguments>
<assign>
<var>${a}</var>
</assign>
<msg timestamp="20190525 02:31:49.742" level="INFO">发送串口数据: (CESHI)MODEM INFO
应该收到串口数据: (CESHI)MODEM
实际接收到的数据:  (CESHI)MODEM 0,0,33,EC20F_CEFAGR06A01M4G_HL_BETA0404;DRV:V0.2 2018-2-8,Gprs;USIM:Ready,26;COPS:1|7,CHN-UNICOM;ICCID:89860918710006540682;IMSI:460099501781395;IMEI:861529043679022;LAC_SID:22291;CID_NID:214416149;BID:0;LOCALIP:10.38.25.240;BOARD:Ready,Tim398;PPP:Error,Try0,OTIM0;MAINLNK0:Tcp,UseMajor,Error,Try21,OTIM371;MAINLNK1:Tcp,UseMajor,Error,Try14,OTIM371;MAINLNK2:None,UseMajor,Error,Try0,OTIM371;TCPFST:Close;UDPFST:Close;RFTEST:0;CONFAIL:0;EDISCNT:8;ANT0:2|1784|0;ANT1:2|1788|1;QX:1,Try0;</msg>
<msg timestamp="20190525 02:31:49.742" level="INFO">${a} = (CESHI)MODEM 0,0,33,EC20F_CEFAGR06A01M4G_HL_BETA0404;DRV:V0.2 2018-2-8,Gprs;USIM:Ready,26;COPS:1|7,CHN-UNICOM;ICCID:89860918710006540682;IMSI:460099501781395;IMEI:861529043679022;LAC_SID:22291;CID_NID...</msg>
<status status="PASS" starttime="20190525 02:31:49.528" endtime="20190525 02:31:49.743"></status>
</kw>
<kw name="Get Flag 1" library="Utils">
<doc>:param str1: 串口返回的内容</doc>
<arguments>
<arg>${a}</arg>
<arg>ICCID</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${b}</var>
</assign>
<msg timestamp="20190525 02:31:49.745" level="INFO">['(CESHI)MODEM', '0', '0', '33', 'EC20F_CEFAGR06A01M4G_HL_BETA0404', 'DRV', 'V0.2', '2018-2-8', 'Gprs', 'USIM', 'Ready', '26', 'COPS', '1|7', 'CHN-UNICOM', 'ICCID', '89860918710006540682', 'IMSI', '460099501781395', 'IMEI', '861529043679022', 'LAC_SID', '22291', 'CID_NID', '214416149', 'BID', '0', 'LOCALIP', '10.38.25.240', 'BOARD', 'Ready', 'Tim398', 'PPP', 'Error', 'Try0', 'OTIM0', 'MAINLNK0', 'Tcp', 'UseMajor', 'Error', 'Try21', 'OTIM371', 'MAINLNK1', 'Tcp', 'UseMajor', 'Error', 'Try14', 'OTIM371', 'MAINLNK2', 'None', 'UseMajor', 'Error', 'Try0', 'OTIM371', 'TCPFST', 'Close', 'UDPFST', 'Close', 'RFTEST', '0', 'CONFAIL', '0', 'EDISCNT', '8', 'ANT0', '2|1784|0', 'ANT1', '2|1788|1', 'QX', '1', 'Try0', '']</msg>
<msg timestamp="20190525 02:31:49.746" level="INFO">${b} = 89860918710006540682</msg>
<status status="PASS" starttime="20190525 02:31:49.744" endtime="20190525 02:31:49.746"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>ICCID:${b}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.747" endtime="20190525 02:31:49.749"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>结束时间:${time2}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.750" endtime="20190525 02:31:49.753"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>耗时:${time3}秒</arg>
<arg>\n\n</arg>
<arg>*****************************</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.754" endtime="20190525 02:31:49.756"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190525 02:31:49.758" endtime="20190525 02:31:49.760"></status>
</kw>
<status status="PASS" starttime="20190525 02:31:49.518" endtime="20190525 02:31:49.761" critical="yes"></status>
</test>
<status status="PASS" starttime="20190525 02:30:34.192" endtime="20190525 02:31:49.766"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="Ai Test">Ai Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
