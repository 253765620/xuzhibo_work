<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.7.0 on linux)" generated="20190525 02:24:36.927">
<suite id="s1" name="Ai Test" source="/home/pi/production/case/ai_test.txt">
<test id="s1-t1" name="GET_Ready">
<kw name="Get Local Time" library="Utils">
<assign>
<var>${time1}</var>
</assign>
<msg timestamp="20190525 02:24:37.407" level="INFO">${time1} = 1558722277.4062533</msg>
<status status="PASS" starttime="20190525 02:24:37.405" endtime="20190525 02:24:37.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${time1}</arg>
</arguments>
<msg timestamp="20190525 02:24:37.414" level="INFO">${time1} = 1558722277.4062533</msg>
<status status="PASS" starttime="20190525 02:24:37.408" endtime="20190525 02:24:37.414"></status>
</kw>
<kw name="Write Abox File" library="Utils">
<doc>文件写入</doc>
<arguments>
<arg>开始时间:${time1}</arg>
</arguments>
<status status="PASS" starttime="20190525 02:24:37.416" endtime="20190525 02:24:37.418"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<status status="PASS" starttime="20190525 02:24:37.420" endtime="20190525 02:24:37.421"></status>
</kw>
<status status="PASS" starttime="20190525 02:24:37.401" endtime="20190525 02:24:37.421" critical="yes"></status>
</test>
<test id="s1-t2" name="abox自检+设置pid">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+D1+N.SN=?</arg>
<arg>IOT+D3</arg>
</arguments>
<assign>
<var>${is_have_pid}</var>
</assign>
<msg timestamp="20190525 02:24:37.638" level="INFO">发送串口数据: IOT+D1+N.SN=?
应该收到串口数据: IOT+D3
实际接收到的数据:  IOT+D3+N.SN=;</msg>
<msg timestamp="20190525 02:24:37.639" level="INFO">${is_have_pid} = </msg>
<status status="PASS" starttime="20190525 02:24:37.434" endtime="20190525 02:24:37.640"></status>
</kw>
<kw name="Length" library="Utils">
<arguments>
<arg>${is_have_pid}</arg>
</arguments>
<assign>
<var>${lenpid}</var>
</assign>
<msg timestamp="20190525 02:24:37.644" level="INFO">${lenpid} = 0</msg>
<status status="PASS" starttime="20190525 02:24:37.642" endtime="20190525 02:24:37.644"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${lenpid}&gt;1</arg>
<arg>Fail</arg>
<arg>PID不为空</arg>
</arguments>
<status status="PASS" starttime="20190525 02:24:37.645" endtime="20190525 02:24:37.647"></status>
</kw>
<kw name="${i} IN RANGE [ 20 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Serial Send" library="SerialLibrary">
<doc>功能:</doc>
<arguments>
<arg>IOT+S1+ai.m.con.st=?</arg>
<arg>IOT+S1+AI.M.CON.ST</arg>
</arguments>
<assign>
<var>${k}</var>
</assign>
<msg timestamp="20190525 02:24:37.940" level="INFO">发送串口数据: IOT+S1+ai.m.con.st=?
应该收到串口数据: IOT+S1+AI.M.CON.ST
实际接收到的数据:  IOT+S1+AI.M.CON.ST=1;</msg>
<msg timestamp="20190525 02:24:37.940" level="INFO">${k} = 1</msg>
<status status="PASS" starttime="20190525 02:24:37.650" endtime="20190525 02:24:37.941"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${k}'=='1'</arg>
</arguments>
<msg timestamp="20190525 02:24:37.943" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190525 02:24:37.941" endtime="20190525 02:24:37.944"></status>
</kw>
<status status="PASS" starttime="20190525 02:24:37.649" endtime="20190525 02:24:37.944"></status>
</kw>
<status status="PASS" starttime="20190525 02:24:37.648" endtime="20190525 02:24:37.944"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${i}==19</arg>
<arg>fail</arg>
<arg>IOT+S1+ai.m.con.st失败</arg>
</arguments>
<status status="PASS" starttime="20190525 02:24:37.945" endtime="20190525 02:24:37.947"></status>
</kw>
<kw name="Ai Test" library="NetTest">
<doc>- aibox自检的测试用例</doc>
<msg timestamp="20190525 02:26:18.977" level="INFO">发送串口数据: (CESHI)DSMCORE FACTORY-LOCK
应该收到串口数据: (CESHI)
实际接收到的数据:  (CESHI)DSMCORE FACTORY LOCKED;

发送串口数据: (CESHI)DSMCORE FACTORY-P0000000000000110
应该收到串口数据: (CESHI)
实际接收到的数据:  (CESHI)GOING;

发送串口数据: IOT+V1+ai.self.check=1
应该收到串口数据: IOT
实际接收到的数据:  IOT+V1+AI.SELF.CHECK=successful;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=255,255,255,255,255,255,255,255,255,255,255;

发送串口数据: IOT+C1+ai.sf.ck.r=?
应该收到串口数据: IOT
实际接收到的数据:  IOT+C1+AI.SF.CK.R=0,0,0,0,1,0,0,0,0,1,0;

['0', '0', '0', '0', '1', '0', '0', '1', '0']
Eth测试失败</msg>
<msg timestamp="20190525 02:26:18.985" level="FAIL">AI_BOX测试失败</msg>
<status status="FAIL" starttime="20190525 02:24:37.948" endtime="20190525 02:26:18.986"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn" type="teardown">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Fatal Error</arg>
</arguments>
<kw name="Fatal Error" library="BuiltIn">
<doc>Stops the whole test execution.</doc>
<msg timestamp="20190525 02:26:18.995" level="FAIL">AssertionError</msg>
<status status="FAIL" starttime="20190525 02:26:18.992" endtime="20190525 02:26:18.996"></status>
</kw>
<status status="FAIL" starttime="20190525 02:26:18.989" endtime="20190525 02:26:18.996">AssertionError</status>
</kw>
<status status="FAIL" starttime="20190525 02:24:37.425" endtime="20190525 02:26:18.998" critical="yes">AI_BOX测试失败

Also teardown failed:
AssertionError</status>
</test>
<test id="s1-t3" name="GET_END">
<tags>
<tag>robot-exit</tag>
</tags>
<status status="FAIL" starttime="20190525 02:26:19.005" endtime="20190525 02:26:19.011" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" starttime="20190525 02:24:36.946" endtime="20190525 02:26:19.021"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="2">Critical Tests</stat>
<stat pass="1" fail="2">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="1" info="combined" combined="NOT robot-exit">NOT robot-exit</stat>
<stat pass="0" fail="1">robot-exit</stat>
</tag>
<suite>
<stat pass="1" fail="2" id="s1" name="Ai Test">Ai Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
